<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Levmegf</title>
  
  <subtitle>做生活的高手</subtitle>
  <link href="http://levmegf.github.io/atom.xml" rel="self"/>
  
  <link href="http://levmegf.github.io/"/>
  <updated>2022-12-07T09:26:41.464Z</updated>
  <id>http://levmegf.github.io/</id>
  
  <author>
    <name>Levmegf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>形容</title>
    <link href="http://levmegf.github.io/2022/12/07/%E5%BD%A2%E5%AE%B9/"/>
    <id>http://levmegf.github.io/2022/12/07/%E5%BD%A2%E5%AE%B9/</id>
    <published>2022-12-07T09:25:29.667Z</published>
    <updated>2022-12-07T09:26:41.464Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1336856864&auto=1&height=66"></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=1336</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>pan</title>
    <link href="http://levmegf.github.io/2022/06/05/pan/"/>
    <id>http://levmegf.github.io/2022/06/05/pan/</id>
    <published>2022-06-05T08:39:16.324Z</published>
    <updated>2022-06-05T08:38:53.197Z</updated>
    
    <content type="html"><![CDATA[<p>程序设计语言包括机器语言、汇编语言和高级语言。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>解释程序对高级语言编写的程序是一边翻译，一边执行的。下次执行同样的程序时，还必须重新翻译。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>算法是解决某个问题所需要的方法和步骤。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>Python是一种用途广泛、解释型、面向对象的程序设计语言。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>不可以在同一台计算机上安装多个Python版本。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>Python程序是区分大小写的。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>Python代码的注释只有一种方式，那就是使用#符号。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>Python使用缩进来体现代码之间的逻辑关系。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>Python中的input()函数以字符串的形式返回用户输入的数据。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>eval()、int()以及float()函数都可用于将字符串转换为数值。<br>A. 对<br>B. 错<br>参考答案：<br>A</p><p>Python的标识符必须以字母或下画线开头，不能以数字开头。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>Python不允许使用关键字（保留字）作为变量名，允许使用内置函数名作为变量名，但这会改变函数名的含义。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在Python中，可以不加声明就使用变量，但使用前需要初始化变量。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>Python其实不支持命名常量，只是约定在程序运行过程中值不会改变的变量为命名常量。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在Python中，同一个变量在当前作用域内可以先后赋予不同类型的值。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在Python中，字符串、列表、元组和字典都属于序列类型。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在Python中，”+”运算符可以用来连接字符串并生成新的字符串。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在Python中，列表只能包含相同类型的数据。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>执行语句print(len({}))，其输出结果是1。    0<br>A. 对<br>B. 错<br>参考答案：<br>B<br>内置函数id(object)返回对象object在其生命周期内的内存地址。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>执行语句print(int(True))，其输出结果是1。<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>执行语句print(bool(0))，其输出结果是False。<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>表达式3&lt;5&gt;2的值为True。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>表达式3 and 5的值为True。<br>A. 对<br>B. 错<br>参考答案：<br>B</p><p>表达式3 or 5 的值为True。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>表达式3 not in [1, 2, 3]的值为False。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>交互方式下，已知a = 257和b = 257，那么表达式a is b的值为True。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>下列程序的输出结果是苹果：</p><p>if True:<br>    if False:<br>        print(“香蕉”)<br>    else:<br>        print(“苹果”)<br>else:<br>    if True:<br>        print(“红枣”)<br>    else:<br>        print(“玉米”)<br>A. 对<br>B. 错<br>参考答案：<br>A<br>下列程序的输出结果是”Small number.”。</p><p>x = 5<br>if x &gt;= 10:<br>    print(“Big number!”)<br>elif:<br>    print(“Small number.”)<br>A. 对<br>B. 错<br>参考答案：<br>B<br>条件表达式5 if 5&gt;6 else (6 if 3&gt;2 else 5)的值为6。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>下面while循环执行的次数为6次。<br>k = 10<br>while k &gt;= 5:<br>    k = k - 1<br>A. 对<br>B. 错<br>参考答案：<br>A<br>表达式len(range(1,10))的值为10。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在Python中，可以使用 for 作为变量名。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>下面程序的输出结果是14。<br>count = 0<br>for x in range(2, 5):<br>    count = count + x<br>print(count)<br>A. 对<br>B. 错<br>参考答案：<br>B</p><p>对于下面程序：<br>total = 0<br>for i in range(5):<br>    total += i<br>print(i)<br>for循环结束后，循环变量i不存在，导致程序错误。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>对于带有else子句的for语句和while语句，当循环因循环条件不成立而自然结束时，会执行else子句中的代码。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在循环中，break语句的作用是跳过当前当次循环。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在循环中，continue语句的作用是结束当前循环。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>下面程序的输出结果是2。</p><p>m = 0<br>x = 1<br>while x &lt; 5:<br>    y = 1<br>    while y &lt; 4:<br>        m = m + y<br>        y = y + 3<br>    x = x + 2<br>print(m)<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在编写嵌套循环时，为了提高运行效率，应尽量减少内循环中不必要的计算。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>函数是代码重用的一种方式。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在Python中，自定义函数的关键字是def。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>自定义函数时，即使该函数不需要接收任何参数，也必须在函数名后保留一对空的圆括号来表示这是一个函数。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>如果函数中没有return语句或者return语句不带任何返回值，那么该函数的返回值为None。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在调用函数时，可以通过关键字参数的形式进行传值，从而避免必须记住函数形参顺序的麻烦。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>自定义函数时，若一个参数带有默认值，那么所有其他参数都必须设置默认值。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>形参可以看做是函数内部的局部变量，函数运行结束之后形参就不可访问了。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在自定义函数内部没有办法定义全局变量。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在同一个作用域内，局部变量会隐藏同名的全局变量。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在自定义函数时，某个参数名字前面带有*符号表示可变长度参数，可以接收任意多个关键字参数并将其存放于一个字典之中。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>海龟图起源于LOGO编程语言。这是一个很经典的专门用来教小孩子编程的图形模块。Python本身实现并内置了海龟图模块。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在turtle中，画布（Canvas）是用于绘制图形的矩形区域。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在turtle中，画布绘图坐标系的原点默认在屏幕左上角。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在turtle中，画布绘图坐标系的绝对0度方向默认指向画布正右方。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>mainloop方法或done方法开始事件循环，必须是海龟图形程序中的最后一条语句。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在turtle中，clear方法用于清除画布，并将海龟状态和位置重置为起始默认值。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在turtle中，setheading(to_angle)或seth(to_angle)方法，将海龟的方向设置为to_angle，to_angle为角度。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>turtle.circle(50)沿顺时针方向绘制了一个半径为50像素的圆，圆心在在海龟左侧。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>turtle.circle(-90，90)沿顺时针方向绘制了一个半径为90像素的弧形，圆心在在海龟右侧。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>turtle.dot(100, “red”)绘制了一个半径为100像素的红色实心点。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>Unicode编码是目前最广泛使用的字符编码。UTF-8是在互联网上使用最广泛的一种Unicode的实现方式。Python 3默认使用UTF-8编码。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在Python中，字符串字面量可以表示为以单引号’或双引号”括起来的一个字符序列。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>字符串属于Python序列类型，支持下标操作。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>字符串是不可变对象，不可以直接修改字符串中的内容。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>表达式’ab’ in ‘acbed’的值为True。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>假设s1=”Python”，s2=”Python”，则表达式s1 is s2的值为True。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>len(“HZNU”)返回的结果是4，len(“杭州师大”)返回的结果也是4。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>“HHZZNNUU”[::2]返回的结果是”HZNU”。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>“HZNU”[::-1]返回的结果是”HZNU”。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>已知x为非空字符串，那么表达式 ‘’.join(x.split())==x 的值一定为True。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>列表是可变对象，可以直接修改列表中的元素值。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>同一个列表中的元素类型可以各不相同。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>只能通过切片访问列表中的元素，不能使用切片修改列表中的元素。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>对于列表而言，在尾部追加元素比在中间位置插入元素速度更快一些，尤其是对于包含大量元素的列表。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>已知x为非空列表，那么表达式 sorted(x,reverse=True) == list(reversed(x)) 的值一定是True。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>元组是不可变对象，但如果元组中的元素是可变对象，这样的可变对象是可以修改的。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>只能通过切片访问元组中的元素，不能使用切片修改元组中的元素。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>元组的访问速度比列表要快一些，如果定义了一系列常量值，并且主要用途仅仅是对其进行遍历而不需要进行任何修改，建议使用元组而不使用列表。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>表达式 (1,) + (2,) 的值为3。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>表达式tuple(zip(*[[1, 2, 3], [4, 5, 6]]))的值为((1, 4), (2, 5), (3, 6))。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>列表可以用find()方法来搜索数据是否在列表中。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>将列表中的元素顺序打乱的shuffle()方法不是random模块中的方法。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>列表lst=[12, -5, -22, -10, -26, 35, 0, 49, 3, -21]，lst[::]的结果是[12, -5, -22, -10, -26, 35, 0, 49, 3, -21]。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>列表lst=[12, -5, -22, -10, -26, 35, 0, 49, 3, -21]，lst[::-1]的结果是[-21, 3, 49, 0, 35, -26, -10, -22, -5, 12]。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>列表lst=[12, -5, -22, -10, -26, 35, 0, 49, 3, -21]，lst[::2]的结果是[12, -22, -26, 0, 3]。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>列表lst=[12, -5, -22, -10, -26, 35, 0, 49, 3, -21]，lst[1::2]的结果是[12, -22, -26, 0, 3]。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>列表lst=[12, -5, -22, -10, -26, 35, 0, 49, 3, -21]，lst[3:8:2]的结果是[-10, 35, 49]。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>列表lst=[12, -5, -22, -10, -26, 35, 0, 49, 3, -21]，lst[0:100]的结果是错误。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>列表lst=[12, -5, -22, -10, -26, 35, 0, 49, 3, -21]，lst[100:]的结果是[]。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>列表lst=[12, -5, -22, -10, -26, 35, 0, 49, 3, -21]，lst[100]的结果是运行错误。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>字典中的键不允许重复。<br>【来源】<br>《Python程序设计基础》第6章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>字典中的值不允许重复。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>字典中的键可以是元组。<br>【来源】<br>《Python程序设计基础》第6章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>字典中的键可以是列表。<br>【来源】<br>《Python程序设计基础》第6章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>字典中的键可以对应多个值。<br>【来源】<br>《Python程序设计基础》第6章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>字典中的元素之间存在顺序关系。<br>【来源】<br>《Python程序设计基础》第6章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>字典是可变对象，可以直接修改字典中的元素值。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>当以指定键为下标给字典对象赋值时，若该键存在则表示修改该键对应的值，若不存在则表示为字典对象添加一个新的键/值对。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>可以使用空的花括号{}或内置函数dict()创建一个空字典。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>执行语句d ={[1, 2]:3, [3, 4]:7}，创建了字典d。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>集合中的元素不允许重复。<br>【来源】<br>《Python程序设计基础》第6章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>集合的元素可以是任意数据类型。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>集合中的元素可以是元组。<br>【来源】<br>《Python程序设计基础》第6章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>集合中的元素可以是列表。<br>【来源】<br>《Python程序设计基础》第6章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>集合中的元素可以是字典。<br>【来源】<br>《Python程序设计基础》第6章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>集合中的元素之间存在顺序关系。<br>【来源】<br>《Python程序设计基础》第6章思考与练习。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>集合分为可变集合和不可变集合。可以直接修改不可变集合中的元素值。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>可以通过下标来访问集合中的元素。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>可以使用空的花括号{}或内置函数set()创建一个空集合。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>假设set1= {1, 2, 3}，set2={1, 2, 3}，则表达式set1 is set2的值为True。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>若不关心元素的顺序，使用集合来存储数据比使用列表效率更高。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>len(set([0,4,5,6,0,7,8])的结果是7。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>a={}，type(a)结果是&lt;class ‘set’&gt;。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>下面程序的运行结果一定是：1 2 3 4。</p><p>set1={1,2,3,4}<br>for i in set1:<br>    print(i, end=” “)<br>A. 对<br>B. 错<br>参考答案：<br>B<br>已知s1和s2是两个集合，则执行s1.union(s2)后，s1中的元素是原来s1和s2两个集合中的元素的并集。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>Python属于编译型程序设计语言。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>Python编写的程序和C/C++编写的程序相比运行效率低。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>Python中，布尔型只有 True 和 False 两个值，但它们的值本质上是 1 和 0，因此它们可以和数字进行数学运算。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>Python不仅可以对整数做求余运算，也可以对浮点数做求余运算。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>字符串 r’\bcd’ 的长度是3。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在Python中，用if-else结构实现的功能，只用if同样能实现。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>已知列表x = [1, 2, 3]，那么执行语句x = 3之后，变量x的地址不变。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>表达式[] == None的值为True。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>表达式0 or not 1 and 2的值为True。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在编写多层循环时，为了提高运行效率，应尽量减少内循环中不必要的计算。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>如果仅仅是用于控制循环次数，那么使用for i in range(20)和for i in range(20, 40)的作用是等价的。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>表达式(i**2 for i in range(100))的结果是个元组。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>对于大于2的正整数n，如果表达式0 not in [n % d for d in range(2, n)]的值为True，则说明n是素数。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>表达式’a’ + 1的值为’b’。<br>A. 对<br>B. 错<br>参考答案：<br>B</p><pre><code>创建只包含一个元素的元组时，必须在元素后面加一个逗号，例如 a = (3,)。</code></pre><p>A. 对<br>B. 错<br>参考答案：<br>A<br>表达式list(‘[1, 2, 3]’)的值是[1, 2, 3]。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>已知x是个列表对象，那么执行语句y=x后，对y所做的任何对表中元素的增加、删除等操作都会同样作用到x上。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>函数内部使用局部变量时，其名称不得与程序中的全局变量重名。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>调用函数之后，实参的值是否改变取决于函数中的操作，与实参变量类型无关。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>调用函数时，可变数量参数一定是被当做元组类型传递到函数中。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>Python程序只能使用源代码进行运行，不能打包成可执行文件。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>对于Python程序的代码来说，缩进是硬性要求，如果缩进错了，可能会导致程序无法运行或运行结果错误。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>只有Python扩展库才需要导入以后才能使用，Python标准库不需要导入即可使用。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>Python变量使用前必须先声明，一旦声明后就不能在当前作用域内改变其类型。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>使用内置函数input()接收用户输入时，不论用户输入什么格式的内容，一律按字符串进行返回。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在Python中，关系运算符可以连续使用，例如1&lt;3&lt;5等价于1&lt;3 and 3&lt;5。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>逻辑运算符and和or连接多个表达式时具有”短路”求值特点，只计算必须计算的表达式。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>如果仅仅是用于控制循环次数，那么使用for i in range(20)和for i in range(20, 40)的作用是等价的。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>对于带有else子句的循环语句，若因循环条件表达式不成立而自然结束循环，则会执行else子句中的代码。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在if语句的条件中不允许使用赋值运算符”=”，会提示语法错误。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在Python中，使用关键字define定义函数。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>编写函数时，一般建议先对参数进行合法性检查，然后再编写正常的功能代码。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在函数内部没有办法定义全局变量。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在Python中，不能在一个函数的定义中再定义一个嵌套函数。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>加法运算符”+”可以用来连接字符串并生成新字符串。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>已知x为非空列表，那么表达式 sorted(x, reverse=True) == list(reversed(x)) 的值一定是True。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>对于列表，尤其是对于包含大量元素的列表，在尾部追加元素比在中间位置插入元素速度更快一些，。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>假设x是含有5个元素的列表，那么切片操作x[10:]是无法执行的，会抛出异常。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>假设x为列表对象，那么x.pop()和x.pop(-1)的作用是一样的。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>使用列表对象的remove()方法可以删除列表中指定元素的所有匹配项，如果列表中不存在要删除的指定元素则抛出异常。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>给第一台电子数字计算机ENIAC编程的第一代程序员是6位女士。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>Python语言发明人Guido给Python语言起名的原因是他家有只宠物蛇。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>解释是将程序源代码全部翻译成机器指令，再加上一些描述信息，生成可执行文件。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>解释是将程序源代码全部翻译成机器指令，再加上一些描述信息，生成可执行文件。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>Python程序中每条语句以分号结尾。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在集成开发环境中，调试程序时，通常可以设置断点。程序执行时遇到断点就暂停执行，并且可以查看当前各变量的状态。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在Python中，标识符区分大小写，所以student和Student不是同一个变量。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>执行，输出结果为”52.50%”。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在自定义函数时，某个参数名字前面带有<em>符号表示可变长度参数，可以接收任意多个位置参数并将其存放于一个字典之中。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>外层函数定义了局部变量x，如果内层函数只获取x的值、不修改x的值，则可以不使用nonlocal关键字。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>能够使用next函数获取下一个元素值的对象都是迭代器。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>已知s=”学习”，则执行s[0]=’复’后s中存储的字符串被修改为”复习”。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>正则表达式”^ab[\s\S]<em>c$”可以与任一以”ab”开头、以”c”结尾的字符串匹配。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>通过下标”[]”不仅可以访问元组中的某个元素，还可以对元素进行修改。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>的输出结果为”[0, 1, 2, 3, 4]”。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>通过”{}”可以创建一个空集合。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>已知，则通过可以向s中添加一个新的元组类型的元素。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>覆盖方法（方法重写）是指子类可以对从父类中继承过来的方法进行重新定义，从而使得子类对象可以表现出与父类对象不同的行为。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>如果一个异常无法被任何except子句捕获，则程序会抛出该异常并停止。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>已知有语句”assert num==0”，则当num的值为0时会引发AssertionError异常。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>将一个文件与程序中的文件对象关联起来的过程，称为”读取”文件。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>高级语言程序要被机器执行，只有用解释器来解释执行。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在Python中，关键字（保留字）可以作为标识符。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>已知x等于3，则语句x=’3’是错误的。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>eval函数用于数值表达式求值，例如eval(2</em>3+1)。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>语句print(0.1 + 0.2 == 0.3)的输出结果是True。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>Python函数可以使用return语句同时返回多个结果。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>Python函数定义中没有对参数指定类型，这说明参数在函数中可以当作任意类型使用。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>全局变量会增加不同函数之间的耦合度，从而降低代码可读性，应尽量避免过多使用全局变量。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在自定义函数时，某个参数名字前面带有</em>符号表示可变长度参数，可以接收任意多个位置参数并将其存放于一个元组之中。</p><p>A. 对<br>B. 错<br>参考答案：<br>A<br>执行from math import sin后，可以直接使用sin函数，如sin(3)。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>“+”运算符不仅可以实现数值的相加、字符串连接，还可以实现列表、元组的连接和集合的并集运算。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>在Python中，整数、浮点数、布尔值、字符串以及元组都是不可变对象，而列表、字典和集合是可变对象。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>表达式sorted([111,2, 33], key=lambda x: -len(str(x)))的值为[2, 33, 111]。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>(0, 1) in zip(range(4), range(2, 6))的计算结果是True。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>字典的“键”必须是不可变的。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>集合可以包含相同的元素。<br>A. 对<br>B. 错<br>参考答案：<br>B<br>每一个对象都是object类的一个实例。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>在Python 中，允许利用raise语句由程序主动引发异常。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>Python中的多态是借助鸭子类型实现的。<br>A. 对<br>B. 错<br>参考答案：<br>A<br>只使用一个try语句能够捕捉多种类型的错误。<br>A. 对<br>B. 错<br>参考答案：<br>A</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;程序设计语言包括机器语言、汇编语言和高级语言。&lt;br&gt;A. 对&lt;br&gt;B. 错&lt;br&gt;参考答案：&lt;br&gt;A&lt;br&gt;解释程序对高级语言编写的程序是一边翻译，一边执行的。下次执行同样的程序时，还必须重新翻译。&lt;br&gt;A. 对&lt;br&gt;B. 错&lt;br&gt;参考答案：&lt;br&gt;A&lt;br&gt;算</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>shi</title>
    <link href="http://levmegf.github.io/2022/06/05/shi/"/>
    <id>http://levmegf.github.io/2022/06/05/shi/</id>
    <published>2022-06-05T08:38:24.638Z</published>
    <updated>2022-06-05T08:38:08.840Z</updated>
    
    <content type="html"><![CDATA[<p>描述】<br>让我们学习用Python语言向世界问好。”Hello World”示例程序最早出现于1972年，由贝尔实验室成员Brian Kernighan撰写的内部技术文件《Introduction to the Language B》之中。不久同作者于1974年所撰写的《Programming in C: A Tutorial》，也延用这个示例。<br>一般来说，这是每一种计算机编程语言中最基本、最简单的程序，亦通常是初学者所编写的第一个程序。它还可以用来确定该语言的编译器、程序开发环境，以及运行环境是否已经安装妥当。将”Hello World”作为第一个示范程序，已经成为编程语言学习的传统。<br>我们在这里继续传统，这也是一种向前辈们致敬的方式之一吧！<br>【输入】<br>没有输入。<br>【输出】<br>Hello World!<br>【来源】<br>《Python程序设计基础》第1章编程题1。<br>【提示】<br>可以在下面的编辑框中直接编写程序并保存。也可以在本机编写调试程序，然后将程序复制粘贴至编辑框并保存。<br>程序中不要有任何用户友好性提示等的输出，只能严格按照题目中所要求的输出格式来输出。可以运行自己的程序，用题目中的输入示例来输入，如果得到的输出和输出示例完全相同，一个字符也不多，一个字符也不少，那么这样的格式就是对的了。<br>参考答案：<br>print(“Hello World!”)</p><p>【描述】<br>编写程序，输出指定的由’*’组成的倒三角图案。（要求：第一行行首无空格，每行行尾无空格）<br>【输入】<br>没有输入。<br>【输出】</p><hr><hr><ul><li>*</li><li>【来源】<br>《Python程序设计基础》第1章编程题2。<br>【提示】<br>可以在下面的编辑框中直接编写程序并保存。也可以在本机编写调试程序，然后将程序复制粘贴至编辑框并保存。<br>程序中不要有任何用户友好性提示等的输出，只能严格按照题目中所要求的输出格式来输出。可以运行自己的程序，用题目中的输入示例来输入，如果得到的输出和输出示例完全相同，一个字符也不多，一个字符也不少，那么这样的格式就是对的了。<br>参考答案：<br>print(“* * * <em>“)<br>print(“</em> * <em>“)<br>print(“</em> <em>“)<br>print(“</em>“)<br>【描述】<br>编写程序，计算下列数学表达式的结果并输出，小数点后保留3位。</li></ul><p>【输入】<br>没有输入。<br>【输出】<br>输出结果小数点后保留 3 位。<br>参考答案：<br>print(format(4 * (1 - 1.0 / 3 + 1.0 / 5 - 1.0 / 7 + 1.0 / 9 - 1.0 / 11 + 1.0 / 13 )<br>描述】<br>编写程序，计算下列数学表达式的结果并输出，小数点后保留3位。</p><p>【输入】<br>没有输入。<br>【输出】<br>输出结果小数点后保留 3 位。<br>【提示】<br>**为幂运算符，x ** 0.5为求x的平方根。<br>参考答案：<br>x = ((3 ** 4 + 5 * (6 ** 7)) / 8) ** 0.5<br>print(“%.3f” % (x))<br>【描述】<br>编写程序，从键盘输入两个整数，计算并输出这两个整数的和、差、积、商。<br>【输入】<br>分行输入两个整数。<br>【输出】<br>分行输出两个整数的和、差、积、商。<br>【输入示例】</p><p>5<br>3<br>【输出示例】</p><p>5 + 3 = 8<br>5 - 3 = 2<br>5 * 3 = 15<br>5 / 3 = 1.6666666666666667<br>【来源】<br>《Python程序设计基础》第1章编程题3。<br>【提示】<br>可以在下面的编辑框中直接编写程序并保存。也可以在本机编写调试程序，然后将程序复制粘贴至编辑框并保存。<br>程序中不要有任何用户友好性提示等的输出，只能严格按照题目中所要求的输出格式来输出。可以运行自己的程序，用题目中的输入示例来输入，如果得到的输出和输出示例完全相同，一个字符也不多，一个字符也不少，那么这样的格式就是对的了。<br>参考答案：<br>a = int(input())<br>b = int(input())<br>print(a, “+”, b, “=”, a + b)<br>print(a, “-“, b, “=”, a - b)<br>print(a, “*”, b, “=”, a * b)<br>print(a, “/“, b, “=”, a / b)</p><p>【描述】<br>编写程序，给定一个摄氏温度C，计算对应的华氏温度F。转换的公式如下：</p><p>【输入】<br>在一行中给出一个摄氏温度。<br>【输出】<br>在一行中输出对应的华氏温度，精确到小数点后1位。<br>【输入示例】<br>100<br>【输出示例】</p><p>212.0<br>【来源】<br>《Python程序设计基础》第1章编程题4。<br>【提示】<br>可以在下面的编辑框中直接编写程序并保存。也可以在本机编写调试程序，然后将程序复制粘贴至编辑框并保存。<br>程序中不要有任何用户友好性提示等的输出，只能严格按照题目中所要求的输出格式来输出。可以运行自己的程序，用题目中的输入示例来输入，如果得到的输出和输出示例完全相同，一个字符也不多，一个字符也不少，那么这样的格式就是对的了。<br>参考答案：<br>c = float(input())<br>f = 9 / 5 * c + 32<br>print(format(f, “.1f”))</p><p>【描述】<br>编写程序，从键盘输入矩形的宽度和高度，计算矩形的面积。结果保留2位小数。<br>【输入】<br>分行输入矩形宽度和高度。<br>【输出】<br>在一行中输出矩形面积，结果保留2位小数。<br>【输入示例】</p><p>2.5<br>3.5<br>【输出示例】</p><p>8.75<br>【来源】<br>《Python程序设计基础》第1章编程题5。<br>【提示】<br>可以在下面的编辑框中直接编写程序并保存。也可以在本机编写调试程序，然后将程序复制粘贴至编辑框并保存。<br>程序中不要有任何用户友好性提示等的输出，只能严格按照题目中所要求的输出格式来输出。可以运行自己的程序，用题目中的输入示例来输入，如果得到的输出和输出示例完全相同，一个字符也不多，一个字符也不少，那么这样的格式就是对的了。<br>参考答案：<br>width = float(input())<br>height = float(input())<br>print(“%.2f” % (width * height))</p><p>【描述】<br>输入一个圆环的内外半径，计算圆环的面积。inside和outside分别表示圆环的内外半径，题目保证外半径大于内半径。<br>假设π为3.14159。<br>【输入】<br>输入圆环的外半径和内半径。<br>【输出】<br>输出对应的圆环面积，结果保留2位小数。<br>【输入示例】</p><p>3.5<br>2.5<br>【输出示例】</p><p>18.85<br>【提示】<br>可以在下面的编辑框中直接编写程序并保存。也可以在本机编写调试程序，然后将程序复制粘贴至编辑框并保存。<br>程序中不要有任何用户友好性提示等的输出，只能严格按照题目中所要求的输出格式来输出。可以运行自己的程序，用题目中的输入示例来输入，如果得到的输出和输出示例完全相同，一个字符也不多，一个字符也不少，那么这样的格式就是对的了。<br>参考答案：<br>outside = float(input())<br>inside = float(input())<br>PI = 3.14159<br>area = PI * (outside * outside - inside * inside)<br>print(“%.2f” % (area))</p><p>【描述】<br>慧慧有5元钱，她想去买冰棍吃，冰棍的价格各不相同，根据冰棍的价格，计算慧慧最多能买多少根冰棍。<br>【输入】<br>一个数，表示一根冰棍的价格，单位是元。<br>【输出】<br>一个整数，小明最多能买到的冰棍数。<br>【输入示例】</p><p>1.3<br>【输出示例】</p><p>3<br>参考答案：<br>x = float(input())<br>print(int(5 / x))</p><p>【描述】<br>分行输入三个值a、b、c，输出如下公式的值。</p><p>【输入】<br>分行输入三个整数。<br>【输出】<br>在一行中输出公式值。<br>【输入示例】<br>3<br>4<br>5<br>【输出示例】</p><p>-44<br>参考答案：<br>a, b, c = int(input()), int(input()), int(input())<br>print(b * b - 4 * a * c)</p><p>描述】<br>计算a+b。a、b为整数。<br>【输入】<br>在一行上输入a、b，其间以空格间隔。<br>【输出】<br>输出一行，a+b的值。<br>【输入示例】</p><p>5 3<br>【输出示例】</p><p>8<br>参考答案：<br>a, b = map(int, input().split())<br>print(a + b)</p><p>描述】<br>编写程序，从键盘输入两个整数，存放在变量a和b中，并交换a和b中的值。<br>【输入】<br>一行中给出整数a和b，其间以空格分隔。<br>【输出】<br>一行中输出交换后的整数a和b，其间以空格分隔。<br>【输入示例】</p><p>5 3<br>【输出示例】</p><p>3 5<br>【来源】<br>《Python程序设计基础》第2章编程题2。<br>参考答案：<br>a, b = map(int, input().split())<br>a, b = b, a<br>print(a, b)</p><p>【描述】<br>编写程序，从键盘输入两个整数，计算并输出这两个整数的和、平均值、最小值和最大值。平均值保留2位小数。<br>【输入】<br>分行输入两个整数。<br>【输出】<br>分行输出两个整数的和、平均值、最小值和最大值。平均值保留2位小数。<br>【输入示例】</p><p>5<br>4<br>【输出示例】</p><p>9<br>4.50<br>4<br>5<br>【来源】<br>《Python程序设计基础》第2章编程题1。<br>参考答案：<br>num1 = int(input())<br>num2 = int(input())<br>total = num1 + num2<br>print(“%d” % (total))<br>average = total / 2.0;<br>print(“%.2f” % (average))<br>print(“%d” % min(num1, num2))<br>print(“%d” % max(num1, num2))</p><p>【描述】<br>编写程序，读入一个在100和999之间的整数，然后输出按位逆序后的数。当输入的整数含有结尾的0时，输出不应带有前导的0。比如输入100，输出应该是1。<br>【输入】<br>在一行中给出一个在100和999之间的整数。<br>【输出】<br>在一行中输出按位逆序后的数。<br>【输入示例】<br>123<br>【输出示例】</p><p>321<br>【来源】<br>《Python程序设计基础》第2章编程题3。<br>【提示】<br>数的各位分离是指将整数n的每一位数取出，在取数的过程中，反复运用’%’和’//‘运算符，”n % 10”运算可以取出整数n的个位数，而”n //10”运算可以将整数n的十位数移至个位数、百位数移至十位数、……，反复运用这两个表达式就可以取出整数n的每一位数。<br>参考答案：<br>n = int(input())<br>a = n % 10<br>b = (n // 10) % 10<br>c = n // 100<br>n = a * 100 + b * 10 + c<br>print(n)</p><p>【描述】<br>编写程序，从键盘输入a，计算表达式</p><p>的值，a≠-1。结果保留2位小数。<br>【输入】<br>在一行中输入a的值。<br>【输出】<br>在一行中输出表达式的值，结果保留2位小数。<br>【输入示例】<br>2<br>【输出示例】</p><p>2.26<br>【来源】<br>《Python程序设计基础》第2章编程题4。<br>参考答案：<br>import math<br>a = float(input())<br>print(“%.2f” % ((math.cos(50 * math.pi / 180) + math.sqrt(37.5))/(a+1)))</p><p>【描述】<br>编写程序，输入存款（money）、存期（year）和年利率（rate），计算存款到期时的税前利息（interest）。结果保留2位小数。公式如下：</p><p>【输入】<br>分行输入存款（money）、存期（year）和年利率（rate）。<br>【输出】<br>在一行中输出存款到期时的税前利息（interest），结果保留2位小数。<br>【输入示例】</p><p>10000<br>3<br>0.025<br>【输出示例】</p><p>768.91<br>【来源】<br>《Python程序设计基础》第2章编程题5。<br>参考答案：<br>money = float(input())<br>year = int(input())<br>rate = float(input())<br>interest = money * (1 + rate) ** year - money<br>print(“%.2f” % (interest))</p><p>【描述】<br>将一个大写字母转换为小写字母。<br>【输入】<br>输入一个字母。<br>【输出】<br>输出对应的小写字母。注意：若输入的是小写字母，则直接输出。<br>【输入示例】<br>A<br>【输出示例】<br>a<br>参考答案：<br>ch = input()<br>print(ch.lower())</p><p>【描述】<br>编写程序，顺序读入浮点数1、整数、字符、浮点数2，再按照字符、整数、浮点数1、浮点数2的顺序输出。<br>【输入】<br>在一行中顺序给出浮点数1、整数、字符、浮点数2，其间以空格分隔。 <br>【输出】 <br>在一行中按照字符、整数、浮点数1、浮点数2的顺序输出，其中浮点数保留小数点后2位。 <br>【输入示例】</p><p>2.12 88 c 4.7<br>【输出示例】</p><p>c 88 2.12 4.70<br>参考答案：<br>line = input().split()<br>d1 = float(line[0])<br>i = int(line[1])<br>ch = line[2]<br>d2 = float(line[3])<br>print(ch, i, format(d1, “.2f”), format(d2, “.2f”))</p><p>【描述】<br>输入一个整数和进制，转换成十进制输出。<br>【输入】<br>在一行中输入整数和进制。注意，整数可能是十六进制的。<br>【输出】<br>在一行中十进制输出结果。<br>【输入示例】<br>45,8<br>【输出示例】</p><p>37<br>【提示】<br>可以使用int(str, base)函数，将str字符串中base进制的整数转换为十进制整数。<br>参考答案：<br>line = input().split(‘,’)<br>print(int(line[0], int(line[1])))</p><p>【描述】<br>牛牛最近学习了Python语言入门课程，这门课程的总成绩计算方法是：总成绩=作业成绩×20%+小测成绩×30%+期末考试成绩×50%。牛牛想知道，这门课程自己最终能得到多少分？<br>【输入】<br>在一行中包含三个非负整数，，其间以空格分隔，分别表示牛牛的作业成绩、小测成绩和期末考试成绩，三项成绩满分都是100分。<br>【输出】<br>一行一个整数，即牛牛这门课程的总成绩，满分也是100分。<br>【输入示例】<br>60 90 80<br>【输出示例】<br>79<br>参考答案：<br>a, b, c = map(int, input().split())<br>total = a * 0.2 + b * 0.3 + c * 0.5<br>print(“%d” % (total))</p><p>【描述】<br>编写程序，从键盘输入一个整数，检查它是否能同时被2和3整除，是否被2或3整除，是否被2或3整除且只被其一整除。<br>【输入】<br>一行中给出一个整数。<br>【输出】<br>分行输出检查结果，格式见【输出示例】。<br>【输入示例】<br>4<br>【输出示例】</p><p>4 divisible by 2 and 3? False<br>4 divisible by 2 or 3? True<br>4 divisible by 2 or 3, but not both? True<br>【来源】<br>《Python程序设计基础》第3章编程题1。<br>参考答案：<br>n = int(input())<br>print(n, “divisible by 2 and 3?”, n % 2 == 0 and n % 3 == 0)<br>print(n, “divisible by 2 or 3?”, n % 2 == 0 or n % 3 == 0)<br>print(n, “divisible by 2 or 3, but not both?”, (n % 2 == 0 or n % 3 == 0) and not (n % 2 == 0 and n % 3 == 0))</p><p>【描述】<br>有4个圆塔，圆心分别为(2，2)、(-2，2)、(2，-2)、(-2，-2)，圆半径为1。这4个塔的高度为10米。塔以外无建筑物。请编写程序，输入任一点的坐标，求该点的建筑高度（塔外的高度为零）。</p><p>【输入】<br>输入为浮点数，任一点的坐标，以逗号隔开。<br>【输出】<br>输出为整数，该点的建筑高度。<br>【输入示例】</p><p>2,2.5<br>【输出示例】</p><p>10<br>参考答案：<br>line = input().split(‘,’)<br>x = float(line[0])<br>y = float(line[1])<br>if (x - 2) ** 2 + (y - 2) ** 2 &lt;= 1 or (x + 2) ** 2 + (y - 2) ** 2 &lt;= 1 or <br>   (x + 2) ** 2 + (y + 2) ** 2 &lt;= 1 or (x - 2) ** 2 + (y + 2) ** 2 &lt;= 1:<br>    print(“10”)<br>else:<br>    print(“0”)</p><p>【描述】<br>编写程序，键盘输入x，求如下分段函数y的值（结果保留2位小数）。</p><p>【输入】<br>在一行中给出给出x的值。<br>【输出】<br>在一行中输出y的值，结果保留2位小数。<br>【输入示例】<br>2.5<br>【输出示例】</p><p>1.58<br>【来源】<br>《Python程序设计基础》第3章编程题2。<br>参考答案：<br>x = float(input())<br>if x &lt; 0:<br>    y = x * x<br>elif x &lt; 9:<br>    y = x ** 0.5<br>else:<br>    y = x - 6<br>print(“%.2f” % (y))</p><p>【描述】<br>某电网执行阶梯电价，安装一户一表的居民用户电价分为两个阶梯：月用电量50千瓦时（含50千瓦时）以内的，电价为0.53元/千瓦时；超过50千瓦时的，超出部分的用电量，电价上调0.05元/千瓦时。请编写程序计算电费。<br>【输入】<br>在一行中给出某用户的月用电量（单位：千瓦时）。<br>【输出】<br>在一行中输出该用户应支付的电费（元），结果保留两位小数，格式：cost = 应付电费值；若用电量小于0，则输出”Invalid Value!”。<br>【输入示例】<br>10<br>【输出示例】</p><p>cost = 5.30<br>参考答案：<br>x = float(input())<br>if x &lt; 0:<br>    print(“Invalid Value!”)<br>elif x &lt;= 50:<br>    cost = 0.53 * x<br>    print(“cost = %.2f” % (cost))<br>else:<br>    cost = 50 * 0.53 + (x - 50) * (0.53 + 0.05)<br>    print(“cost = %.2f” % (cost))</p><p>【描述】<br>编写程序，输入a、b和c，若它们能构成三角形，则输出三角形周长，否则输出”Invalid”。<br>【输入】<br>一行中给出a、b和c，其间以空格分隔。<br>【输出】<br>一行中输出三角形周长或”Invalid”。<br>【输入示例】<br>3 3 3<br>【输出示例】</p><p>9.0<br>【提示】<br>任意两边之和大于第三边，则三条边构成三角形。<br>三角形的边长不一定是整数。<br>参考答案：<br>line = input().split()<br>a = float(line[0])<br>b = float(line[1])<br>c = float(line[2])<br>if  a + b &gt; c and  a + c &gt; b and b + c &gt; a:<br>    print(a + b + c)<br>else:<br>    print(“Invalid”)</p><p>【描述】<br>某公司员工的工资计算方法如下：一周内工作时间不超过40小时，按正常工作时间计酬；超出40小时的工作时间部分，按正常工作时间报酬的1.5倍计酬。员工按进公司时间分为新职工和老职工，进公司不少于5年的员工为老职工，5年以下的为新职工。新职工的正常工资为30元/小时，老职工的正常工资为50元/小时。请按该计酬方式计算员工的工资。<br>【输入】<br>在一行中给出2个正整数，分别为某员工入职年数和周工作时间，其间以空格分隔。<br>【输出】<br>在一行输出该员工的周薪，精确到小数点后2位。<br>【输入示例】</p><p>5 40<br>【输出实例】</p><p>2000.00<br>参考答案：<br>year, time = map(int, input().split())<br>if year &lt; 5:<br>    if time &lt;= 40:<br>        wage = time * 30<br>    else:<br>        wage = 40 * 30 + (time - 40) * 30 * 1.5<br>else:<br>    if time &lt;= 40:<br>        wage = time * 50<br>    else:<br>        wage = 40 * 50 + (time - 40) * 50 * 1.5<br>print(“%.2f” % wage)</p><p>【描述】<br>将输入的任意3个整数从小到大输出。<br>【输入】<br>在一行中给出3个整数，其间以空格分隔。<br>【输出】<br>在一行中将3个整数从小到大输出，其间以“-&gt;”相连。<br>【输入示例】<br>4 2 8<br>【输出示例】</p><p>2-&gt;4-&gt;8<br>参考答案：<br>a, b, c = map(int, input().split())<br>if a &gt; b:<br>    a, b = b, a<br>if a &gt; c:<br>    a, c = c, a<br>if b &gt; c:<br>    b, c = c, b<br>print(“%d-&gt;%d-&gt;%d” % (a, b, c))</p><p>【描述】<br>编写程序，根据输入的运算符，对2个整数进行加、减、乘、除或求余运算。<br>【输入】<br>在一行中依次给出操作数1、运算符、操作数2，其间以空格分隔。操作数的数据类型为整型，且保证除法和求余的分母非零。<br>【输出】<br> 当运算符为+、-、*、/、%时，在一行中输出相应的运算结果。当运算符为/时，实际是做整除（//）运算。若输入是非法符号（即除了加、减、乘、除和求余五种运算符以外的其他符号）则输出”Error”。<br>【输入示例】<br>-7 / 2<br>【输出示例】</p><p>-4<br>参考答案：<br>line =input().split()<br>a = int(line[0])<br>op = line[1]<br>b = int(line[2])<br>if op == ‘+’:<br>    print(a + b)<br>elif op == ‘-‘:<br>    print(a - b)<br>elif op == ‘*’:<br>    print(a * b)<br>elif op == ‘/‘:<br>    print(a // b)<br>elif op == ‘%’:<br>    print(a % b)<br>else:<br>    print(“Error”)</p><p>【描述】<br>股票价格涨跌趋势，常用蜡烛图技术中的K线图来表示，分为按日的日K线、按周的周K线、按月的月K线等。以日K线为例，每天股票价格从开盘到收盘走完一天，对应一根蜡烛小图，要表示四个价格：开盘价格Open（早上刚刚开始开盘买卖成交的第1笔价格）、收盘价格Close（下午收盘时最后一笔成交的价格）、中间的最高价High和最低价Low。<br>如果Close&lt;Open，表示为”BW-Solid”（即”实心蓝白蜡烛”）；如果Close&gt;Open，表示为”R-Hollow”（即”空心红蜡烛”）；如果Open等于Close，则为”R-Cross”（即”十字红蜡烛”）。如果Low比Open和Close低，称为”Lower Shadow”（即”有下影线”），如果High比Open和Close高，称为”UpperShadow”（即”有上影线”）。请编程序，根据给定的四个价格组合，判断当日的蜡烛是一根什么样的蜡烛。<br>【输入】<br>在一行中给出4个正实数，分别对应Open、High、Low、Close，其间以空格分隔。<br>【输出】<br>在一行中输出日K蜡烛的类型。如果有上、下影线，则在类型后加上”with 影线类型”。如果两种影线都有，则输出”with Lower Shadow and Upper Shadow”。<br>【输入示例】<br>5.110 5.250 5.100 5.105<br>【输出示例】</p><p>BW-Solid with Lower Shadow and Upper Shadow<br>参考答案：<br>import math<br>EPSILON = 1e-6<br>line= input().split()<br>open = float(line[0])<br>high = float(line[1])<br>low = float(line[2])<br>close = float(line[3])<br>if close &lt; open:<br>    print(“BW-Solid”, end = ‘’)<br>elif close &gt; open:<br>    print(“R-Hollow”, end = ‘’)<br>elif math.fabs(close - open) &lt;= EPSILON:<br>    print(“R-Cross”, end = ‘’)<br>if (low &lt; open and low &lt; close) and (high &gt; open and high &gt; close):<br>    print(“ with Lower Shadow and Upper Shadow”)<br>elif (low &lt; open and low &lt; close):<br>    print(“ with Lower Shadow”)<br>elif (high &gt; open and high &gt; close):<br>    print(“ with Upper Shadow”)</p><p>【描述】<br>编写程序，输入年、月、日，显示它是一周中的星期几。<br>蔡勒（ChristianZeller）公式是用于计算某天是星期几的算法，这个公式如下：</p><p>其中：<br>h是一个星期中的某一天（0为星期六，1为星期日，2为星期一，3为星期二，4为星期三，5为星期四，6为星期五）。<br>q是某月的天数。<br>m是月份（3为三月，4为四月，…，12为十二月），一月和二月分别记为上一年的十三和十四月。所以需要将输入的月份1转换为13，输入的月份2转换为14，同时将年份改为前一年。<br>j是世纪数，即</p><p>k是世纪的年数，即year%100。</p><p>【输入】<br>一行中输入年、月、日，其间以空格分隔。<br>【输出】<br>一行中输出星期几（用英文单词表示，首字母大写）。<br>【输入示例】<br>2002 3 26<br>【输出示例】</p><p>Tuesday<br>参考答案：<br>line = input().split()<br>year = int(line[0])<br>month = int(line[1])<br>day = int(line[2])<br>if month == 1 or month == 2:<br>    month += 12<br>    year -= 1<br>j = year // 100<br>k = year % 100<br>h = (day + (26 * (month + 1)) // 10 + k + k // 4 + j // 4 + 5 * j) % 7<br>if h == 0:<br>    print(“Saturday”)<br>elif h == 1:<br>    print(“Sunday”)<br>elif h == 2:<br>    print(“Monday”)<br>elif h == 3:<br>    print(“Tuesday”)<br>elif h == 4:<br>    print(“Wednesday”)<br>elif h == 5:<br>    print(“Thursday”)<br>elif h == 6:<br>    print(“Friday”)</p><p>【描述】<br>计算a+b。a和b为整数。<br>【输入】<br>输入有多行。<br>每一行上有a和b两个整数，其间以空格间隔。<br>【输出】<br>分行输出对应的a+b的值。<br>【输入示例】</p><p>5 3<br>10 20<br>【输出示例】</p><p>8<br>30<br>参考答案：<br>for line in iter(input, ‘’):<br>    a, b = map(int, line.split())<br>    print(a + b)</p><p>【描述】<br>计算a+b。a、b为整数。<br>【输入】<br>第一行为正整数n，表示下面有n行数据。<br>接着有n行数据。每一行上有a和b两个整数，其间以空格间隔。<br>【输出】<br>输出有n行。<br>分行输出对应的a+b的值。<br>【输入示例】</p><p>2<br>5 3<br>10 20<br>【输出示例】</p><p>8<br>30<br>参考答案：<br>n = int(input())<br>while n &gt; 0:<br>    a, b = map(int, input().split())<br>    print(a + b)<br>    n -= 1</p><p>【描述】<br>计算整数和。<br>【输入】<br>输入有多行。<br>每一行上，第1个数是正整数n，表示后面同一行上有n个整数，整数之间均以空格间隔。<br>最后一行上为0，表示输入结束。<br>【输出】<br>分行输出对应的整数和。<br>【输入示例】</p><p>4 1 2 3 4<br>5 1 2 3 4 5<br>0<br>【输出示例】</p><p>10<br>15<br>参考答案：<br>while True:<br>    line = input().split()<br>    n = int(line[0])<br>    if n == 0:<br>        break<br>    total = 0<br>    while n &gt; 0:<br>        total += int(line[n])<br>        n -= 1<br>    print(total)</p><p>【描述】<br>计算整数和。<br>【输入】<br>第一行为正整数n，表示下面有n行数据。<br>每一行上，第1个数是正整数m，表示后面同一行上有m个整数，整数之间均以空格间隔。<br>【输出】<br>输出有n行，分行输出对应的整数和。<br>【输入示例】</p><p>2<br>4 1 2 3 4<br>5 1 2 3 4 5<br>【输出示例】</p><p>10<br>15<br>参考答案：<br>n = int(input())<br>while n &gt; 0:<br>    line = input().split()<br>    m = int(line[0])<br>    total = 0<br>    while m &gt; 0:<br>        total += int(line[m])<br>        m -= 1<br>    print(total)<br>    n -= 1</p><p>【描述】<br>计算如下式子：</p><p>前n项之和，结果保留3位小数。<br>【输入】<br>输入一个正整数n。<br>【输出】<br>输出数列前n项的和，结果保留3位小数。<br>【输入示例】<br>10<br>【输出示例】</p><p>2.133<br>【来源】<br>《Python程序设计基础》第3章编程题5。<br>参考答案：<br>n = int(input())<br>total = 0<br>for i in range(1, n + 1):<br>    total += 1 / (2 * i - 1)<br>print(“%.3f” % (total))</p><p>【描述】<br>读入2个正整数a和，1≤a≤9, 1≤b≤10，产生整数aa…a，一共b个a。<br>【输入】<br>在一行中输入a和b。<br>【输出】<br>在一行中输出整数aa…a，一共b个a。<br>【输入示例】<br>1,5<br>【输出示例】</p><p>11111<br>参考答案：<br>a, b = map(int, input().split(‘,’))<br>total = 0<br>for i in range(b):<br>    total = total * 10 + a<br>print(total)</p><p>【描述】<br>计算如下式子：</p><p>的值。<br>例如，a为2，n为5，则式子的值为24690（2+22+222+2222+22222）。<br>【输入】<br>输入a和n。<br>【输出】<br>输出式子的值。<br>【输入示例】<br>2 5<br>【输出示例】</p><p>24690<br>【来源】<br>《Python程序设计基础》第3章编程题6。<br>参考答案：<br>line = input().split()<br>a = int(line[0])<br>n = int(line[1])<br>item = a;<br>total = a;<br>for i in range(2, n + 1):<br>    item = item * 10 + a<br>    total += item<br>print(total)</p><p>【描述】<br>编写程序，计算并输出下式的值，计算到最后一项的值小于0.000001时为止，结果保留6位小数。</p><p>【输入】<br>没有输入。<br>【输出】<br>显示表达式的值，精确到小数点后6位。<br>【来源】<br>《Python程序设计基础》第3章编程题7。<br>参考答案：<br>EPSILON = 1e-6<br>n = 1<br>sign = 1<br>item = 1<br>total = 0.0<br>while abs(item) &gt;= EPSILON:<br>    total += item<br>    sign = -sign<br>    n += 1<br>    item = 1.0  * sign / (3 * n - 2)<br>print(“%.6f” % (total))</p><p>【描述】<br>给定两个整数a和b，输出从a到b的所有整数以及这些整数的和。<br>【输入】<br>在一行中给出2个整数a和b，其中-100≤a≤b≤100，其间以空格分隔。<br>【输出】<br>首先顺序输出从a到b的所有整数，每5个数字占一行，每个数字占5个字符宽度，向右对齐。最后在一行中按Sum = x的格式输出全部数字的和x。<br>【输入示例】<br>-3 8<br>【输出示例】</p><p>   -3   -2   -1    0    1<br>    2    3    4    5    6<br>    7    8<br>Sum = 30<br>参考答案：<br>a, b = map(int, input().split())<br>count = 0<br>total = 0<br>for i in range(a, b + 1):<br>    total += i<br>    print(“%5d” % (i), end = ‘’)<br>    count += 1<br>    if count % 5 == 0 and i != b:<br>        print()<br>print(“\nSum = %d” % (total))</p><p>【描述】<br>某工地需要搬运砖块，已知男人一人搬3块，女人一人搬2块，小孩两人搬1块。用45人正好搬45块砖，问有多少种搬法？<br>【输入】<br>没有输入。<br>【输出】<br>输出搬砖的男人、女人和小孩数。<br>若有多组答案，则分行输出各组答案。<br>【输入示例】<br>没有输入。<br>【输出示例】</p><p>A B C<br>【来源】<br>《Python程序设计基础》第3章编程题9。<br>【提示】<br>输出示例只是格式说明，并非正确答案。A、B、C分别表示男人、女人、小孩数。<br>可能有多组答案。<br>参考答案：<br>for men in range(16):<br>    for women in range(23):<br>        child = 45 - men - women<br>        if men * 3 + women * 2 + child * 0.5 == 45:<br>               print(men, women, child)</p><p>【描述】<br>如果四边形四条边的长度分别为a、b、c、d，一对对角之和为2α，则其面积为：</p><p>定义函数：def compute_area(a, b, c, d, alpha)，计算任意四边形的面积。<br>编写一个main函数，设有一个四边形，其四条边边长分别为 3、4、5、5，一对对角之和为145°，计算它的面积。结果保留2位小数。<br>【输入】<br>没有输入。<br>【输出】<br>输出对应的四边形面积，结果保留2位小数。<br>【来源】<br>《Python程序设计基础》第4章编程题1。</p><p>参考答案：<br>from math import cos<br>def compute_area(a, b, c, d, alpha):<br>    p = (a + b + c + d) * 0.5<br>    area = ((p - a) * ( p - b) * (p - c) * (p - d) - a * b * c * d * cos(alpha) * cos(alpha)) ** 0.5<br>    return area;</p><p>def main():<br>    PI = 3.14159<br>    a = 3<br>    b = 4<br>    c = d = 5<br>    alpha = 145 * PI / 360<br>    print(“%.2f” % (compute_area(a, b, c, d, alpha)))</p><p>main()</p><p>【描述】<br>求一个整数的逆序数。定义函数：def reverse(n)，该函数返回一个整数的逆序数。<br>当整数含有结尾的0时，输出不应带有前导的0。比如输入100，输出应该是1。<br>编写一个main函数，输入一个整数，调用reverse函数，显示该整数的逆序数。<br>【输入】<br>一行中给出一个整数。<br>【输出】<br>一行中输出该整数的逆序数。<br>【输入示例】<br>-123<br>【输出示例】</p><p>-321<br>【来源】<br>《Python程序设计基础》第4章编程题2。<br>参考答案：<br>def reverse(n):<br>    sign = 1<br>    result = 0<br>    if n &lt; 0:<br>        n = -n<br>        sign = -1<br>    while n != 0:<br>        remainder = n % 10<br>        result = result * 10 + remainder<br>        n //= 10<br>    return sign * result</p><p>def main():<br>    value = int(input())<br>    print(reverse(value))</p><p>main()</p><p>【描述】<br>编写程序，计算如下序列的值。结果保留4位小数。</p><p>定义函数：def m(i)，返回序列的值。<br>编写一个main函数，调用m函数，并输出序列的值。<br>【输入】<br>在一行中给出一个正整数，表示序列的项数。<br>【输出】<br>在一行中输出序列的值，结果保留4位小数。<br>【输入示例】<br>901<br>【输出示例】</p><p>3.1427<br>【来源】<br>《Python程序设计基础》第4章编程题3。<br>参考答案：<br>def m(n):<br>    total = 0<br>    flag = 1<br>    for i in range(1, n + 1):<br>        item = 1 / (2 * i - 1)<br>        total += flag * item<br>        flag = -flag<br>    return total</p><p>def main():<br>    i = int(input())<br>    print(“%.4f” % (4 * m(i)))</p><p>main()</p><p>【描述】<br>定义total函数，返回若干个整数的和，体会函数默认参数的使用。<br> 【输入】<br>没有输入。<br>【输出】</p><p>100<br>106<br>16<br>36<br>【提示】<br>根据total函数被调用时实参的使用和结果的输出，推测total函数的定义。<br>参考答案：<br>def total(num1 = 0, num2 = 100, num3 = 0):<br>    return num1 + num2 + num3</p><p>def main():<br>    print(total())<br>    print(total(6))<br>    print(total(6, 10))<br>    print(total(6, 10, 20))</p><p>main()</p><p>【描述】<br>编写程序，定义和调用函数：def count_digit(number, digit)，number是整数，digit为[1, 9]区间内的整数，返回number中digit出现的次数。<br>【输入】<br>一行中输入两个整数，以空格间隔。<br>【输出】<br>见【输出示例】<br>【输入示例】<br>-21252 2<br>【输出示例】</p><p>Number of digit 2 in -21252: 3<br>参考答案：<br>def count_digit(number, digit):<br>    t = abs(number)<br>    cnt = 0;<br>    while t &gt; 0:<br>        r = t % 10<br>        if r == digit:<br>            cnt += 1<br>        t //= 10<br>    return cnt</p><p>def main():<br>    n, d = map(int, input().split())<br>    c = count_digit(n, d)<br>    print(“Number of digit {0} in {1}: {2}”.format(d, n, c))</p><p>main()</p><p>【描述】<br>输入一个整数，判断它是否是回文整数。如果一个整数的逆序数和原数一样，这个整数就称为回文整数<br>定义函数：def is_palindrome(n)，如果n是回文数，返回True，否则返回False。<br>编写一个main函数，输入一个整数，调用is_palindrome函数，判断该整数是否为回文整数。如果该整数是回文数，输出True，否则输出False。<br>【输入】<br>一行中给出一个整数。<br>【输出】<br>如果该整数是回文数，输出True，否则输出False。<br>【输入示例】<br>616<br>【输出示例】</p><p>True<br>参考答案：<br>def is_palindrome(n):<br>    result = 0<br>    t = n<br>    while t != 0:<br>        remainder = t % 10<br>        result = result * 10 + remainder<br>        t //= 10<br>    return n == result</p><p>def main():<br>    value = int(input())<br>    print(is_palindrome(value))</p><p>main()</p><p>【描述】<br>编写程序，输出前n（n≤100）个回文素数，每行显示5个，并适当对齐。回文素数是这样一种素数：本身为素数且也是回文数。例如，131是素数，也是回文数。<br>定义函数：def is_prime(n)，判断n是否是素数，如果是素数，返回True，否则返回False。<br>定义函数：def is_palindrome(n)，判断n是否是回文数，如果n是回文数，返回True，否则返回False。<br>编写一个main函数，输入一个正整数n，调用is_prime和is_palindrome函数，输出前n个回文素数。<br>【输入】<br>一行中给出一个正整数n。<br>【输出】<br>输出前n个回文素数，每行显示5个，每个宽度为6。<br>【输入示例】<br>10<br>【输出示例】<br>     2     3     5     7    11<br>   101   131   151   181   191<br>【提示】<br>对于整数i，如果is_prime(i)与is_palindrome(i)的返回值都是True，i即为回文素数。<br>参考答案：<br>def is_prime(n):<br>    flag = True<br>    for divisor in range(2, n // 2 + 1):<br>        if n % divisor == 0:<br>            flag = False<br>            break<br>    return flag</p><p>def is_palindrome(n):<br>    result = 0<br>    if n &lt; 0:<br>        n = -n<br>    t = n<br>    while t != 0:<br>        remainder = t % 10<br>        result = result * 10 + remainder<br>        t //= 10<br>    return n == result</p><p>def main():<br>    n = int(input())<br>    count = 0<br>    i = 2<br>    while count &lt; n:<br>        if is_prime(i) and is_palindrome(i):<br>            print(format(i, “6d”), end = ‘’)<br>            count += 1<br>            if count % 5 == 0:<br>                  print()<br>        i += 1</p><p>main()</p><p>【描述】<br>无暇素数emirp（英文素数prime的逆序）是这样一种素数：本身为素数，且其逆序数也是素数。例如，17是素数，其逆序数71也是，因此17和71是emirp。<br>定义函数：def is_prime(n)，判断n是否是素数，如果是素数，函数返回True，否则返回False。<br>定义函数：def reverse(n)，求n的逆序数，函数返回n的逆序数，如n为17，函数reverse(n)返回71。<br>编写一个main函数，调用is_prime和reverse函数，输出前n个emirp，每行显示5个，并适当对齐。<br>【输入】<br>输入一个正整数n。<br>【输出】<br>输出前n个emirp，每行显示5个，每个宽度为5。<br>【输入示例】</p><p>10<br>【输出示例】<br>    2    3    5    7   11<br>   13   17   31   37   71<br>【提示】<br>对于整数i，如果is_prime(i)与is_prime(reverse(i))的返回值都是True，i即为无暇素数。<br>参考答案：<br>def is_prime(n):<br>    flag = True<br>    for divisor in range(2, n // 2 + 1):<br>        if n % divisor == 0:<br>            flag = False<br>            break<br>    return flag</p><p>def reverse(n):<br>    sign = 1<br>    result = 0<br>    if n &lt; 0:<br>        n = -n<br>        sign = -1<br>    while n != 0:<br>        remainder = n % 10<br>        result = result * 10 + remainder<br>        n //= 10<br>    return sign * result</p><p>def main():<br>    n = int(input())<br>    count = 0<br>    i = 2<br>    while count &lt; n:<br>        if is_prime(i) and is_prime(reverse(i)):<br>            print(format(i, “5d”), end = ‘’)<br>            count += 1<br>            if count % 5 == 0:<br>                  print()<br>        i += 1</p><p>main()</p><p>【描述】<br>定义函数：def square_root(value)，返回value的平方根。<br>编写一个main函数，读入一个数，调用square_root函数，输出该数的平方根。<br>注意：不能使用数学函数sqrt和幂运算符**。<br>可以通过对下面公式的反复计算近似地得到平方根：</p><p>当nextGuess和lastGuess几乎相同时，nextGuess就是平方根的近似值。nextGuess最初的猜测值可以是任意一个值（例如1.0）。这个值就是lastGuess的初始值。如果nextGuess和lastGuess的差小于一个很小的数（例如0.000001），就可以认为nextGuess是value平方根的近似值；否则，nextGuess就赋值给lastGuess，迭代过程继续进行。<br>【输入】<br>一行中给出一个数。<br>【输出】<br>输出该数的平方根，结果保留6位小数。。<br>【输入示例】<br>2<br>【输出示例】</p><p>1.414214<br>参考答案：<br>import math</p><p>def square_root(value):<br>    next_guess = 1.0<br>    last_guess = 0.0<br>    while math.fabs(next_guess - last_guess) &gt;= 0.000001:<br>        last_guess = next_guess<br>        next_guess = (last_guess + (value / last_guess)) * 0.5<br>    return next_guess</p><p>def main():<br>    value = float(input())<br>    print(format(square_root(value), “.6f”))</p><p>main()</p><p>【描述】<br>定义函数：def f(x, n)，用递归求下列数学式子的值，其中x为浮点数，n为整数。</p><p>编写一个main函数，读入x和n，输出数学式子的值，结果保留2位小数。<br>【输入】<br>一行中给出两个数，其间以空格分隔。<br>【输出】<br>输出数学式子的值，结果保留2位小数。<br>【输入示例】</p><p>2 3<br>【输出示例】</p><p>6.00<br>参考答案：<br>def f(x, n):<br>    if n == 1:<br>        return x<br>    else:<br>        return x * (1 - f(x, n - 1))</p><p>def main():<br>    line = input().split()<br>    x = float(line[0])<br>    n = int(line[1])<br>    print(“%.2f” % (f(x, n)))</p><p>main()</p><p>【描述】<br>编写程序，统计并输出某给定字符在给定字符串中出现的次数。<br>【输入】<br>第一行给出一个以回车结束的字符串；第二行输入一个字符。<br>【输出】<br>在一行中输出给定字符在给定字符串中出现的次数。<br>【输入示例】<br>programming is More fun!<br>m<br>【输出示例】</p><p>2<br>参考答案：<br>s = input()<br>ch = input()<br>print(s.count(ch))<br>【描述】<br>编写程序，从给定字符串中查找某指定的字符。<br>【输入】<br>第一行是一个待查找的字符。第二行是一个以回车结束的非空字符串。<br>【输出】<br>如果找到，在一行内按照格式”index = 下标”输出该字符在字符串中所对应的最大下标（下标从0开始）；否则输出”Not Found”。<br>【输入示例】<br>m<br>programming<br>【输出示例】</p><p>index = 7<br>参考答案：<br>ch = input()<br>s = input()<br>r = s.rfind(ch)<br>print((“index = %d” % (r)) if r != -1 else “Not Found”)</p><p>【描述】<br>编写程序，要求提取一个字符串中的所有数字字符（’0’……’9’），将其转换为一个整数输出。<br>【输入】<br>在一行中给出一个以回车结束的字符串。<br>【输出】<br>在一行中输出转换后的整数。<br>【输入示例】<br>free82jeep5<br>【输出示例】</p><p>825<br>参考答案：<br>s = input()<br>t = 0<br>for ch in s:<br>    if ch.isdigit():<br>        t = t * 10 + (ord(ch) - ord(‘0’))</p><p>【描述】<br>脱氧核糖核酸（DNA）由两条互补的碱基链以双螺旋的方式结合而成。而构成DNA的碱基共有4种，分别为腺瞟呤（A）、鸟嘌呤（G）、胸腺嘧啶（T）和胞嘧啶（C）。在两条互补碱基链的对应位置上，腺瞟呤总是和胸腺嘧啶配对，鸟嘌呤总是和胞嘧啶配对。你的任务就是根据一条单链上的碱基序列，给出对应的互补链上的碱基序列。<br>【输入】<br>第一行是一个正整数n，表明共有n条要求解的碱基链。<br>以下共有n行，每行用一个字符串表示一条碱基链。这个字符串只含有大写字母A、T、G、C，分别表示腺瞟呤、胸腺嘧啶、鸟嘌呤和胞嘧啶。每条碱基链的长度都不超过255。<br>【输出】<br>共有n行，每行为一个只含有大写字母A、T、G、C的字符串。分别为与输入的各碱基链互补的碱基链。<br>【输入示例】</p><p>5<br>ATATGGATGGTGTTTGGCTCTG<br>TCTCCGGTTGATT<br>ATATCTTGCGCTCTTGATTCGCATATTCT<br>GCGTTTCGTTGCAA<br>TTAACGCACAACCTAGACTT<br>【输出示例】</p><p>TATACCTACCACAAACCGAGAC<br>AGAGGCCAACTAA<br>TATAGAACGCGAGAACTAAGCGTATAAGA<br>CGCAAAGCAACGTT<br>AATTGCGTGTTGGATCTGAA<br>【来源】<br>《Python程序设计基础》第5章编程题1。<br>参考答案：<br>n = int(input())<br>for i in range(n):<br>    line = input()<br>    for ch in line:<br>        if ch == ‘A’:<br>            print(‘T’, end=’’)<br>        elif ch == ‘C’:<br>            print(‘G’, end=’’)<br>        elif ch == ‘G’:<br>            print(‘C’, end=’’)<br>        elif ch == ‘T’:<br>            print(‘A’, end=’’)<br>    print()</p><p>【描述】<br>输入一个字符串，统计并输出该字符串中26个英文字母（不区分大小写）出现的次数。<br>【输入】<br>输入一个字符串。<br>【输出】<br>分行输出26个英文字母（不区分大小写）出现的次数。<br>【输入示例】</p><p>I am a student.<br>【输出示例】</p><p>a:2<br>d:1<br>e:1<br>i:1<br>m:1<br>n:1<br>s:1<br>t:2<br>u:1<br>【来源】<br>《Python程序设计基础》第5章编程题2。<br>参考答案：<br>line = input()<br>counts = [0 for i in range(26)]<br>for ch in line:<br>    if ch.isalpha():<br>        if ch.isupper():<br>            ch = ch.lower()<br>        counts[ord(ch) - ord(‘a’)] += 1<br>for i in range(26):<br>    if counts[i] != 0:<br>        print(“%c:%d” % (chr(ord(‘a’) + i), counts[i]))</p><p>【描述】<br>输入5个字符串，输出其中最大的字符串。<br>【输入】<br>输入5个字符串。<br>【输出】<br>输出5个字符串中最大的字符串。<br>【输入示例】<br>red<br>blue<br>yellow<br>green<br>purple<br>【输出示例】</p><p>yellow<br>【来源】<br>《Python程序设计基础》第5章编程题3。<br>参考答案：<br>string_list = []<br>for i in range(1, 6):<br>    line = input()<br>    string_list.append(line)<br>max_string = max(string_list)<br>print(max_string)</p><p>【描述】<br>两个单词如果包含相同的字母，次序不同，则称为字母易位词（anagram）。例如，”silent”和”listen”是字母易位词。<br>定义函数：def is_anagram(s1, s2)，检查两个单词是否是字母易位词，如果是，返回True；否则返回False。<br>【输入】<br>有两行，分别对应两个单词。<br>【输出】<br>若两个单词是字母易位词，输出True，否则输出False。<br>【输入示例】<br>silent<br>listen<br>【输出示例】</p><p>True<br>【来源】<br>《Python程序设计基础》第5章编程题4。<br>参考答案：<br>def is_anagram(s1, s2):<br>    if len(s1) != len(s2):<br>        return False<br>    new_s1 = “”.join(sorted(s1))<br>    new_s2 = “”.join(sorted(s2))<br>    if new_s1 != new_s2:<br>        return False<br>    return True</p><p>def main():<br>    str1 = input()<br>    str2 = input()<br>    print(is_anagram(str1, str2))</p><p>main()</p><p>【描述】<br>首字母缩略词是由一个短语中每个单词的第一个字母组成，均为大写。例如，CPU是短语”central processing unit”的缩写。<br>定义函数：def is_acronym(s)，s是短语，返回短语的首字母缩略词。<br>【输入】<br>一行中输入一个短语，短语中每个单词以空格间隔。<br>【输出】<br>该短语的首字母缩略词。<br>【输入示例】<br>central processing unit<br>【输出示例】</p><p>CPU<br>参考答案：<br>def is_acronym(s):<br>    phrase = ‘’<br>    s = s.title()<br>    lst = s.split()<br>    for i in range(len(lst)):<br>        phrase += lst[i][0]<br>    return phrase</p><p>def main():<br>    phrase=input()<br>    print(is_acronym(phrase))</p><p>main()</p><p>【描述】<br>依次计算一系列给定字符串的字母值，字母值为字符串中每个字母对应的编号值（A对应1，B对应2，以此类推，不区分大小写字母，非字母字符对应的值为0）的总和。例如，Colin的字母值为3+15+12+9+14=53<br>【输入】<br>多行字符串，每个字符串占一行。<br>【输出】<br>计算并输出每行字符串的字母值。<br>【输入示例】<br>Colin<br>ABC<br>【输出示例】</p><p>53<br>6<br>参考答案：<br>stop = ‘’<br>for s in iter(input, stop):<br>    total = 0<br>    for i in range(len(s)):<br>        if s[i].isalpha():<br>            total += (ord(s[i].upper()) - ord(‘A’) + 1)<br>    print(total)</p><p>【描述】<br>“distance”和”disinfection”的共有前缀是”dis”。<br>定义函数：def prefix(s1,  s2)，检查两个字符串是否有共有前缀，如果有，返回该共有前缀；否则返回None。<br>编写一个main函数，输入两个字符串，调用prefix函数，显示共有前缀或”No common prefix”。<br>【输入】<br>有两行，分别对应两个字符串。<br>【输出】<br>若两个字符串有共有前缀，输出该共有前缀，否则输出”No common prefix”。<br>【输入示例】<br>distance<br>disinfection<br>【输出示例】</p><p>dis<br>参考答案：<br>def prefix(s1, s2):<br>    str = ‘’<br>    i = 0<br>    while i &lt; len(s1) and i &lt; len(s2):<br>        if s1[i] == s2[i]:<br>            str += s1[i]<br>        else:<br>            break<br>        i += 1<br>    if len(str) == 0:<br>        return None<br>    else:<br>        return str</p><p>def main():<br>    str1 = input()<br>    str2 = input()<br>    str = prefix(str1, str2)<br>    print(str if str != None else “No common prefix”)</p><p>main()</p><p>【描述】<br>输入10个整数，存放在列表中，找出值最大和最小的元素，输出最大值、最小值及它们所在的元素下标。<br>【输入】<br>在一行中输入10个整数，其间以空格分隔。<br>【输出】<br>第一行输出最大值及其所在的元素下标，最大值和下标以空格间隔。<br>第二行输出最小值及其所在的元素下标，最小值和下标以空格间隔。<br>【输入示例】</p><p>1 3 5 7 9 6 0 8 2 4<br>【输出示例】</p><p>9 4<br>0 6<br>【来源】<br>《Python程序设计基础》第5章编程题5。<br>参考答案：<br>def main():<br>    line = input().split()<br>    lst = [int(x) for x in line]<br>    print(max(lst), lst.index(max(lst)))<br>    print(min(lst), lst.index(min(lst)))</p><p>main()</p><p>【描述】<br>给定一组整数，要求利用列表把这组数保存起来，实现对列表中的数循环移动。假定共有n个整数，则要使前面各数顺序向后移m个位置，并使最后m个数变为最前面的m个数。<br>一定要保证在输出结果时，输出的顺序和列表中数的顺序是一致的。<br>【输入】<br>第一行包含一个正整数n和一个正整数m，n和m以空格间隔。<br>第二行包含n个正整数，整数以空格间隔。<br>【输出】<br>依次输出经过循环移动后列表中元素值，元素值以空格间隔。<br>【输入示例】</p><p>11 4<br>15 3 76 67 84 87 13 67 45 34 45<br>【输出示例】</p><p>67 45 34 45 15 3 76 67 84 87 13<br>【来源】<br>《Python程序设计基础》第5章编程题7。<br>参考答案：<br>n, m = map(int, input().split())<br>lst = list(map(int, input().split()))<br>lst1 = lst[0:-m]<br>lst2 = lst[n - m:len(lst)]<br>lst3 = lst2 + lst1<br>for i in lst3:<br>    print(i, end = ‘ ‘)</p><p>【描述】<br>给定一个整数列表，求列表中第k大的数。注意，第k大的数意味着从大到小排在第k位的数。<br>【输入】<br>第一行输入k。第二行输入n个整数，整数之间以空格分隔。<br>【输出】<br>该列表中第k大的数。<br>【输入示例】</p><p>2<br>4 1 3 2<br>【输出示例】</p><p>3<br>【来源】<br>《Python程序设计基础》第5章编程题8。<br>参考答案：<br>k = int(input())<br>line = input().split()<br>a = [int(x) for x in line]<br>a.sort(reverse=True)<br>print(a[k - 1])</p><p>【描述】<br>输入10个整数，将10个整数按升序排列输出，并且奇数在前，偶数在后。<br>【输入】<br>输入10个整数，以空格间隔。<br>【输出】<br>输出升序排列后，奇数在前，偶数在后的数组元素，以空格间隔。最后一个元素后面没有空格。<br>【输入示例】</p><p>10 9 8 7 6 5 4 3 2 1<br>【输出示例】</p><p>1 3 5 7 9 2 4 6 8 10<br>参考答案：<br>#coding=utf-8<br>line = input().split()<br>lst = [int(x) for x in line]<br>lst.sort()<br>result = []</p><h1 id="奇数"><a href="#奇数" class="headerlink" title="奇数"></a>奇数</h1><p>for i in range(len(lst)):<br>    if lst[i] % 2 != 0:<br>        result.append(lst[i])</p><h1 id="偶数"><a href="#偶数" class="headerlink" title="偶数"></a>偶数</h1><p>for i in range(len(lst)):<br>    if lst[i] % 2 == 0:<br>        result.append(lst[i])<br>for i in range(len(result) - 1):<br>    print(result[i], end=’ ‘)<br>print(result[len(lst) - 1])</p><p>【描述】<br>定义函数：def mean_median(t)，该函数接受一个正整数元组作为参数，返回元组中正整数的均值和中位数。一组数据按从小到大的顺序依次排列，位于中间位置的一个数或位于中间位置的两个数的平均值被称为中位数。如果这组数的个数为奇数，则中位数是位于中间位置的数；如果这组数的个数为偶数，则中位数是位于中间位置的两个数的平均值。<br>【输入】<br>在一行中顺序输入若干个正整数，其间以空格分隔。<br>【输出】<br>输出这些正整数的均值和中位数。<br>【输入示例】</p><p>3 3 0 1 12 13 15 16<br>【输出示例】</p><p>(7.875, 7.5)<br>参考答案：<br>def mean_median(t):<br>    meanValue = sum(t) / len(t)<br>    new_t = sorted(t)<br>    if len(new_t) %2 == 1:<br>        medianValue = new_t[len(new_t) // 2]<br>    else:<br>        medianValue = (new_t[len(new_t) // 2 - 1] + new_t[len(new_t) // 2]) /2.0<br>    return meanValue, medianValue</p><p>def main():<br>    line = input().split()<br>    lst = [int(x) for x in line]<br>    print(mean_median(tuple(lst)))</p><p>main()</p><p>【描述】<br>编写程序，输入10个数，计算这10个数的均值和标准差。用下面的公式计算均值mean和标准差deviation：</p><p>【输入】<br>一行中给出10个数，其间以空格分隔。<br>【输出】<br>第一行为均值。<br>第二行为标准差。<br>结果保留2位小数。<br>【输入示例】<br>583 566 58 632 244 485 600 432 88 562<br>【输出示例】</p><p>425.00<br>216.48<br>参考答案：<br>import math<br>def mean(lst):<br>    return sum(lst) / len(lst)</p><p>def deviation(lst):<br>    mean1 = mean(lst)<br>    squareSum = 0;<br>    for i in range(len(lst)):<br>        squareSum += math.pow(lst[i] - mean1, 2)<br>    return math.sqrt(squareSum / (len(lst) - 1))</p><p>def main():<br>    line = input().split()<br>    lst = [float(x) for x in line]<br>    print(“%.2f” % mean(lst))<br>    print(“%.2f” % deviation(lst))</p><p>main()</p><p>【描述】<br>给定n行m列的图像各像素点的灰度值，要求用如下方法对其进行模糊化处理：</p><ol><li>四周最外侧的像素点灰度值不变；</li><li>中间各像素点新灰度值为该像素点及其上下左右相邻四个像素点原灰度值的平均（舍入到最接近的整数）。<br>【输入】<br>第一行包含两个整数n和m，表示图像包含像素点的行数和列数。1≤n≤100，1≤m≤100。<br>接下来n行，每行m个整数，表示图像的每个像素点灰度。相邻两个整数之间用单个空格隔开，每个元素均在0~255之间。<br>【输出】<br>n行，每行m个整数，为模糊处理后的图像。相邻两个整数之间用单个空格隔开。<br>【输入示例】<br>4 5<br>100 0 100 0 50<br>50 100 200 0 0<br>50 50 100 100 200<br>100 100 50 50 100<br>【输出示例】</li></ol><p>100 0 100 0 50<br>50 80 100 60 0<br>50 80 100 90 200<br>100 100 50 50 100<br>参考答案：<br>n, m = map(int, input().split())<br>a = []<br>b = []<br>for i in range(n):<br>    a.append([])<br>    b.append([])<br>    line = input().split()<br>    a[i] = [int(x) for x in line]<br>    b[i] = [int(x) for x in line]<br>for i in range(1, n - 1):<br>    for j in range(1, m - 1):<br>        b[i][j] = int((a[i][j] + a[i - 1][j] + a[i + 1][j] + a[i][j - 1] + a[i][j + 1]) / 5.0 + 0.5)<br>for i in range(n):<br>    for j in range(m):<br>        print(b[i][j], end=’ ‘)<br>    print()</p><p>【描述】<br>给定M行N列的整数矩阵A，如果A的非边界元素A[i][j]大于相邻的上下左右4个元素，那么就称元素A[i][j]是矩阵的局部极大值。求给定矩阵的全部局部极大值及其所在的位置。<br>【输入】<br>在第一行中给出矩阵A的行数M和列数N（3≤M,N≤20）；下面M行，每行给出A在该行的N个元素的值。数字间以空格分隔。<br>【输出】<br>每行按照“元素值 行号 列号”的格式输出一个局部极大值，其中行、列编号从1开始。要求按照行号递增输出；若同行有超过1个局部极大值，则该行按列号递增输出。若没有局部极大值，则输出“None 总行数 总列数”。<br>【输入示例】<br>4 5<br>1 1 1 1 1<br>1 3 9 3 1<br>1 5 3 5 1<br>1 1 1 1 1<br>【输出示例】</p><p>9 2 3<br>5 3 2<br>5 3 4<br>参考答案：<br>def main():<br>    m, n = map(int, input().split())<br>    matrix = []<br>    for row in range(m):<br>        matrix.append([])<br>        line = input().split()<br>        matrix[row] = [eval(x) for x in line]<br>    flag = False;<br>    for row in range(1, m - 1):<br>        for col in range(1, n - 1):<br>            if matrix[row][col] &gt; matrix[row - 1][col] and <br>               matrix[row][col] &gt; matrix[row + 1][col] and <br>               matrix[row][col] &gt; matrix[row][col - 1] and <br>               matrix[row][col] &gt; matrix[row][col + 1]:<br>                flag = True<br>                print(“%d %d %d” % (matrix[row][col], row + 1, col + 1))<br>    if not flag:<br>        print(“None %d %d” % (m, n))</p><p>main()</p><p>【描述】<br>读入一个整数n，范围是[3,100]，这表示井字棋棋盘的边长。比如n=3就表示是一个3x3的棋盘。然后，要读入n行，每行n个数字，每个数字是1或0，依次表示[0,0]到[n-1,n-1]位置上的棋子。1表示X，0表示O（大写字母O）。<br>判断其中是否存在某一方获胜，获胜的条件是存在整行或整列或整条对角线或整条反对角线上是相同的棋子。如果存在，则输出代表获胜一方字母：X或O（大写字母X或O）；如果没有任何一方获胜，则输出NIL（三个大写字母，中间是字母I（India的I）。<br>注意：所给的棋盘上的棋子分布可能出现同一个棋子有多处满足获胜的条件，但是不会出现两种棋子都获胜的情况。<br>【输入】<br>一个代表棋盘大小的数字n，后面跟上nxn个0或1的数字。<br>【输出】<br>三种输出之一：<br>X<br>O<br>NIL<br>均为大写字母。<br>【输入示例】<br>4<br>1 0 0 1<br>0 1 0 0<br>0 0 1 0<br>1 0 0 1<br>【输出示例】</p><p>X<br>参考答案：<br>def main():<br>    n = int(input())<br>    tictactoe = []<br>    for row in range(n):<br>        tictactoe.append([])<br>        line = input().split()<br>        tictactoe[row] = [eval(x) for x in line]<br>    tag = -1</p><pre><code>for i in range(n):    num = tictactoe[i][0]    for j in range(n - 1):        if tictactoe[i][j] != tictactoe[i][j + 1]:            break        if j == n - 2:            tag = numfor j in range(n):    num = tictactoe[0][j]    for i in range(n - 1):        if tictactoe[i][j] != tictactoe[i + 1][j]:            break        if i == n - 2:            tag = numfor i in range(n - 1):    if tictactoe[i][i] != tictactoe[i + 1][i + 1]:        break    if i == n - 2:        tag = tictactoe[0][0];for i in range(n - 1):    if tictactoe[n - 1 - i][i] != tictactoe[n - 2 - i][i + 1]:        break    if i == n - 2:        tag = tictactoe[n - 1][0]if tag == 1:    print(&quot;X&quot;)elif tag == 0:    print(&quot;O&quot;)else:    print(&quot;NIL&quot;)</code></pre><p>main()</p><p>【描述】<br>定义函数：def list_to_tuples(two_dimensional_list)，该函数接受一个二维列表作为参数，内嵌列表的元素是字符串；返回一个二维元组，内嵌元组的内容是内嵌列表的内容的逆序。 <br>例如，如果输入的二维列表是：[[‘mean’, ‘really’, ‘is’, ‘jean’], [‘world’, ‘my’, ‘rocks’, ‘python’]]，函数返回元组：((‘jean’, ‘is’, ‘really’, ‘mean’), (‘python’, ‘rocks’, ‘my’, ‘world’))。<br>【输入】<br>每一行输入一个字符串，字符串中单词之间以空格分隔。每行字符串构成二维列表的一个内嵌列表。可能会有多行输入。<br>【输出】<br>一个二维元组。<br>【输入示例】</p><p>mean really is jean<br>world my rocks python<br>【输出示例】</p><p>((‘jean’, ‘is’, ‘really’, ‘mean’), (‘python’, ‘rocks’, ‘my’, ‘world’))<br>参考答案：<br>def list_to_tuples(two_dimensional_list):<br>    lst = []<br>    for i in range(len(two_dimensional_list)):<br>        item = two_dimensional_list[i]<br>        item.reverse()<br>        lst.append(tuple(item))<br>    return tuple(lst)</p><p>def main():<br>    lst = []<br>    sentinel = ‘’<br>    for line in iter(input, sentinel):<br>        lst.append(line.split())<br>    print(list_to_tuples(lst))</p><p>main()</p><p>【描述】<br>输入一个1到7的数字，输出对应的星期名的缩写。<br>1 Mon<br>2 Tue<br>3 Wed<br>4 Thu<br>5 Fri<br>6 Sat<br>7 Sun<br>【输入】<br>输入1到7之间数字。<br>【输出】<br>输出对应的星期名的缩写。<br>【输入示例】<br>1<br>【输出示例】</p><p>Mon<br>参考答案：<br>d = {1:”Mon”, 2:”Tue”, 3:”Wed”, 4:”Thu”, 5:”Fri”, 6:”Sat”, 7:”Sun”}<br>x = int(input())<br>print(d[x])</p><p>【描述】<br>输入一个简单英文句子，统计并依次输出该句子中元音字母a、e、i、o、u（不区分大小写）出现的次数。<br>【输入】<br>一行中输入一个简单英文句子。<br>【输出】<br>一行中依次输出a、e、i、o、u在句子中出现的次数，整数以空格间隔。<br>【输入示例】</p><p>If so,you already have a Google Account. You can sign in on the right.<br>【输出示例】</p><p>6 4 4 7 3<br>【来源】<br>《Python程序设计基础》第6章编程题3。<br>参考答案：<br>line = input()<br>d = {}<br>for ch in line:<br>    if ch.isalpha():<br>        if ch.isupper():<br>            ch = ch.lower()<br>        if ch in “aeiou”:<br>            if ch in d:<br>                d[ch] += 1<br>            else:<br>                d[ch] = 1<br>letters = sorted(list(d.items()))<br>for letter in letters:<br>    print(letter[1], end=’ ‘)</p><p>【描述】<br>定义函数：def number_to_words(number)，该函数接受一个整数作为参数；返回一个小写英文字符串，字符串的单词描述了该整数。 <br>英文单词：zero、one、two、three、four、five、six、seven、eight、nine。<br>例如，如果输入的整数是：-4721，函数返回字符串：”negative four seven two one”。<br>【输入】<br>输入一个整数。<br>【输出】<br>整数的英文单词描述（单词之间以一个空格间隔）。<br>【输入示例】<br>-4721<br>【输出示例】</p><p>negative four seven two one<br>【来源】<br>《Python程序设计基础》第6章编程题4。<br>参考答案：<br>def number_to_words(number):<br>    digit_dictionary = {“1” : “one”,<br>                        “2” : “two”,<br>                        “3” : “three”,<br>                        “4” : “four”,<br>                        “5” : “five”,<br>                        “6” : “six”,<br>                        “7” : “seven”,<br>                        “8” : “eight”,<br>                        “9” : “nine”,<br>                        “0” : “zero”}<br>    output_string = “”<br>    if number &lt; 0:<br>        number = -number<br>        output_string = “negative “<br>    string_input = str(number)<br>    splitted = list(string_input)<br>    for i in splitted:<br>        output_string += digit_dictionary[i] + “ “<br>    stripped = output_string.rstrip(“ “)<br>    return stripped</p><p>def main():<br>    number = int(input())<br>    print(number_to_words(number))</p><p>main()</p><p>【描述】<br>定义函数：def formatted_print(dictionary)，该函数接受一个字典作为参数，字典的键是学生姓名，字典的值是对应学生的平均分数。函数按照如下所指定的格式打印学生姓名及其对应的平均分数。 <br>例如，如果输入的字典是：{‘john’:34.480,’eva’:88.5, ‘alex’:90.55, ‘tim’: 65.900}，函数打印出如下信息：<br>alex       90.55<br>eva        88.50<br>tim        65.90<br>john       34.48<br>姓名输出宽度10且左对齐；平均分数输出宽度6，保留2位小数，且右对齐。<br>所有这些信息按照学生的平均分数降序排序输出。<br>输入数据，调用该函数，输出结果。<br>【输入】<br>每一行输入姓名、平均分数，其间以逗号分隔。每行数据构成字典的一个键值对。可能会有多行输入。<br>【输出】<br>见【输出示例】。<br>【输入示例】</p><p>john,34.480<br>eva,88.5<br>alex,90.55<br>tim,65.900<br>【输出示例】</p><p>alex       90.55<br>eva        88.50<br>tim        65.90<br>john       34.48<br>参考答案：<br>def formatted_print(dictionary):<br>    d = {key:value for key, value in dictionary.items()}<br>    lst = sorted(d.items(), key=lambda item:item[1], reverse=True)<br>    for i in range(len(lst)):<br>        print(“{0:10s}{1:&gt;6.2f}”.format(lst[i][0], lst[i][1]))</p><p>def main():<br>    d = {}<br>    sentinel = ‘’<br>    for line in iter(input, sentinel):<br>        line = line.split(‘,’)<br>        d[line[0]] = float(line[1])<br>    formatted_print(d)</p><p>main()</p><p>【描述】<br>给定公司n名员工的工龄，要求按工龄增序输出每个工龄段有多少员工。<br>【输入】<br>一行中给出n个整数，即每个员工的工龄，范围在[0, 50]，整数间以空格间隔。<br>【输出】<br>按工龄的递增顺序输出每个工龄的员工个数，格式为：工龄:人数。每项占一行。如果人数为0则不输出该项。<br>【输入示例】<br>10 2 0 5 7 2 5 2<br>【输出示例】</p><p>0:1<br>2:3<br>5:2<br>7:1<br>10:1<br>参考答案：<br>lst = [int(x) for x in input().split()]<br>d = {}<br>for x in lst:<br>    if x in d:<br>        d[x] += 1<br>    else:<br>        d[x] = 1<br>counts = list(sorted(list(d.items())))<br>for i in range(len(counts)):<br>    print(counts[i][0], ‘:’, counts[i][1], sep = ‘’)</p><p>【描述】<br>输入若干个整数，输出其中出现了多少个不相同的数。<br>【输入】<br>一行中输入若干个整数，整数之间以空格分隔。<br>【输出】<br>一个数字，表示多少个不相同的数。<br>【输入示例】<br>1 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20<br>【输出示例】<br>19<br>【来源】<br>《Python程序设计基础》第6章编程题1。<br>参考答案：<br>numbers = [int(x) for x in input().split()]<br>new_numbers = list(set(numbers))<br>print(len(new_numbers))</p><p>【描述】<br>小慧最近在数学课上学习了集合。小慧的老师给了小慧这样一个集合：<br>s = { p / q | w ≤ p ≤ x, y ≤ q ≤ z }<br>根据给定的w、x、y、z，求出集合中一共有多少个元素。<br>【输入】<br>4个整数，分别是w（1 ≤ w ≤ x），x（1 ≤ x ≤ 100），y（1 ≤ y ≤ z），z（1 ≤ z ≤ 100），以空格分隔。<br>【输出】<br>集合中元素的个数。<br>【输入示例】<br>1 10 1 1<br>【输出示例】</p><p>10<br>【来源】<br>《Python程序设计基础》第6章编程题2。<br>参考答案：<br>w, x, y, z = (int(value) for value in input().split())<br>p = [value for value in range(w, x + 1)]<br>q = [value for value in range(y, z + 1)]<br>result = [p[i] / q[j] for i in range(len(p)) for j in range(len(q))]<br>print(len(set(result)))</p><p>【描述】<br>输入n个整数，对这n个整数去重之后按原顺序输出。<br>【输入】<br>一行中输入n个整数。其中1≤n≤100，每个数的范围1≤x≤n。整数之间以空格间隔。<br>【输出】<br>去重之后按原顺序输出。<br>【输入示例】<br>1 3 2 1 3<br>【输出示例】</p><p>1 3 2<br>参考答案：<br>numbers = [int(x) for x in input().split()]<br>new_numbers = list(set(numbers))<br>new_numbers.sort(key = numbers.index)<br>for x in new_numbers:<br>    print(x, end=’ ‘)<br>print()<br>【描述】<br>分析活动投票情况。第一小队有五名队员，序号是1、2、3、4、5；第二小队也有五名队员，序号6、7、8、9、10。输入一个得票字符串，求第二小队没有得票的队员序号。<br>【输入】<br>在一行中输入得票的队员的序列号，用逗号隔开。<br>【输出】<br>在一行中输出第二小队没有得票的队员序号。<br>【输入示例】<br>1,5,9,3,9,1,1,7,5,7,7,3,3,1,5,7,4,4,5,4,9,5,10,9<br>【输出示例】</p><p>6 8<br>参考答案：<br>set1 = {6, 7, 8, 9, 10}<br>lst = [int(x) for x in input().split(‘,’)]<br>set2 = set(lst)<br>result = list(set1 - set2)<br>result.sort()<br>for x in result:<br>    print(x, end = ‘ ‘)</p><p>【描述】<br>给定两组整数，要求找出不是两者共有的元素。<br>【输入】<br>分别在两行中给出两组整数，整数间以空格分隔。<br>【输出】<br>在一行中按照数字给出的顺序输出不是两者共有的元素，数字间以空格分隔，但行末不得有多余的空格。<br>题目保证至少存在一个这样的数字。同一数字不重复输出。<br>【输入示例】</p><p>3 -5 2 8 0 3 5 -15 9 100<br>6 4 8 2 6 -5 9 0 100 8 1<br>【输出示例】</p><p>3 5 -15 6 4 1<br>参考答案：<br>lst1 = [int(x) for x in input().split()]<br>lst2 = [int(x) for x in input().split()]<br>lst3 = lst1 + lst2<br>set1 = set(lst1)<br>set2 = set(lst2)<br>result = list(set1 ^ set2)<br>result.sort(key = lst3.index)<br>length = len(result)<br>for i in range(length - 1):<br>    print(result[i], end = ‘ ‘)<br>print(result[length - 1])</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;描述】&lt;br&gt;让我们学习用Python语言向世界问好。”Hello World”示例程序最早出现于1972年，由贝尔实验室成员Brian Kernighan撰写的内部技术文件《Introduction to the Language B》之中。不久同作者于1974年所撰写的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>tian</title>
    <link href="http://levmegf.github.io/2022/06/05/tian/"/>
    <id>http://levmegf.github.io/2022/06/05/tian/</id>
    <published>2022-06-05T08:37:26.058Z</published>
    <updated>2022-06-05T08:39:41.726Z</updated>
    
    <content type="html"><![CDATA[<p>02 填空<br>【一】程序设计概述<br>1、基于冯 · 诺依曼思想而设计的计算机硬件由________、运算器、存储器、输入设备和输出设备5个基本组成部分构成。<br>参考答案：<br>控制器<br>分值：   2<br>难度：   简单<br>知识点：   程序设计概述计算机系统<br>2、一个字节等于________位（注：填写阿拉伯数字）。<br>参考答案：<br>8<br>分值：   2<br>难度：   简单<br>知识点：   程序设计概述计算机系统<br>3、程序设计语言包括机器语言、汇编语言和________。<br>参考答案：<br>高级语言<br>分值：   2<br>难度：   简单<br>知识点：   程序设计概述程序设计基础<br>4、Python语言源程序文件的扩展名通常为________。<br>【来源】<br>《Python程序设计基础》第1章思考与练习。<br>参考答案：<br>.py、py<br>分值：   2<br>难度：   简单<br>知识点：   程序设计概述Python程序开发<br>5、Python内置的集成开发环境是________。<br>参考答案：<br>IDLE<br>分值：   2<br>难度：   简单<br>知识点：   程序设计概述Python程序开发<br>6、Python解释器的提示符是________。<br>参考答案：</p><blockquote><blockquote><blockquote></blockquote><p>分值：   2<br>难度：   简单<br>知识点：   程序设计概述Python程序开发<br>7、Python 3.4及后续版本中，默认的安装和管理Python包（库）的工具是________。<br>【来源】<br>《Python程序设计基础》第1章思考与练习。<br>参考答案：<br>pip<br>分值：   2<br>难度：   较简单<br>知识点：   程序设计概述Python程序开发<br>8、下面程序的输出结果是________。<br>print((15 / 5) * 2)<br>【来源】<br>《Python程序设计基础》第1章思考与练习。<br>参考答案：<br>6.0<br>分值：   2<br>难度：   较简单<br>知识点：   程序设计概述初识Python程序<br>9、下面程序的输出结果是________。<br>print(5 // 4)<br>【来源】<br>《Python程序设计基础》第1章思考与练习。<br>参考答案：<br>1<br>分值：   2<br>难度：   较简单<br>知识点：   程序设计概述初识Python程序<br>10、下面程序的输出结果是________。<br>print(format(57.467657,”.2f”))<br>【来源】<br>《Python程序设计基础》第1章思考与练习。<br>参考答案：<br>57.47<br>分值：   2<br>难度：   较简单<br>知识点：   程序设计概述初识Python程序<br>11、下面程序的输出结果是________。<br>print(“%.2f” % (57.467657))<br>【来源】<br>《Python程序设计基础》第1章思考与练习。<br>参考答案：<br>57.47<br>分值：   2<br>难度：   较简单<br>知识点：   程序设计概述初识Python程序<br>12、下面程序的输出结果是________（注意：不要有任何多余的空格）。<br>print(“hello”, 5)<br>【来源】<br>《Python程序设计基础》第1章思考与练习。<br>参考答案：<br>hello 5<br>分值：   2<br>难度：   较简单<br>知识点：   程序设计概述初识Python程序<br>13、下面程序的输出结果是________。<br>print(‘{0},{1}’.format(‘carmen’,20))<br>参考答案：<br>carmen,20<br>分值：   2<br>难度：   中等<br>知识点：   程序设计概述初识Python程序<br>14、下面程序的输出结果是________。<br>print(‘{},{}’.format(‘carmen’,20))<br>参考答案：<br>carmen,20<br>分值：   2<br>难度：   中等<br>知识点：   程序设计概述初识Python程序<br>15、下面程序的输出结果是________。<br>print(“{:.2f}”.format(96.3213))<br>参考答案：<br>96.32<br>分值：   2<br>难度：   中等<br>知识点：   程序设计概述初识Python程序<br>【二】基本程序设计<br>1、下列表达式的值是________。<br>1 + 2 + (3 + 4) * ((5 + 6 % 7 * 8) - 9) – 10<br>【来源】<br>《Python程序设计基础》第2章思考与练习。<br>参考答案：<br>301<br>分值：   2<br>难度：   简单<br>知识点：   基本程序设计数值数据类型和运算符<br>2、下列数学式子转换为算术表达式是________（注：不要有任何多余的空格）。</p></blockquote></blockquote><p>【来源】<br>《Python程序设计基础》第2章思考与练习。<br>参考答案：<br>(3+4<em>x)/5-10</em>(y-5)<em>(a+b+c)/x+9</em>(4/x+(9+x)/y)<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计数值数据类型和运算符<br>3、下面程序的输出结果是________。<br>value = 8.6<br>print(int(value))<br>【来源】<br>《Python程序设计基础》第2章思考与练习。<br>参考答案：<br>8<br>分值：   2<br>难度：   简单<br>知识点：   基本程序设计数值数据类型和运算符<br>4、下面程序的输出结果是________。<br>value = 8.6<br>print(round(value))<br>【来源】<br>《Python程序设计基础》第2章思考与练习。<br>参考答案：<br>9<br>分值：   2<br>难度：   简单<br>知识点：   基本程序设计数值数据类型和运算符<br>5、下面程序的输出结果是________。<br>print(int(“08”))<br>【来源】<br>《Python程序设计基础》第2章思考与练习。<br>参考答案：<br>8<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计数值数据类型和运算符<br>6、下面程序的输出结果是________。<br>print(float(“08”))<br>【来源】<br>《Python程序设计基础》第2章思考与练习。<br>参考答案：<br>8.0<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计数值数据类型和运算符<br>7、下面程序的输出结果是________ 。<br>print(format(0.0033911, “6.3%”))<br>【来源】<br>《Python程序设计基础》第2章思考与练习。<br>参考答案：<br>0.339%<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计数值数据类型和运算符<br>8、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>print(1, 2, 3, sep=’:’)<br>参考答案：<br>1:2:3<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计字符串和字符简介<br>9、下面程序的输出结果是________。<br>s = “Hello”<br>print(len(s))<br>【来源】<br>《Python程序设计基础》第2章思考与练习。<br>参考答案：<br>5<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计字符串和字符简介<br>10、下面程序的输出结果是。<br>x = ‘a’<br>y = ‘A’<br>print(chr(ord(y) + ord(x) - ord(y)))<br>【来源】<br>《Python程序设计基础》第2章思考与练习。<br>参考答案：<br>a<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计字符串和字符简介<br>11、下面程序的输出结果是________。<br>print([3, “dog”, 9, “cat”][1])<br>参考答案：<br>dog<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计列表、元组和字典简介<br>12、下面程序的输出结果是________。<br>d = {1:”a”, 2:”b”}<br>print(d[1])<br>参考答案：<br>a<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计列表、元组和字典简介<br>13、使用math模块前，需要使用________关键字导入该模块。<br>参考答案：<br>import<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计内置函数和数学函数<br>14、下面程序的输出结果是________。<br>print(max(3, 5, 1, 7, 4))<br>参考答案：<br>7<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计内置函数和数学函数<br>15、下面程序的输出结果是。<br>s = “Python” + str(3)<br>print(s.lower())<br>参考答案：<br>python3<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计对象和方法简介<br>16、下列表达式的值是________。<br>3<strong>2</strong>3<br>参考答案：<br>6561<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>17、print(“hello” ‘world’)的输出结果是________。<br>参考答案：<br>helloworld<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>18、print(bin(10))的输出结果是（进制用小写字母表示）<strong><strong><strong><strong>。<br>参考答案：<br>0b1010<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>19、print(hex(16))的输出结果是（进制用小写字母表示）________。<br>参考答案：<br>0x10<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>20、print(int(‘101’, 2))的输出结果是________。<br>参考答案：<br>5<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>【三】分支<br>1、下面程序的输出结果是________。<br>print(int(True))<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>1<br>分值：   2<br>难度：   简单<br>知识点：   程序的控制结构布尔类型和关系运算符<br>2、下面程序的输出结果是________。<br>print(int(False))<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>0<br>分值：   2<br>难度：   简单<br>知识点：   程序的控制结构布尔类型和关系运算符<br>3、下面程序的输出结果是________。<br>print(bool(8))<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>True<br>分值：   2<br>难度：   简单<br>知识点：   程序的控制结构布尔类型和关系运算符<br>4、下面程序的输出结果是________。<br>print(bool(0))<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>False<br>分值：   2<br>难度：   简单<br>知识点：   程序的控制结构布尔类型和关系运算符<br>5、下面表达式的值为________。<br>[2] in [1,2,3]<br>参考答案：<br>False<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构成员运算符和身份运算符<br>6、下面程序的输出结果是________。<br>a, b, c = 1, 2, 6<br>if a &lt;= b or c &lt; 0 or b &lt; c:<br>    s = b + c<br>else:<br>    s = a + b + c<br>print(s)<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>8<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构if语句<br>7、下面程序的输出结果是________。<br>m, n, x = 1, 0, 2<br>if not n:<br>    x -= 1<br>if m:<br>    x -= 2<br>if x:<br>    x -= 3<br>print(x)<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>-4<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构if语句<br>8、下面程序的输出结果是________。<br>a, b, c, d = 1, 3, 5, 4<br>if a &lt; b:<br>    if c &lt; d:<br>        x = 1<br>    else:<br>        if a &lt; c:<br>            if b &lt; d:<br>                x = 2<br>            else:<br>                x = 3<br>        else:<br>            x = 6<br>else:<br>    x = 7<br>print(x)<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>2<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构if语句<br>9、下面程序的输出结果是________。<br>x = 100<br>if x &gt; 10:<br>    x = x + 10<br>if x &gt; 20:<br>    x = x + 50<br>print(x)<br>参考答案：<br>160<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构if语句<br>10、下面程序的输出结果是________。<br>a, b = 10, 20<br>ok1, ok2 = 5, 0<br>if a &lt; b:<br>    if b != 15:<br>        if not ok1:<br>            x = 1<br>        elif ok2:<br>            x = 10<br>        else:<br>            x = -1<br>print(x)<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>-1<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构if语句<br>11、下面程序的输出结果是________。<br>if 6 &lt; 5:<br>    print(‘one’)<br>elif 7 == 9:<br>    print(‘two’)<br>print(“three”)<br>参考答案：<br>three<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构if语句<br>12、下面程序的输出结果是________。<br>x = 5<br>if 8 % 4:<br>    x = x - 1<br>elif 3 &lt; 4 / 2:<br>    x = x - 2<br>elif “t”:<br>    x = x - 3<br>else:<br>    x = x - 4<br>print(x)<br>参考答案：<br>2<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构if语句<br>13、下面程序的输出结果是________。<br>a = 3<br>b = 2<br>x = a if a &gt; b else b<br>print(x)<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>3<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构if语句<br>14、下面条件表达式的值为________。<br>5 if 5&gt;6 else (6 if 3&gt;2 else 5)<br>参考答案：<br>6<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构if语句<br>15、下面程序的输出结果是________。<br>a = 14 // 3<br>b = 4 &gt; 5<br>print(a and b)<br>参考答案：<br>False<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构布尔类型和关系运算符逻辑运算符<br>16、要想得到[0,100]范围内的随机数，random.randint(0, n)里的n应该是________。<br>参考答案：<br>100<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构产生随机数<br>17、下面表达式的值为________。<br>10 + 5 // 3 - True + False<br>参考答案：<br>10<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构布尔类型和关系运算符<br>18、下面表达式的值为________。<br>0 and 1 or not 2 &lt; True<br>参考答案：<br>True<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构布尔类型和关系运算符逻辑运算符<br>19、下面表达式的值为________。<br>((2 &gt;= 2) or (2 &lt; 2)) and 2<br>参考答案：<br>2<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构布尔类型和关系运算符逻辑运算符<br>20、下面表达式的值为________。<br>3 and 0 and 5<br>参考答案：<br>0<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构逻辑运算<br>【四】循环<br>1、下面程序循环了________次（注：填写阿拉伯数字）。<br>k = 1000<br>while k &gt; 1:<br>    print(k)<br>    k = k // 2<br>参考答案：<br>9<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构while语句<br>2、如果输入4、-1、6、9、8、3、0，下面程序的输出结果是</strong></strong></strong></strong> 。<br>number = int(input(‘输入一个整数: ‘))<br>max = number<br>while number != 0:<br>    number = int(input(‘输入一个整数: ‘))<br>    if number &gt; max:<br>        max = number<br>print(max)<br>参考答案：<br>9<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构while语句<br>3、下面程序的输出结果是________。<br>number = 15292<br>if number == 0:<br>    print(“0”)<br>else:<br>    while number:<br>        right_digit = number % 10<br>        print(right_digit, end=’’)<br>        number //= 10<br>参考答案：<br>29251<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构while语句<br>4、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>a, b, c = 1, 2, 3<br>while a &lt; b &lt; c:<br>    a, b = b, a<br>    c -= 1<br>print(a, b, c)<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>2 1 2<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构while语句<br>5、下面表达式的值为________。<br>len(range(1,10))<br>参考答案：<br>9<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构for语句<br>6、下面表达式的值为________。<br>list(range(2, 10, 2))<br>参考答案：<br>[2, 4, 6, 8]<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构for语句</p><p>7、下面程序执行的循环次数是________ 。<br>for i in range(1, n + 1):<br>    # 循环体<br>参考答案：<br>n<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构for语句<br>8、下面程序的输出结果是。<br>y = 0<br>for i in range(0, 10, 2):<br>    y += i<br>print(y)<br>参考答案：<br>20<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构for语句<br>9、在程序中________处填上恰当的成分（注：不要有任何空格），完成题目要求的功能。<br>从键盘输入20个整数，输出它们的和。<br>total = 0<br>for i in range(1, 21):<br>    a= int(input())<br>    total = ________<br>print(“Total=”, total)<br>参考答案：<br>total+a、a+total<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构for语句<br>10、在程序中________处填上恰当的成分（注：不要有任何空格），完成题目要求的功能。<br>计算1-2+3-4+5 … 99的所有数的和。<br>total1 = 0<br>total2 = 0<br>for i in range(1,100,2):<br>    ________<br>for j in range(2,100,2):<br>    total2 += j<br>total3 = total1 - total2<br>print(total3)<br>参考答案：<br>total1+=i、total1=total1+i、total1=i+total1<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构for语句<br>11、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>i=0<br>while i&lt;10:<br>    i += 1<br>    if i == 7:<br>        continue<br>    else:<br>        print(i,end=’ ‘)<br>参考答案：<br>1 2 3 4 5 6 8 9 10<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构while语句pass、break和continue语句<br>12、下面程序的输出结果是________。<br>x = 15<br>while 10 &lt; x &lt; 50:<br>    x += 1<br>    if x // 3:<br>        x += 1<br>        break<br>    else:<br>        continue<br>print(x)<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>17<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构while语句pass、break和continue语句<br>13、下面程序的输出结果是________。<br>total = 0<br>for i in range(100):<br>    if i % 10:<br>        continue<br>    total = total + i<br>print(total)<br>参考答案：<br>450<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构for语句pass、break和continue语句<br>14、下面程序执行后，输出结果的最后一行是________。<br>for i in range(1, 3):<br>    for j in range(2, 5):<br>        print(i * j)<br>参考答案：<br>8<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构嵌套循环<br>15、下面程序的输出结果是________。<br>counter = 0<br>for i in range(10):<br>    for j in range(10):<br>        if i == j:<br>            continue<br>        counter += 1<br>print(counter)<br>【来源】<br>《Python程序设计基础》第3章思考与练习。<br>参考答案：<br>90<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构pass、break和continue语句嵌套循环<br>【五】函数<br>1、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>def fib(n):<br>    f1, f2 = 0, 1<br>    while f2 &lt; n:<br>        print(f2, end = ‘ ‘)<br>        f1, f2 = f2, f1 + f2 </p><p>fib(10)<br>参考答案：<br>1 1 2 3 5 8<br>分值：   2<br>难度：   较简单<br>知识点：   函数函数的定义和调用<br>2、下面程序的输出结果是________。<br>def fun(x, y):<br>    x = x + y<br>    y = x - y<br>    x = x - y</p><p>def main():<br>    x, y = 2, 3<br>    fun(x, y);<br>    print(“%d#%d” % (x, y))</p><p>main()<br>【来源】<br>《Python程序设计基础》第4章思考与练习。<br>参考答案：<br>2#3<br>分值：   2<br>难度：   较简单<br>知识点：   函数函数的定义和调用<br>3、下面程序的输出结果是________。<br>def main():<br>    print(min(5, 6))</p><p>def min(n1, n2):<br>    smallest = n1<br>    if n2 &lt; smallest:<br>        smallest = n2</p><p>main()<br>参考答案：<br>None<br>分值：   2<br>难度：   中等<br>知识点：   函数函数的定义和调用<br>4、下列程序的输出结果是________（注：不要有任何多余的空格）。<br>def f(x, y):<br>    return x + y, x - y, x * y, x / y</p><p>t1, t2, t3, t4 = f(9, 5)<br>print(t1, t2, t3, t4)<br>参考答案：<br>14 4 45 1.8<br>分值：   2<br>难度：   中等<br>知识点：   函数函数的定义和调用<br>5、下面程序的输出结果是________ 。<br>def fun(x, y, z):<br>    return x + y + z</p><p>print(fun(y = 4, z = 5, x = 2))<br>【来源】<br>《Python程序设计基础》第4章思考与练习。<br>参考答案：<br>11<br>分值：   2<br>难度：   较简单<br>知识点：   函数函数的参数<br>6、下面程序的输出结果是________ 。<br>def fun(x, y=2, z=3):<br>    return x + y + z</p><p>print(fun(1, z = 4))<br>【来源】<br>《Python程序设计基础》第4章思考与练习。<br>参考答案：<br>7<br>分值：   2<br>难度：   较简单<br>知识点：   函数函数的参数<br>7、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>def fun(*x):<br>    print(x)</p><p>fun(1, 2, 3)<br>参考答案：<br>(1, 2, 3)<br>分值：   2<br>难度：   中等<br>知识点：   函数函数的参数<br>8、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>def fun(**x):<br>    print(x)</p><p>fun(a = 1, b = 2, c = 3)<br>参考答案：<br>{‘a’: 1, ‘b’: 2, ‘c’: 3}<br>分值：   2<br>难度：   中等<br>知识点：   函数函数的参数<br>9、下面程序的输出结果是________。<br>a, b = 1, 2</p><p>def fun():<br>    a = 100<br>    b = 200</p><p>def main():<br>    a, b = 5, 7<br>    fun()<br>    print(“%d#%d” % (a, b))</p><p>main()<br>【来源】<br>《Python程序设计基础》第4章思考与练习。<br>参考答案：<br>5#7<br>分值：   2<br>难度：   中等<br>知识点：   函数变量的作用域<br>10、下面程序的输出结果是________。<br>a = “first”<br>def second(a):<br>      a = “second”<br>def third():<br>      global a<br>      a = “third”<br>third()<br>print(a, end=’,’)<br>second(“fourth”)<br>print(a)<br>参考答案：<br>third,third<br>分值：   2<br>难度：   中等<br>知识点：   函数变量的作用域<br>11、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>print(list(map(lambda x : x ** 2, range(1, 11))))<br>【来源】<br>《Python程序设计基础》第4章思考与练习。<br>参考答案：<br>[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]<br>分值：   2<br>难度：   中等<br>知识点：   函数lambda表达式<br>12、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>print(list(filter(lambda x : x % 2 != 0 and x % 3 != 0, range(2, 25))))<br>【来源】<br>《Python程序设计基础》第4章思考与练习。<br>参考答案：<br>[5, 7, 11, 13, 17, 19, 23]<br>分值：   2<br>难度：   中等<br>知识点：   函数lambda表达式<br>13、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>import functools<br>lst = [“Welcome “, “to “, “Python”, “, “, “Programming “, “is “, “fun”, “.”]<br>print(functools.reduce(lambda x, y : x + y, lst))<br>【来源】<br>《Python程序设计基础》第4章思考与练习。<br>参考答案：<br>Welcome to Python, Programming is fun.<br>分值：   2<br>难度：   较难<br>知识点：   函数lambda表达式<br>14、若匿名函数f = lambda x, y: x + y，则f({1:2}, {3:4})返回的结果是________（若有错误，则填写Error）。<br>参考答案：<br>Error<br>分值：   2<br>难度：   中等<br>知识点：   函数lambda表达式<br>15、若匿名函数f = [lambda x = 3: x * 3, lambda x: x ** 3]，则f<a href="f%5B0%5D()">1</a>返回的结果是________（若有错误，则填写Error）。<br>参考答案：<br>729<br>分值：   2<br>难度：   较难<br>知识点：   函数lambda表达式<br>16、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>def scope():<br>    n = 4<br>    m = 5<br>    print(m, n, end = ‘ ‘)<br>n = 5<br>t = 8<br>scope()<br>print(n, t)<br>参考答案：<br>5 4 5 8<br>分值：   2<br>难度：   较简单<br>知识点：   函数<br>17、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>lst = [1]<br>def scope():<br>    lst.append(6)<br>    print(*lst)<br>scope()<br>参考答案：<br>1 6<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>18、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>a = 10<br>def fun():<br>    global a<br>    a = 20<br>    print(a, end = ‘ ‘)<br>fun()<br>print(a)<br>参考答案：<br>20 20<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>19、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>b, c = 2, 4<br>def fun(d):<br>    global a<br>    a = d * c<br>fun(b)<br>print(a)<br>参考答案：<br>8<br>分值：   2<br>难度：   中等<br>20、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>def nprint(message, n):<br>    for i in range(n):<br>        print(message, end = ‘ ‘)<br>nprint(‘a’, 3)<br>nprint(n = 5, message = “good”)<br>参考答案：<br>a a a good good good good good<br>分值：   2<br>难度：   较简单<br>知识点：   函数<br>【六】海龟图<br>1、在Python中，为了使用turtle图形模块，必须使用________来导入该模块（注意：不要有任何多余的空格）。<br>参考答案：<br>import turtle、import<br>分值：   2<br>难度：   简单<br>知识点：   海龟图<br>2、在turtle中，使用________方法设置画布窗口大小和位置（注意：只需填写方法或函数名即可）。<br>参考答案：<br>setup、setup()<br>分值：   2<br>难度：   较简单<br>知识点：   海龟图<br>3、在turtle中，使用________方法朝着海龟箭头指向的方向移动画笔（注意：只需填写方法或函数名即可）。<br>参考答案：<br>forward、forward()、fd、fd()<br>分值：   2<br>难度：   较简单<br>知识点：   海龟图<br>4、在turtle中，使用________方法朝着海龟箭头指向的反方向移动画笔（注意：只需填写方法或函数名即可）。<br>参考答案：<br>backward、backward()、back、back()、bk、bk()<br>分值：   2<br>难度：   较简单<br>知识点：   海龟图<br>5、在turtle中，使用________方法设置画笔颜色（注意：只需填写方法或函数名即可）。<br>参考答案：<br>pencolor、pencolor()、color、color()<br>分值：   2<br>难度：   较简单<br>知识点：   海龟图<br>6、在turtle中，使用________方法设置填充颜色（注意：只需填写方法或函数名即可）。<br>参考答案：<br>fillcolor、fillcolor()、color、color()<br>分值：   2<br>难度：   较简单<br>知识点：   海龟图<br>7、在turtle中，使用________方法设置画笔宽度（注意：只需填写方法或函数名即可）。<br>参考答案：<br>pensize、pensize()、width、width()<br>分值：   2<br>难度：   较简单<br>知识点：   海龟图<br>8、在turtle中，使用________方法绘制文本（注意：只需填写方法或函数名即可）。<br>参考答案：<br>write、write()<br>分值：   2<br>难度：   较简单<br>知识点：   海龟图<br>9、在turtle中，使用________方法抬起画笔，画笔移动时不绘制图形（注意：只需填写方法或函数名即可）。<br>参考答案：<br>penup、penup()、pu、pu()、up、up()<br>分值：   2<br>难度：   中等<br>知识点：   海龟图<br>10、在turtle中，使用________方法可以绘制圆、弧形和正多边形（注意：只需填写方法或函数名即可）。<br>参考答案：<br>circle、circle()<br>分值：   2<br>难度：   中等<br>知识点：   海龟图<br>【七】字符串<br>1、下面程序的输出结果是________。<br>x = “university”<br>print(x[0:4])<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>univ<br>分值：   2<br>难度：   简单<br>知识点：   字符串、列表和元组字符串<br>2、下面程序的输出结果为________ （注意：不要有任何多余的空格）。<br>my_str = “Hello”<br>print(my_str.islower(), my_str.isupper())<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>False False<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>3、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>my_str = “Hello”<br>print(my_str.lower(), my_str.upper())<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>hello HELLO<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>4、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print(“hello”.isalpha(), “CSE-1001”.isalnum())<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>True False<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>5、下面程序的输出结果为________ 。<br>print(“bird”.endswith(“ir”))<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>False<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>6、下面程序的输出结果为________ 。<br>print(“abcdef”.find(‘e’))<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>4<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>7、下面程序的输出结果为________。<br>print(“knickknack”.rfind(‘k’, 3, -2))<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>5<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>8、下面程序的输出结果为________。<br>print(“Mississippi”.replace(‘i’, ‘z’, 2))<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>Mzsszssippi<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>9、下面程序的输出结果为________ 。<br>print(“university”.index(“iv”))<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>2<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>10、下面程序的输出结果为________ 。<br>print(“this is a test”.count(‘s’, 5))<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>2<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>11、下面程序的输出结果为________ 。<br>print(“test”.center(10, ‘x’))<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>xxxtestxxx<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>12、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print(“oops too”.strip(‘o’))<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>ps t<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>13、下面程序的输出结果为________ 。<br>print(“test”.join([‘A’, ‘B’, ‘C’]))<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>AtestBtestC<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>14、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print(“Computer science”.split (‘e’))<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>[‘Comput’, ‘r sci’, ‘nc’, ‘’]<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>15、当输入为’cbabc’时，下列程序的输出结果为________ 。<br>s1 = input()<br>index = 0<br>s2 = ‘’<br>while index &lt; len(s1) - 1:<br>    if s1[index] &gt; s1[index + 1]:<br>        s2 += s1[index]<br>    else:<br>        s2 = s2 * 2<br>    index += 1<br>print(s2)<br>参考答案：<br>cbcbcbcb<br>分值：   2<br>难度：   中等<br>知识点：   字符串、列表和元组字符串<br>【八】列表和元组<br>1、下面程序的输出结果是________。<br>my_list = [5, “old”, “new”, 8, “time”, 2]<br>print(my_list[-1])<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>2<br>分值：   2<br>难度：   简单<br>知识点：   字符串、列表和元组列表<br>2、下面程序的输出结果是________（若有错误，则填写Error）。<br>my_list = [5, “old”, “new”, 8, “time”, 2]<br>print(my_list[6])<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>Error<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组列表<br>3、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>my_list = [“pet”, 12, “cat”, 4.3, “dog”, 46]<br>print(my_list[0:1])<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>[‘pet’]<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组列表<br>4、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>my_list = [“pet”, 12, “cat”, 4.3, “dog”, 46]<br>print(my_list[3:-3])<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>[]<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组列表<br>5、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>my_list = [“Python”, 3.4, 54, “Java”, 82, ‘C’, 7.4]<br>print(my_list[6:0:-2])<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>[7.4, 82, 54]<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组列表<br>6、下面程序的输出结果是________（注：不要有任何多余的空格）。<br>my_list = [“Python”, 3.4, 54, “Java”, 82, ‘C’, 7.4]<br>print(my_list[2::3])<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>[54, ‘C’]<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组列表<br>7、下面程序的输出结果为________ 。（注意：不要有任何多余的空格）<br>x = [5, ‘dog’]<br>y = [‘cat’, 3.5]<br>print(x + y)<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>[5, ‘dog’, ‘cat’, 3.5]<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组列表<br>8、下面程序的输出结果为________ 。（注意：不要有任何多余的空格）<br>x = [5, ‘dog’]<br>y = [‘cat’, 3.5]<br>print(3 * x)<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>[5, ‘dog’, 5, ‘dog’, 5, ‘dog’]<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组列表<br>9、下面程序的输出结果为________ 。（注意：不要有任何多余的空格）<br>my_list = [3, “dog”, 9, “cat”]<br>print(my_list.index(‘cat’))<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>3<br>分值：   2<br>难度：   简单<br>知识点：   字符串、列表和元组列表<br>10、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>my_list = [3, “dog”, 9, “cat”]<br>my_list.append(“dog”)<br>my_list.insert(1, [6, 9])<br>my_list.remove(3)<br>my_list.pop()<br>del my_list[0]<br>my_list.extend([7,8])<br>print(my_list)<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>[‘dog’, 9, ‘cat’, 7, 8]<br>分值：   2<br>难度：   中等<br>知识点：   字符串、列表和元组列表<br>11、下面表达式的值是________（注意：不要有任何多余的空格）。<br>[x for x in [1,2,3,4,5] if x &lt; 3]<br>参考答案：<br>[1, 2]<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组列表<br>12、lst=[3,4,5,6,5,4,3]，执行lst.remove(3)后，lst[0]的值是________。<br>参考答案：<br>4<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组列表<br>13、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>a = 8<br>b = 3<br>c = 2<br>my_tuple = a, b, c<br>print(my_tuple)<br>【来源】<br>《Python程序设计基础》第5章思考与练习。<br>参考答案：<br>(8, 3, 2)<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组元组<br>14、语句x = (3)执行后，x的值为________。<br>参考答案：<br>3<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组元组<br>15、语句x = (3,)执行后，x的值为________（注意：不要有任何多余的空格）。<br>参考答案：<br>(3,)<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组元组<br>【九】字典<br>1、下面程序的输出结果为________。<br>numbers = {“one”: 1, “two”: 2, “three”: 3}<br>print (numbers[“two”])<br>参考答案：<br>2<br>分值：   2<br>难度：   简单<br>知识点：   字典和集合字典<br>2、下面程序的输出结果为________。<br>numbers = {“one”: 1, “two”: 2, “three”: 3}<br>print (“two” in numbers)<br>参考答案：<br>True<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合字典<br>3、下面程序的输出结果为________（注意：不要有任何多余的空格） 。<br>numbers = {1:2, 3:4}<br>numbers.pop(3)<br>print(numbers)<br>参考答案：<br>{1: 2}<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合字典<br>4、下面程序的输出结果为________ 。<br>def main():<br>    d = {}<br>    d[“susan”] = 50<br>    d[“jim”] = 45<br>    d[“joan”] = 54<br>    d[“susan”] = 51<br>    d[“john”] = 53<br>    print(len(d))</p><p>main()<br>参考答案：<br>4<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合字典<br>5、下列程序的输出结果为________（注意：不要有任何多余的空格） 。<br>numbers = {“one”:1, “two”:[4, 6, 3], “three”:3}<br>x = numbers[“two”]<br>x.sort()<br>print(x)<br>参考答案：<br>[3, 4, 6]<br>分值：   2<br>难度：   中等<br>知识点：   字典和集合字典<br>6、下面程序的输出结果为________（注意：不要有任何多余的空格） 。<br>d = {“uno”: [“one”, 1], “dos”: [“two”, 2], 3: [“tres”,”three”]}<br>print(d.get(3, ‘cat’))<br>参考答案：<br>[‘tres’, ‘three’]<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合字典<br>7、下面程序的输出结果为________（注意：不要有任何多余的空格） 。<br>d = {“uno”: [“one”, 1], “dos”: [“two”, 2], 3: [“tres”,”three”]}<br>print(d.get(‘two’, ‘cat’))<br>参考答案：<br>cat<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合字典<br>8、下面程序的输出结果为________。<br>d = {“uno”: “one”,”dos”: “two”}<br>d.setdefault(‘uno’, ‘cat’)<br>print(d[“uno”])<br>参考答案：<br>one<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合字典<br>9、下面程序的输出结果为________。<br>d = {“uno”: “one”,”dos”: “two”}<br>d.setdefault(‘one’, ‘dog’)<br>print(d[“one”])<br>参考答案：<br>dog<br>分值：   2<br>难度：   较简单<br>知识点：   字典<br>10、使用字典对象的________方法（注意：不要有任何多余的空格）获取字典的所有键 。<br>参考答案：<br>keys、keys()<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合字典<br>11、使用字典对象的________方法（注意：不要有任何多余的空格）获取字典的所有值。<br>参考答案：<br>values、values()<br>分值：   2<br>难度：   简单<br>知识点：   字典和集合字典<br>12、使用字典对象的________方法（注意：不要有任何多余的空格）获取字典的所有键/值对。<br>参考答案：<br>items、items()<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合字典<br>13、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print(dict(zip([1, 2], [3, 4])))<br>参考答案：<br>{1: 3, 2: 4}<br>分值：   2<br>难度：   中等<br>知识点：   字典和集合字典<br>14、下面程序的输出结果为________。<br>x = {1: 1}<br>x[2] = 2<br>print(len(x))<br>参考答案：<br>2<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合字典<br>15、下面程序的输出结果为________。<br>x = {1: 2, 3: 4, 5: 6}<br>print(sum(x))<br>参考答案：<br>9<br>分值：   2<br>难度：   中等<br>知识点：   字典和集合字典<br>【十】集合<br>1、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print({1, 2, 3}.union({2, 3, 4}))</p><p>参考答案：<br>{1, 2, 3, 4}<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>2、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print({1, 2, 3}.intersection({2, 3, 4}))<br>参考答案：<br>{2, 3}<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>3、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print({1, 2, 3}.difference({2, 3, 4}))<br>参考答案：<br>{1}<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>4、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print({1, 2, 3}.symmetric_difference({2, 3, 4}))<br>参考答案：<br>{1, 4}<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>5、下面程序的输出结果为________。<br>print({1, 2, 3}.issubset({2, 3, 4}))<br>参考答案：<br>False<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>6、下面程序的输出结果为________。<br>print({4, 1, 2, 3, 8}.issuperset({2, 3, 4}))<br>参考答案：<br>True<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>7、下面程序的输出结果为________。<br>print({1, 2, 3} == {1, 3, 2})<br>参考答案：<br>True<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>8、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>x = {1, 2, 3}<br>x.add(3)<br>print(x)<br>参考答案：<br>{1, 2, 3}<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>9、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>students = {“peter”, “john”}<br>students.add(“john”)<br>students.add(“peterson”)<br>students.remove(“peter”)<br>print(students)<br>参考答案：<br>{‘peterson’, ‘john’}、{‘john’, ‘peterson’}<br>分值：   2<br>难度：   中等<br>知识点：   字典和集合集合<br>10、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print({1, 2, 3} | {5, 3, 4})<br>参考答案：<br>{1, 2, 3, 4, 5}<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>11、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print({1, 2, 3} &amp; {5, 3, 4})<br>参考答案：<br>{3}<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>12、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print({1, 2, 3} - {5, 3, 4})<br>参考答案：<br>{1, 2}<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>13、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>print({1, 2, 3, 4, 5} ^ {4, 5, 6, 7})<br>参考答案：<br>{1, 2, 3, 6, 7}<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>14、下面程序的输出结果为________。<br>print({1, 2, 3} &lt; {5, 10, 3, 1, -111, 2})<br>参考答案：<br>True<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合集合<br>15、下面程序的输出结果为________（注意：不要有任何多余的空格）。<br>set1 = {1, 2, 3}<br>set2 = {6, 2}<br>set1.update(set2)<br>print(set1)<br>参考答案：<br>{1, 2, 3, 6}<br>分值：   2<br>难度：   中等<br>知识点：   字典和集合集合<br>知识点：   文件CSV文件<br>【十五】期中综合测试01<br>1、Python的数值型包括int、________、complex。<br>参考答案：<br>float<br>分值：   2<br>难度：   简单<br>知识点：   基本程序设计<br>2、Python中从键盘输入数据可以利用内置函数input，输出到屏幕，可以使用内置函数________。<br>参考答案：<br>print<br>分值：   2<br>难度：   简单<br>知识点：   程序设计概述<br>3、Python算术运算中的乘方运算符是________。<br>参考答案：<br>**<br>分值：   2<br>难度：   简单<br>知识点：   基本程序设计<br>4、表达式的值为________。<br>参考答案：<br>2<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>5、表达式的值为________。<br>参考答案：<br>False<br>分值：   2<br>难度：   较简单<br>知识点：   列表<br>6、已知x = 3，并且id(x)的返回值为496103280，那么执行语句x += 6之后，表达式 id(x) == 496103280的值为________。<br>参考答案：<br>False<br>分值：   2<br>难度：   中等<br>知识点：   基本程序设计<br>7、表达式的值为________。<br>参考答案：<br>9<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构<br>8、表达式的值为________。<br>参考答案：<br>True<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构<br>9、在循环语句中，________语句的作用是提前结束当前层次的循环。<br>参考答案：<br>break<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构<br>10、现有列表，那么执行后，执行k[-2]的结果是________。<br>参考答案：<br>9<br>分值：   2<br>难度：   中等<br>知识点：   列表<br>11、下面程序的输出结果为________。</p><p>参考答案：<br>24<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>12、下面程序的输出结果为________。</p><p>参考答案：<br>13<br>分值：   2<br>难度：   中等<br>知识点：   字符串<br>13、下面程序的输出结果为________。</p><p>参考答案：<br>3<br>分值：   2<br>难度：   中等<br>知识点：   列表<br>14、下面程序的输出结果为________。</p><p>参考答案：<br>1<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>15、下面程序的输出结果为________。</p><p>参考答案：<br>20<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>16、下面程序的输出结果为________。</p><p>参考答案：<br>80<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>17、下面程序的输出结果为________。</p><p>参考答案：<br>40<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>18、下面程序的输出结果为________。</p><p>参考答案：<br>7<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>19、下面程序的输出结果为________。</p><p>参考答案：<br>None<br>分值：   2<br>难度：   中等<br>知识点：   列表<br>20、一个匹配[3,5]位正整数的正则表达式是________。<br>参考答案：<br>\d{3,5}、”\d{3,5}”、[0-9]{3,5}、”[0-9]{3,5}”、[0123456789]{3,5}、”[0123456789]{3,5}”<br>分值：   2<br>难度：   中等<br>知识点：   字符串<br>【十六】期中综合测试02<br>1、表达式的值为________。<br>参考答案：<br>4.0<br>分值：   2<br>难度：   简单<br>知识点：   基本程序设计<br>2、表达式的值为________。<br>参考答案：<br>2<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>3、已知 x = 3，那么执行语句 x += 6 之后，x的值为________。<br>参考答案：<br>9<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>4、表达式的值为________。<br>参考答案：<br>5.0<br>分值：   2<br>难度：   中等<br>知识点：   基本程序设计<br>5、表达式的值为________。<br>参考答案：<br>666<br>分值：   2<br>难度：   中等<br>知识点：   基本程序设计<br>6、Python标准库math中sin()函数的参数单位是角度还是弧度________（请填写中文）。<br>参考答案：<br>弧度<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>7、表达式的值为________。<br>参考答案：<br>True<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构<br>8、表达式的值为________。<br>参考答案：<br>True<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构<br>9、表达式的值为________。<br>参考答案：<br>5<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构<br>10、表达式的值为________。<br>参考答案：<br>6<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构<br>11、表达式的值为________。<br>参考答案：<br>False<br>分值：   2<br>难度：   中等<br>知识点：   基本程序设计<br>12、已知x = [1, 2]和 y = [3, 4]，那么x + y的结果是________ （注意：不要有任何多余的空格）。<br>参考答案：<br>[1, 2, 3, 4]<br>分值：   2<br>难度：   较简单<br>知识点：   列表<br>13、已知x = [1, 2, 3]，那么x * 3的值为________ （注意：不要有任何多余的空格）。<br>参考答案：<br>[1, 2, 3, 1, 2, 3, 1, 2, 3]<br>分值：   2<br>难度：   较简单<br>知识点：   列表<br>14、表达式的值为________。<br>参考答案：<br>‘11’、11<br>分值：   2<br>难度：   中等<br>知识点：   列表<br>15、如果函数中没有return语句或者return语句不带任何返回值，那么该函数的返回值为________（请填写英文单词，注意大小写）。<br>参考答案：<br>None<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>16、表达式的值为________ （注意：不要有任何多余的空格）。<br>参考答案：<br>[3]<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>17、已知，则语句的输出结果为________。<br>参考答案：<br>10<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>18、表达式的值为________。<br>参考答案：<br>6<br>分值：   2<br>难度：   较简单<br>知识点：   字符串<br>19、表达式的值为________。<br>参考答案：<br>‘assfff’、assfff<br>分值：   2<br>难度：   中等<br>知识点：   字符串<br>20、表达式的值为________。<br>参考答案：<br>‘yybcyyb’、yybcyyb<br>分值：   2<br>难度：   较简单<br>知识点：   字符串<br>【十七】期末综合测试01<br>1、下列程序的输出结果是________ 。</p><p>参考答案：<br>24<br>分值：   2<br>难度：   简单<br>知识点：   基本程序设计<br>2、下列程序的输出结果是________ 。</p><p>参考答案：<br>10<br>分值：   2<br>难度：   简单<br>知识点：   基本程序设计<br>3、下列程序的输出结果是________ 。</p><p>参考答案：<br>3.0<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>4、下列程序的输出结果是________ 。</p><p>参考答案：<br>21.0<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>5、下列程序的输出结果是________ 。</p><p>参考答案：<br>110<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构<br>6、下列程序的输出结果是________ 。</p><p>参考答案：<br>5<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构<br>7、下列程序的输出结果是________ 。</p><p>参考答案：<br>24<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构<br>8、下列程序的输出结果是________ 。</p><p>参考答案：<br>8<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>9、下列程序的输出结果是________（注意：不要有任何多余的空格） 。</p><p>参考答案：<br>[5, ‘dog’, ‘cat’, ‘cat’]<br>分值：   2<br>难度：   中等<br>知识点：   字符串、列表和元组<br>10、下列程序的输出结果是________ 。</p><p>参考答案：<br>tNOeNOsNOt<br>分值：   2<br>难度：   中等<br>知识点：   字符串、列表和元组<br>11、下列程序的输出结果是________ 。</p><p>参考答案：<br>rvn<br>分值：   2<br>难度：   中等<br>知识点：   字符串、列表和元组<br>12、在Python中，________表示空类型。<br>参考答案：<br>None<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>13、语句的输出结果为________（注意：不要有任何多余的空格）。<br>参考答案：<br>11:22:33<br>分值：   2<br>难度：   较简单<br>知识点：   基本程序设计<br>14、语句的输出结果为________。<br>参考答案：<br>False<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构<br>15、在Python中，定义函数的关键字是________。<br>参考答案：<br>def<br>分值：   2<br>难度：   较简单<br>知识点：   函数<br>16、表达式的值为________（注意：不要有任何多余的空格）。<br>参考答案：<br>[2, 3, 4, 5, 6]<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>17、表达式的值为________（注意：不要有任何多余的空格）。<br>参考答案：<br>[1, 3, 5, 7, 9]<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>18、表达式的值为________。<br>参考答案：<br>-4<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>19、表达式的值为________（注意：不要有任何多余的空格）。<br>参考答案：<br>[1, 2]<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组<br>20、已知，那么表达式的值为________。<br>参考答案：<br>False<br>分值：   2<br>难度：   较简单<br>知识点：   字典和集合<br>【十八】期末综合测试02<br>1、的输出结果是________。<br>参考答案：<br>20.0<br>分值：   2<br>难度：   中等<br>知识点：   基本程序设计<br>2、已知a=3、b=5、c=6、d=True，则下面表达式的值为________。</p><p>参考答案：<br>True<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构布尔类型和关系运算符逻辑运算符<br>3、已知x=True、y=False、z=False，的输出结果是________。<br>参考答案：<br>True<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构逻辑运算符<br>4、已知x=0、y=True，的输出结果是________。<br>参考答案：<br>False<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构布尔类型和关系运算符逻辑运算符<br>5、下面表达式的值为________。</p><p>参考答案：<br>True<br>分值：   2<br>难度：   较简单<br>知识点：   程序的控制结构布尔类型和关系运算符逻辑运算符<br>6、’23’*3的结果是________。<br>参考答案：<br>232323<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组字符串<br>7、若：s = “Programming is fun”<br>的计算结果为________。<br>参考答案：<br>False<br>分值：   2<br>难度：   简单<br>知识点：   字符串、列表和元组字符串<br>8、的结果是________。<br>参考答案：<br>3<br>分值：   2<br>难度：   中等<br>知识点：   字符串、列表和元组列表<br>9、的结果是________。<br>参考答案：<br>6<br>分值：   2<br>难度：   中等<br>知识点：   字符串、列表和元组列表<br>10、下面程序的输出结果为________（注意：不要有任何多余的空格）。</p><p>参考答案：<br>(1, 2, 3, 7, 9, 0)<br>分值：   2<br>难度：   较简单<br>知识点：   字符串、列表和元组元组<br>11、下列程序运行后，输出结果中位于最后一行最后一列的值是________。</p><p>参考答案：<br>3<br>分值：   2<br>难度：   中等<br>知识点：   程序的控制结构<br>12、下列程序的输出结果为________。</p><p>参考答案：<br>45<br>分值：   2<br>难度：   中等<br>知识点：   字符串、列表和元组列表<br>13、下列程序运行后，输出结果中最后一行是________。</p><p>参考答案：<br>0<br>分值：   2<br>难度：   中等<br>知识点：   字符串、列表和元组列表<br>14、下列程序的输出结果为________。</p><p>参考答案：<br>12<br>分值：   2<br>难度：   中等<br>知识点：   字符串、列表和元组列表<br>15、下列程序的输出结果为________（注意：不要有任何多余的空格）。</p><p>参考答案：<br>20 20<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>16、下列程序的输出结果为________（注意：不要有任何多余的空格）。</p><p>参考答案：<br>5 4 5 8<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>17、下列程序的输出结果为________（注意：不要有任何多余的空格）。</p><p>参考答案：<br>1 6<br>分值：   2<br>难度：   中等<br>知识点：   函数<br>18、表达式的值为________。<br>参考答案：<br>False<br>分值：   2<br>难度：   较简单<br>知识点：   继承和多态与对象和类相关的内置函数<br>19、执行下列程序：</p><p>在Python Turtle Graphics中，绘制的是________（注：填写中文）。</p><p>参考答案：<br>正方形<br>分值：   2<br>难度：   较简单<br>知识点：   海龟图<br>20、执行语句：a = 10 * 1 / 0，会产生________（注：填写英文）异常。<br>参考答案：<br>ZeroDivisionError<br>分值：   2<br>难度：   较简单<br>知识点：   异常处理内置异常类</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;02 填空&lt;br&gt;【一】程序设计概述&lt;br&gt;1、基于冯 · 诺依曼思想而设计的计算机硬件由________、运算器、存储器、输入设备和输出设备5个基本组成部分构成。&lt;br&gt;参考答案：&lt;br&gt;控制器&lt;br&gt;分值：   2&lt;br&gt;难度：   简单&lt;br&gt;知识点：   程序设计概</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>dan</title>
    <link href="http://levmegf.github.io/2022/06/05/hh/"/>
    <id>http://levmegf.github.io/2022/06/05/hh/</id>
    <published>2022-06-05T08:25:57.784Z</published>
    <updated>2022-06-05T08:36:08.538Z</updated>
    
    <content type="html"><![CDATA[<p>执行下列程序，输出的结果是（    ）。<br>x, y = 1, 2<br>x, y = y, x<br>print(x, y)<br>A. 1 1<br>B. 2 2<br>C. 1 2<br>D. 2 1<br>参考答案：<br>D<br>关于Python程序的执行过程，正确的是（    ）。<br>A. 由解释器一条语句一条语句地执行<br>B. 由编译器将源程序转化为机器语言，然后执行<br>C. 可以同时执行多条语句<br>D. 执行过的语句将不会再被执行<br>参考答案：<br>A<br>算法是程序设计的基础和精髓。一个有效的算法应该具有如下特点，其中错误的是（    ）。<br>A. 零个或多个输入及一个或多个输出<br>B. 无穷性<br>C. 可行性<br>D. 确定性<br>参考答案：<br>B<br>下列（   ）是对算法的正确描述。<br>A. 解决一个问题只有一种算法<br>B. 对于所有问题都可以找到最好的算法<br>C. 算法所包含的语句数量越少，算法越先进<br>D. 解决一个问题可以有多种算法<br>参考答案：<br>D<br>下列Python程序，正确的是（    ）。<br>A.<br>print(“Programming is fun”)<br>    print(“Python is fun”)<br>B.<br>print(“Programming is fun”)<br>print(“Python is fun”)<br>C.<br>print(“Programming is fun)<br>print(“Python is fun”)<br>D.<br>    print(“Programming is fun”)<br>print(“Python is fun”)</p><p>参考答案：<br>B<br>下列Python程序，正确的是（    ）。<br>A.<br>print(“Programming is fun”)<br>    print(“Python”)<br>print(“Computer Science”)</p><p>B.<br>print(“Programming is fun”)<br>    print(“Python”)<br>        print(“Computer Science”)</p><p>C.<br>    print(“Programming is fun”)<br>print(“Python”)<br>print(“Computer Science”)</p><p>D.<br>print(“Programming is fun”)<br>print(“Python”)<br>print(“Computer Science”)</p><p>参考答案：<br>D<br>下列Python程序，正确的是（    ）。<br>A.<br>print(“Hello, I’m Tom.”)<br>B.<br>print(‘Hello, ‘ print ‘World!’)<br>C.<br>print(‘Hello, this’s Tom.’)<br>D.<br>Print(‘Hello, World!’)<br>参考答案：<br>A<br>编写Python程序，输出“Hello World”，要求将这两个单词分两行输出，以下错误的是（    ）。<br>A.<br>print(“Hello\nWorld”)</p><p>B.<br>print(‘Hello\nWorld’)</p><p>C.<br>print(‘Hello<br>World’)</p><p>D.<br>print(‘Hello’)<br>print(‘World’)</p><p>参考答案：<br>C<br>Python的行注释以（    ）开头。<br>A. //<br>B. /*<br>C. #<br>D. $$<br>参考答案：<br>C<br>Python的段落注释的语法格式是（    ）。<br>A. // comments //<br>B. /* comments */<br>C. “””comments “””<br>D. /# comments #/<br>参考答案：<br>C<br>下面（   ）是一个有效的标识符。<br>A. $343<br>B. 9X<br>C. import<br>D. max_radius<br>E. “red”<br>参考答案：<br>D<br>执行下列程序，输出的结果是（    ）。<br>x = 1<br>x = x + 2.5<br>print(x)<br>A. 1<br>B. 2<br>C. 3<br>D. 3.5<br>参考答案：<br>D<br>执行下列程序，输出的结果是（    ）。<br>x, y = 1, 2<br>x, y = y, x<br>print(x, y)<br>A. 1 1<br>B. 2 2<br>C. 1 2<br>D. 2 1<br>参考答案：<br>D<br>执行下列程序，输出的结果是（    ）。<br>x = 7.0<br>y = 5<br>print(x % y)<br>A. 2.0<br>B. 1.0<br>C. 2<br>D. 1<br>参考答案：<br>A<br>执行下列程序，输出的结果是（    ）。<br>x = 1<br>y = x = x + 1<br>print(y)<br>A. 0<br>B. 1<br>C. 2<br>D. 3<br>参考答案：<br>C<br>执行下列程序，输出的结果是（    ）。<br>y = x = 1<br>x += y + y * 5<br>print(x)<br>A. 1<br>B. 5<br>C. 6<br>D. 7<br>参考答案：<br>D<br>如下语句执行后，x的值是（   ）。<br>x = 1<br>x *= x + 1<br>A. 1<br>B. 2<br>C. 3<br>D. 4<br>参考答案：<br>B<br>下列（    ）语句是错误的。<br>A. x = y = z = 1<br>B. x = (y = z + 1)<br>C. x, y = y, x<br>D. x += y<br>参考答案：<br>B<br>如下语句执行后，x的值是（   ）。<br>x = 2<br>y = 1<br>x *= y + 1<br>A. 1<br>B. 2<br>C. 3<br>D. 4<br>参考答案：<br>D<br>下列（   ）是正确的。<br>（1） x -= x + 4<br>（2） x = x + 4 - x<br>（3） x = x - (x + 4)<br>A. （1）和（2)是相同的<br>B. （1）和（3）是相同的<br>C. （2）和（3）是相同的<br>D. （1）、（2）和（3）是相同的<br>参考答案：<br>B<br>下列程序的输出结果是（    ）。<br>print(“输入三个数: “)<br>number1 = eval(input())<br>number2 = eval(input())<br>number3 = eval(input())</p><h1 id="求平均值"><a href="#求平均值" class="headerlink" title="求平均值"></a>求平均值</h1><p>average = (number1+ number2 + number3) / 3</p><h1 id="显示结果"><a href="#显示结果" class="headerlink" title="显示结果"></a>显示结果</h1><p>print(average)<br>程序运行时，输入（↙表示回车）：</p><p>1↙<br>2↙<br>3↙<br>A. 1.0<br>B. 2.0<br>C. 3.0<br>D. 4.0<br>参考答案：<br>B<br>下列程序的输出结果是（    ）。<br>print(“输入三个数: “)<br>number1 = eval(input())<br>number2 = eval(input())<br>number3 = eval(input())</p><h1 id="求平均值-1"><a href="#求平均值-1" class="headerlink" title="求平均值"></a>求平均值</h1><p>average = (number1+ number2 + number3) / 3</p><h1 id="显示结果-1"><a href="#显示结果-1" class="headerlink" title="显示结果"></a>显示结果</h1><p>print(average)<br>程序运行时，输入（↙表示回车）：</p><p>1 2 3↙<br>A. 1.0<br>B. 2.0<br>C. 3.0<br>D. 4.0<br>E. 输入数据时，程序发生运行时错误<br>参考答案：<br>E<br>下列程序的输出结果是（    ）。<br>number1, number2, number3 = eval(input(“输入三个数: “))</p><h1 id="求平均值-2"><a href="#求平均值-2" class="headerlink" title="求平均值"></a>求平均值</h1><p>average = (number1 + number2 + number3) / 3</p><h1 id="显示结果-2"><a href="#显示结果-2" class="headerlink" title="显示结果"></a>显示结果</h1><p>print(average)<br>程序运行时，输入（↙表示回车）：</p><p>1, 2, 3↙<br>A. 1.0<br>B. 2.0<br>C. 3.0<br>D. 4.0<br>参考答案：<br>B<br>下列表达式的计算结果是（   ）。<br>eval(“1 + 3 * 2”)<br>A.<br>“1 + 3 * 2”</p><p>B.<br>7</p><p>C.<br>8</p><p>D.<br>“1 + 6”</p><p>参考答案：<br>B<br>45 / 4的计算结果是（   ）。<br>A. 10<br>B. 11<br>C. 11.25<br>D. 12<br>参考答案：<br>C<br>45 // 4的计算结果是（   ）。<br>A. 10<br>B. 11<br>C. 11.25<br>D. 12<br>参考答案：<br>B<br>下列表达式计算结果为1的是（    ）。<br>A. 2 % 1<br>B. 15 % 4<br>C. 25 % 5<br>D. 37 % 6<br>参考答案：<br>D<br>2 ** 3.0的计算结果是（   ）。<br>A. 9<br>B. 8<br>C. 9.0<br>D. 8.0<br>参考答案：<br>D<br>2 + 2 ** 3 / 2的计算结果是（    ）。<br>A. 4<br>B. 6<br>C. 4.0<br>D. 6.0<br>参考答案：<br>D<br>将x的值格式化为小数点后3位小数，使用（    ）。<br>A. format(x, “5.3f”)<br>B. format(“5.3f”, x)<br>C. format(x, “5.3%”)<br>D. format(“3d”, x)<br>参考答案：<br>A<br>假设x的值为345.3546，format(x, “10.3f”)结果是（    ）（注意：b表示空格）。<br>A.<br>bb345.355</p><p>B.<br>bbb345.355</p><p>C.<br>bbbb345.355</p><p>D.<br>bbb345.354</p><p>E.<br>bbbb345.354</p><p>参考答案：<br>B<br>假设number的值为4，下列语句错误的是（    ）。<br>A.<br>print(format(number, “2d”), format(number ** 1.5, “4.2d”))</p><p>B.<br>print(format(number, “2d”), format(number ** 1.5,”4.2f”))</p><p>C.<br>print(format(number, “2f”), format(number ** 1.5,”4.2f”))</p><p>D.<br>print(format(number, “2.1f”), format(number ** 1.5,”4.2f”))</p><p>参考答案：<br>A<br>下列关于Python字符串的说法，错误的是（   ）。<br>A. 字符即长度为1的字符串<br>B. 字符串以\0标志字符串的结束<br>C. 既可以用单引号，也可以用双引号创建字符串<br>D. 在三引号字符串中可以包含换行回车等特殊字符<br>参考答案：<br>B<br>print(chr(65))的运行结果是（   ）。<br>A. 65<br>B. 6<br>C. 5<br>D. A<br>参考答案：<br>D<br>假设x是一个字符变量，其值为’b’。语句print(chr(ord(x) + 1))的输出结果是（    ）。<br>A. a<br>B. b<br>C. c<br>D. d<br>参考答案：<br>C<br>使用（        ）输出可以换行的字符串。<br>A. 转义符\<br>B. 转义符\n<br>C. 空格<br>D. 转义符\r<br>参考答案：<br>B<br>下列（   ）语句的输出结果是python\exam1\test.txt。<br>A.<br>print(“python\exam1\test.txt”)</p><p>B.<br>print(“python\exam1\test.txt”)</p><p>C.<br>print(“python&quot;exam1&quot;test.txt”)</p><p>D.<br>print(“python”\exam1”\test.txt”)</p><p>参考答案：<br>B<br>表达式”Good “ + 1 + 2 + 3的计算结果是（    ）。<br>A. Good123<br>B. Good6<br>C. Good 123<br>D. 非法的表达式<br>参考答案：<br>D<br>下列程序的输出结果是（   ）。<br>print(“A”, end = ‘ ‘)<br>print(“B”, end = ‘ ‘)<br>print(“C”, end = ‘ ‘)<br>print(“D”, end = ‘ ‘)<br>A.<br>ABCD</p><p>B.<br>A, B, C, D</p><p>C.<br>A B C D</p><p>D.<br>A<br>B<br>C<br>D</p><p>参考答案：<br>C<br>下列程序的输出结果是（   ）（注意：?表示空格）。<br>print(format(“Welcome”, “10s”), end = ‘#’)<br>print(format(111,”4d”), end = ‘#’)<br>print(format(924.656, “3.2f”))<br>A.<br>???Welcome#?111#924.66</p><p>B.<br>Welcome#111#924.66</p><p>C.<br>Welcome#111#.66</p><p>D.<br>Welcome???#?111#924.66</p><p>参考答案：<br>D<br>下列程序的输出结果是（   ）（注意：?表示空格）。<br>print(format(“Welcome”,”&gt;10s”), end = ‘#’)<br>print(format(111,”&lt;4d”), end = ‘#’)<br>print(format(924.656, “&gt;10.2f”))<br>A.<br>???Welcome#?111#924.66</p><p>B.<br>???Welcome#?111#????924.66</p><p>C.<br>???Welcome#111?#????924.66</p><p>D.<br>Welcome???#111?#????924.66</p><p>参考答案：<br>C<br>type((1,))的返回值是（    ）。<br>A. &lt;class ‘tuple’&gt;<br>B. &lt;class ‘list’&gt;<br>C. &lt;class ‘dict’&gt;<br>D. &lt;class ‘int’&gt;<br>参考答案：<br>A<br>若字典d={1:”a”, 2:”b”}，则能够访问d的第一个元素的语句是（    ）。<br>A. d[‘0’]<br>B. d[1]<br>C. d[‘1’]<br>D. d[0]<br>参考答案：<br>B<br>使用下列（   ）函数读取一个字符串。<br>A.<br>input(“输入一个字符串”)</p><p>B.<br>eval(input(“输入一个字符串”))</p><p>C.<br>enter(“输入一个字符串”)</p><p>D.<br>eval(enter(“输入一个字符串”))</p><p>参考答案：<br>A<br>下列（   ）函数的返回值是4。<br>A. int(3.4)<br>B. int(3.9)<br>C. round(3.4)<br>D. round(3.9)<br>参考答案：<br>D<br>math.degrees(math.pi / 2)的返回值是（    ）。<br>A. 0.0<br>B. 90.0<br>C. 45.0<br>D. 30.0<br>参考答案：<br>B<br>math.radians(30) * 6的返回值是（    ）。<br>A. 0.0<br>B. 1.3434343<br>C. 3.141592653589793<br>D. 5.565656<br>参考答案：<br>C<br>对象5.6的类型是（    ）。<br>A. int<br>B. float<br>C. str<br>D. bool<br>参考答案：<br>B<br>假设s = “Welcome”，type(s)结果是（   ）。<br>A. &lt;class ‘int’&gt;<br>B. &lt;class ‘float’&gt;<br>C. &lt;class ‘str’&gt;<br>D. &lt;class ‘complex’&gt;<br>参考答案：<br>C<br>假设s = “Welcome”，s.upper()结果是（   ）。<br>A. welcome<br>B. WELCOME<br>C. Welcome<br>参考答案：<br>B<br>“小于或等于”比较运算符是（    ）。<br>A. &lt;<br>B. &lt;=<br>C. =&lt;<br>D. &lt;&lt;<br>E. !=<br>参考答案：<br>B<br>“等于”比较运算符是（    ）。<br>A. &lt;&gt;<br>B. !=<br>C. ==<br>D. =<br>参考答案：<br>C<br>random.randint(0, 1)的返回值是（    ）。<br>A. 0<br>B. 1<br>C. 0或1<br>D. 2<br>参考答案：<br>C<br>random.random()的返回值是（    ）。<br>A. 一个浮点数i，0 &lt; i &lt; 1.0<br>B. 一个浮点数i，0 &lt;= i &lt; 1.0<br>C. 一个浮点数i，0 &lt;= i &lt;= 1.0<br>D. 一个浮点数i，0 &lt; i &lt; 2.0<br>参考答案：<br>B<br>若半径是正数，下面（   ）代码段输出一个圆的面积。<br>A.<br>if radius != 0:<br>    print(radius *radius * 3.14159)</p><p>B.<br>if radius &gt;= 0:<br>    print(radius *radius * 3.14159)</p><p>C.<br>if radius &gt; 0:<br>    print(radius *radius * 3.14159)</p><p>D.<br>if radius &lt;= 0:<br>    print(radius *radius * 3.14159)</p><p>参考答案：<br>C<br>以下程序的输出结果是（    ）。<br>x = 0<br>if x &lt; 4:<br>    x = x + 1<br>print(x)<br>A. 0<br>B. 1<br>C. 2<br>D. 3<br>参考答案：<br>B<br>假设isPrime是一个布尔类型的变量，为了测试isPrime是否为真（True），下列（    ）语句是正确且最佳的。<br>A.<br>if isPrime = True:</p><p>B.<br>if isPrime == True:</p><p>C.<br>if isPrime:</p><p>D.<br>if not isPrime = False:</p><p>E.<br>if not isPrime == False:</p><p>参考答案：<br>C<br>对于以下程序：<br>even = False<br>if even = True:<br>    print(“It is even!”)<br>（    ）是正确的<br>。<br>A. 在行1（even = False），程序有语法错误<br>B. 在行2，程序有语法错误，if even = True:不是一个正确的条件，它应该替换成if even == True:或if even:<br>C. 程序正常运行，但不显示任何信息<br>D. 程序正常运行，显示It is even!<br>参考答案：<br>B<br>对于以下程序：<br>even = False<br>if even:<br>    print(“It is even!”)<br>（    ）是正确的。<br>A. 程序正常运行，显示It is even!<br>B. 程序正常运行，但不显示任何信息<br>C. 程序有错误，if even:应该替换成if even == True:<br>D. 程序有错误，if even:应该替换成if even = True:<br>参考答案：<br>B<br>以下程序的输出结果是（    ）。<br>number = 30<br>if number % 2 == 0:<br>    print(number, ‘is even’)<br>elif number % 3 == 0:<br>    print(number, ‘is multiple of 3’)<br>A.<br>30 is even</p><p>B.<br>程序出错</p><p>C.<br>30 is multiple of 3</p><p>D.<br>30 is even<br>30 is multiple of 3</p><p>参考答案：<br>A<br>以下程序的输出结果是（    ）。<br>temperature = 50<br>if temperature&gt;= 100:<br>    print(“too hot”)<br>elif temperature&lt;= 40:<br>    print(“too cold”)<br>else:<br>    print(“just right”)<br>A. too hot<br>B. too cold<br>C. just right<br>D. too hot too cold just right<br>参考答案：<br>C<br>以下程序的输出结果是（    ）。<br>x = 1<br>y = -1<br>z = 1<br>if x &gt; 0:<br>    if y &gt; 0:<br>        print(‘AAA’)<br>elif z &gt; 0:<br>    print(‘BBB’)<br>A. 语法错误<br>B. BBB<br>C. 无输出<br>D. AAA<br>参考答案：<br>C<br>以下程序的输出结果是（    ）。<br>x = 1<br>y = -1<br>z = 1<br>if x &gt; 0:<br>    if y &gt; 0:<br>        print(“x &gt; 0 and y &gt;0”)<br>elif z &gt; 0:<br>    print(“x &lt; 0 and z &gt; 0”)<br>A. x &gt; 0 and y &gt; 0<br>B. x &lt; 0 and z &gt; 0<br>C. x &lt; 0 and z &lt;0<br>D. 无输出<br>参考答案：<br>D<br>对于以下代码段：<br>Code1:<br>if number % 2 == 0:<br>    even = True<br>else:<br>    even = False<br>Code2:<br>even = number % 2 == 0<br>（    ）是正确的。<br>A. Code1有错误<br>B. Code2有错误<br>C. Code1和Code2都有错误<br>D. Code1和Code2都是正确的，但Code2更好<br>参考答案：<br>D<br>假设income的值为4001，以下代码段的输出结果是（   ）。<br>if income &gt; 3000:<br>    print(“Income is greater than 3000”)<br>elif income &gt; 4000:<br>    print(“Income is greater than 4000”)<br>A. 无输出<br>B. 输出Income is greater than 3000<br>C. 先输出Income is greater than 3000，接着输出Income is greater than 4000<br>D. 输出Income is greater than 4000<br>E. 先输出Income is greater than 4000，接着输出Income is greater than 3000<br>参考答案：<br>B<br>若年龄（age）小于16岁，显示”Cannot get a driver’s license”；若年龄（age）大于或等于16岁，显示”Can get a driver’s license”，以下代码段正确的是（   ）。<br>（1）<br>if age &lt; 16:<br>    print(“Cannot get a driver’s license”)<br>if age &gt;= 16:<br>    print(“Can get a driver’s license”)<br>（2）<br>if age &lt; 16:<br>    print(“Cannot get a driver’s license”)<br>else:<br>    print(“Can get a driver’s license”)<br>（3）<br>if age &lt; 16:<br>    print(“Cannot get a driver’s license”)<br>elif age &gt;= 16:<br>    print(“Can get a driver’s license”)<br>（4）<br>if age &lt; 16:<br>    print(“Cannot get a driver’s license”)<br>elif age == 16:<br>    print(“Can get a driver’s license”)<br>elif age &gt; 16:<br>    print(“Can get a driver’s license”)<br>A. （1）和（2）<br>B. （2）和（3）<br>C. （1）、（2）和（3）<br>D. （3）和（4）<br>E. 以上都是<br>参考答案：<br>E<br>若年龄（age）小于16岁，显示”Cannot get a driver’s license”；若年龄（age）大于或等于16岁，显示”Can get a driver’s license”，以下代码段最佳的是（    ）。<br>（1）<br>if age &lt; 16:<br>    print(“Cannot get a driver’s license”)<br>if age &gt;= 16:<br>    print(“Can get a driver’s license”)<br>（2）<br>if age &lt; 16:<br>    print(“Cannot get a driver’s license”)<br>else:<br>    print(“Can get a driver’s license”)<br>（3）<br>if age &lt; 16:<br>    print(“Cannot get a driver’s license”)<br>elif age &gt;= 16:<br>    print(“Can get a driver’s license”)<br>（4）<br>if age &lt; 16:<br>    print(“Cannot get a driver’s license”)<br>elif age == 16:<br>    print(“Can get a driver’s license”)<br>elif age &gt; 16:<br>    print(“Can get a driver’s license”)<br>A. （1）<br>B. （2）<br>C. （3）<br>D. （4）<br>参考答案：<br>B<br>下列（         ）不可能出现在and操作的真值表中。<br>A. True and False，结果为True<br>B. False and False，结果为False<br>C. True and True，结果为True<br>D. False and True，结果为False<br>参考答案：<br>A<br>下列（         ）不可能出现在or操作的真值表中。<br>A. False or True，结果为True<br>B. True or True，结果为True<br>C. False or False，结果为True<br>D. True or False，结果为True<br>参考答案：<br>C<br>给定|x-2|≤4，以下表达式正确的是（    ）。<br>A. x - 2 &lt;= 4 and x - 2 &gt;= 4<br>B. x - 2 &lt;= 4 and x - 2 &gt; -4<br>C. x - 2 &lt;= 4 and x - 2 &gt;= -4<br>D. x - 2 &lt;=4 or x - 2 &gt;= -4<br>参考答案：<br>C<br>给定|x-2|≥4，以下表达式正确的是（   ）。<br>A. x - 2 &gt;= 4 and x - 2 &lt;= -4<br>B. x - 2 &gt;= 4 or x - 2 &lt;= -4<br>C. x - 2 &gt;= 4 and x - 2 &lt; -4<br>D. x - 2 &gt;=4 or x - 2 &lt; -4<br>参考答案：<br>B<br>假设x的值为4、y的值为5，以下表达式的值为真（True）的是（    ）。<br>A. x &lt; 5 and y &lt; 5<br>B. x &lt; 5 or y &lt; 5<br>C. x &gt; 5 and y &gt; 5<br>D. x &gt; 5 or y &gt; 5<br>参考答案：<br>B<br>设x的值为4、y的值为5，以下表达式的值为真（True）的是（    ）。<br>A. not (x == 4)<br>B. x != 4<br>C. x == 5<br>D. x != 5<br>参考答案：<br>D<br>以下程序的输出结果是（    ）。<br>ch = ‘F’<br>if ch &gt;= ‘A’ and ch &lt;= ‘Z’:<br>   print(ch)<br>A. F<br>B. f<br>C. 无输出<br>D. F f<br>参考答案：<br>A<br>能实现下面功能的语句是（   ）。<br>接收用户输入的一个整数。如果输入的是偶数，则输出”True”，否则输出”False”。<br>A.<br>print(not bool(input() % 2))</p><p>B.<br>print(int(input()) % 2 != 0)</p><p>C.<br>print(int(input()) % 2 == 1)</p><p>D.<br>print(not bool(int(input()) % 2))</p><p>参考答案：<br>D<br>执行以下代码段后，y的值是（   ）。<br>x = 0<br>y = 10 if x &gt; 0 else -10<br>A. -10<br>B. 0<br>C. 10<br>D. 20<br>E. 非法的表达式<br>参考答案：<br>A<br>对于以下代码段：<br>Code1:<br>if number % 2 == 0:<br>   even = True<br>else:<br>   even = False<br>Code2:<br>even = True if number % 2 == 0 else False<br>Code3:<br>even = number % 2 == 0<br>（    ）是正确的。<br>A. Code2有错误<br>B. Code3有错误<br>C. Code1、Code2和code3都是正确的，但Code1更好<br>D. Code1、Code2和code3都是正确的，但Code2更好<br>E. Code1、Code2和code3都是正确的，但Code3更好<br>参考答案：<br>E<br>以下程序的输出结果是（    ）。<br>isCorrect = False<br>print(“Correct” if isCorrect else “Incorrect”)<br>A. Correct<br>B. Incorrect<br>C. 无输出<br>D. Correct Incorrect<br>参考答案：<br>B<br>运算符+、<em>、and、or的优先级（从高到低）是（   ）。<br>A. and、or、</em>、+<br>B. *、+、or、and<br>C. <em>、+、and、or<br>D. or、and、</em>、+<br>参考答案：<br>C<br>以下运算符右结合的是（   ）。<br>A. *<br>B. **<br>C. %<br>D. and<br>E. =<br>参考答案：<br>E<br>以下程序输出”Welcome to Python”（        ）次。</p><p>count = 0<br>while count &lt;10:<br>    print(“Welcome to Python”)<br>    count += 1<br>A. 8<br>B. 9<br>C. 10<br>D. 11<br>E. 0<br>参考答案：<br>C<br>以下程序的输出结果是（         ）。</p><p>x = 0<br>while x &lt; 4:<br>   x = x + 1<br>print(x)<br>A. 0<br>B. 1<br>C. 2<br>D. 3<br>E. 4<br>参考答案：<br>E<br>以下程序输出”Welcome to Python”（        ）次。</p><p>count = 0<br>while count &lt;10:<br>   print(“Welcome to Python”)<br>A. 8<br>B. 9<br>C. 10<br>D. 11<br>E. 无数次<br>参考答案：<br>E<br>以下程序的输出结果是（         ）。</p><p>number = 6<br>while number &gt; 0:<br>    number -= 3<br>    print(number, end = ‘ ‘)<br>A. 6 3 0<br>B. 6 3<br>C. 3 0<br>D. 3 0 -3<br>E. 0 -3<br>参考答案：<br>C<br>list(range(5))返回序列（         ）。<br>A. [1, 2, 3, 4, 5]<br>B. [0, 1, 2, 3, 4, 5]<br>C. [1, 2, 3, 4]<br>D. [0, 1, 2, 3, 4]<br>参考答案：<br>D<br>以下（         ）程序输出”Welcome to Python”10次。</p><p>（1）<br>for count in range(1, 10):<br>    print(“Welcome to Python”)<br>（2）<br>for count in range(0, 10):<br>    print(“Welcome to Python”)<br>（3）<br>for count in range(1, 11):<br>    print(“Welcome to Python”)<br>（4）</p><p>for count in range(1, 12):<br>    print(“Welcome to Python”)<br>A. （2）、（4）<br>B. （1）、（2）、（3）<br>C. （1）、（3)<br>D. （2）、（3）<br>E. （1）、（2）<br>参考答案：<br>D<br>以下（         ）程序正确计算了”1/2 + 2/3 + 3/4 + … + 99/100”的值。<br>（1）</p><p>total = 0<br>for i in range(1, 99):<br>    total += i / (i + 1)<br>print(“Total is”, total)<br>（2）<br>total = 0<br>for i in range(1, 100):<br>    total += i / (i + 1)<br>print(“Total is”, total)<br>（3）<br>total = 0<br>for i in range(1.0, 99.0):<br>    total += i / (i + 1)<br>print(“Total is”, total)<br>（4）<br>total = 0<br>for i in range(1.0, 100.0):<br>    total += i / (i + 1)<br>print(“Total is”, total)<br>A. （2）、（3）、（4）<br>B. （1）、（2）、（3）、（4）<br>C. （2）<br>D. （3)、（4）<br>参考答案：<br>C<br>以下程序的输出结果是（         ）。</p><p>for i in range(1, 11):<br>    print(i, end = “ “)<br>A. 1 2 3 4 5 6 7 8 9<br>B. 1 2 3 4 5 6 7 8 9 10<br>C. 1 2 3 4 5<br>D. 1 3 5 7 9<br>E. 2 4 6 8 10<br>参考答案：<br>B<br>以下程序的输出结果是（         ）。</p><p>y = 0<br>for i in range(0, 10):<br>    y += i<br>print(y)<br>A. 10<br>B. 11<br>C. 12<br>D. 13<br>E. 45<br>参考答案：<br>E<br>以下程序的输出结果是（         ）。</p><p>y = 0<br>for i in range(0, 10, 2):<br>    y += i<br>print(y)<br>A. 9<br>B. 10<br>C. 11<br>D. 20<br>参考答案：<br>D<br>以下程序的输出结果是（         ）。</p><p>y = 0<br>for i in range(10, 1, -2):<br>    y += i<br>print(y)<br>A. 10<br>B. 40<br>C. 30<br>D. 20<br>参考答案：<br>C<br>对于以下程序：</p><p>total = 0<br>for d in range(0,10, 0.1):<br>    total += total + d<br>（    ）是正确的。</p><p>A. 程序有语法错误，因为range函数不能有三个参数<br>B. 程序有语法错误，因为range函数的参数必须是整数<br>C. 程序无限循环运行<br>D. 程序运行正常<br>参考答案：<br>B<br>给定以下四种图案：</p><p>图案（1）         图案（2）          图案（3）         图案（4）<br>1                1 2 3 4 5 6                1      1 2 3 4 5 6<br>1 2              1 2 3 4 5                2 1        1 2 3 4 5<br>1 2 3            1 2 3 4                3 2 1          1 2 3 4<br>1 2 3 4          1 2 3                4 3 2 1            1 2 3<br>1 2 3 4 5        1 2                5 4 3 2 1              1 2<br>1 2 3 4 5 6      1                6 5 4 3 2 1                1</p><p>（    ）是由如下程序生成的。</p><p>for i in range(1, 6 + 1):<br>    for j in range(6, 0, -1):<br>        print(j if j &lt;= i else “ “, end = “ “)<br>    print()<br>A. 图案（1）<br>B. 图案（2）<br>C. 图案（3）<br>D. 图案（4）<br>参考答案：<br>C<br>以下程序，print语句执行了（         ）次。</p><p>for i in range(10):<br>    for j in range(10):<br>        print(i * j)<br>A. 100<br>B. 20<br>C. 10<br>D. 45<br>参考答案：<br>A<br>以下程序，print语句执行了（         ）次。</p><p>for i in range(10):<br>    for j in range(i):<br>        print(i * j)<br>A. 100<br>B. 20<br>C. 10<br>D. 45<br>参考答案：<br>D<br>以下程序的输出结果是（         ）。</p><p>total = 0<br>item = 0<br>while item &lt; 5:<br>    item += 1<br>    total += item<br>    if total &gt; 4:<br>        break<br>print(total)<br>A. 5<br>B. 6<br>C. 7<br>D. 8<br>参考答案：<br>B<br>以下程序的输出结果是（         ）。</p><p>total = 0<br>item = 0<br>while item &lt; 5:<br>    item += 1<br>    total += item<br>    if total &gt; 4:<br>        continue<br>print(total)<br>A. 15<br>B. 16<br>C. 17<br>D. 18<br>参考答案：<br>A<br>以下程序的输出结果是（         ）。</p><p>number = 25<br>isPrime = True<br>i = 2<br>while i &lt; number and isPrime:<br>    if number % i == 0:<br>        isPrime = False<br>    i += 1<br>print(“i is”, i, “isPrime is”, isPrime)<br>A. i is 5 isPrime is True<br>B. i is 5 isPrime is False<br>C. i is 6 isPrime is True<br>D. i is 6 isPrime is False<br>参考答案：<br>D<br>以下程序的输出结果是（         ）。<br>number = 25<br>isPrime = True<br>for i in range(2,number):<br>    if number % i == 0:<br>        isPrime = False<br>        break<br>print(“i is”, i, “isPrime is”, isPrime)<br>A. i is 5 isPrime is True<br>B. i is 5 isPrime is False<br>C. i is 6 isPrime is True<br>D. i is 6 isPrime is False<br>参考答案：<br>B<br>对于以下程序：<br>total = d = 0<br>while d != 10.0:<br>    d += 0.1<br>    total += total + d<br>（         ）是正确的。<br>A. 程序不能运行，因为total和d没有正确初始化<br>B. 程序永远不会停止，因为循环中d的值始终是0.1<br>C. 程序可能不会停止，原因是浮点数运算误差引起的数值错误<br>D. 循环结束后，total的值是0 + 0.1 + 0.2 + 0.3 + … + 1.9之和<br>参考答案：<br>C<br>有关函数的说法，（         ）是错误的。<br>A. 函数是对一段代码的命名<br>B. 函数是代码功能的一种抽象<br>C. 函数是计算机对代码执行优化的要求<br>D. 函数是代码逻辑的封装<br>参考答案：<br>C<br>函数头由（        ）组成。<br>A. def关键字、函数名和冒号<br>B. def关键字、函数名、参数表和冒号<br>C. 函数名和参数表<br>D. 函数名、参数表和冒号<br>参考答案：<br>B<br>一个函数（        ）。<br>A. 必须至少有一个参数<br>B. 可以没有参数<br>C. 必须有一个return语句返回一个值<br>D. 必须有一个return语句返回多个值<br>参考答案：<br>B<br>函数的参数总是出现在（        ）中。<br>A. 方括号<br>B. 双引号<br>C. 圆括号<br>D. 花括号<br>参考答案：<br>C<br>下面（        ）应该被定义为一个无返回值函数。<br>A. 编写一个函数，打印从1到100的整数<br>B. 编写一个函数，返回一个1到100之间的随机整数<br>C. 编写一个函数，检查当前秒数是否是一个1到100之间的整数<br>D. 编写一个函数，将一个大写字母转换为小写字母<br>参考答案：<br>A<br>若一个函数没有返回值，默认情况下，该函数返回（         ）。<br>A. None<br>B. int<br>C. double<br>D. public<br>E. Null<br>参考答案：<br>A<br>对于下面不完整的程序：<br>def f(number):<br>    # 缺失的函数体<br>print(f(5))<br>缺失的函数体应该是（        <br>）。<br>A. return “number”<br>B. print(number)<br>C. print(“number”)<br>D. return number<br>参考答案：<br>D<br>对于下列函数，错误的函数调用是（         ）。<br>def foo(arg1, arg2 = ‘test’, arg3 = 100):<br>    print(arg1, arg2, arg3)<br>A. foo(‘where’, ‘what’)<br>B. foo(arg1 = ‘where’, arg2 = ‘what’)<br>C. foo(arg = ‘where’)<br>D. foo(‘where’)<br>参考答案：<br>C<br>对于下列函数：<br>def n_print(message, n):<br>    while n &gt; 0:<br>        print(message, end = ‘’)<br>        n -= 1<br>调用n_print(‘a’, 4)，输出结果是（         ）。<br>A. aaaaa<br>B. aaaa<br>C. aaa<br>D. 无效的函数调用<br>E. 无限循环<br>参考答案：<br>B<br>对于下列函数：<br>def n_print(message, n):<br>    while n &gt; 0:<br>        print(message, end = ‘’)<br>        n -= 1<br>调用n_print(“A message”, k)后，k的值是（         ）。</p><p>k = 2<br>n_print(“A message”, k)<br>A. 0<br>B. 1<br>C. 2<br>D. 3<br>参考答案：<br>C<br>对于下列函数：<br>def n_print(message, n):<br>    while n &gt; 0:<br>        print(message, end = ‘’)<br>        n -= 1<br>调用n_print(n = k, message = “A message”)后，k的值是（        ）。</p><p>k = 2<br>n_print(n = k, message = “A message”)<br>A. 0<br>B. 1<br>C. 2<br>D. 3<br>参考答案：<br>C<br>下列程序的输出结果是（         ）。<br>x = 1<br>def foo():<br>    y = x + 2<br>    print(y, end = ‘ ‘)</p><p>foo()<br>print(x)<br>A. 1 3<br>B. 3 1<br>C. 程序有运行时错误，因为x未定义<br>D. 1 1<br>E. 3 3<br>参考答案：<br>B<br>下列程序的输出结果是（         ）。<br>x = 1<br>def foo():<br>    x = 3<br>    print(x)</p><p>foo()<br>print(x)<br>A. 1 3<br>B. 3 1<br>C. 程序有运行时错误，因为x未定义<br>D. 1 1<br>E. 3 3<br>参考答案：<br>B<br>下列程序的输出结果是（         ）。<br>x = 1<br>def foo():<br>    x = x + 2<br>    print(x)</p><p>foo()<br>print(x)<br>A. 1 3<br>B. 3 1<br>C. 程序有运行时错误，因为x未定义<br>D. 1 1<br>E. 3 3<br>参考答案：<br>C<br>下列程序的输出结果是（         ）。<br>x = 1<br>def foo():<br>    global x<br>    x = x + 2<br>    print(x)</p><p>foo()<br>print(x)<br>A. 1 3<br>B. 3 1<br>C. 程序有运行时错误，因为x未定义<br>D. 1 1<br>E. 3 3<br>参考答案：<br>E<br>下列程序的输出结果是（         ）。<br>def foo(x = 1, y =2):<br>    x = x + y<br>    y += 1<br>    print(x, y)</p><p>foo()<br>A. 1 3<br>B. 3 1<br>C. 程序有运行时错误，因为x和y未定义<br>D. 1 1<br>E. 3 3<br>参考答案：<br>E<br>下列程序的输出结果是（         ）。<br>def foo(x = 1, y =2):<br>    x = x + y<br>    y += 1<br>    print(x, y)</p><p>foo(2, 1)<br>A. 1 3<br>B. 2 3<br>C. 程序有运行时错误，因为x和y未定义<br>D. 3 2<br>E. 3 3<br>参考答案：<br>D<br>下列程序的输出结果是（         ）。<br>def foo(x = 1, y = 2):<br>    x = x + y<br>    y += 1<br>    print(x, y)</p><p>foo(y = 2, x = 1)<br>A. 1 3<br>B. 2 3<br>C. 程序有运行时错误，因为x和y未定义<br>D. 3 2<br>E. 3 3<br>参考答案：<br>E<br>下列函数头，正确的是（        ）。<br>A. def f(a = 1, b):<br>B. def f(a = 1, b, c = 2):<br>C. def f(a = 1, b =1, c = 2):<br>D. def f(a = 1, b =1, c = 2, d):<br>参考答案：<br>C<br>下列函数头，正确的是（        ）。<br>A. def f(a, b == 0): <br>B. def f(a, b, *):<br>C. def f(a=0, b):<br>D. def f(a, *b):<br>参考答案：<br>D<br>下列程序的输出结果是（         ）。<br>def foo(x = 1, y =2):<br>    return x + y, x - y</p><p>x, y = foo(y = 2, x= 1)<br>print(x, y)<br>A. 1 3<br>B. 3 1<br>C. 程序有运行时错误，因为函数返回多个值<br>D. 3 -1<br>E. -1 3<br>参考答案：<br>D<br>print(type(lambda:3))的输出结果是（    ）。<br>A. &lt;class ‘function’&gt;<br>B. &lt;class ‘int’&gt;<br>C. &lt;class ‘NoneType’&gt;<br>D. &lt;class ‘float’&gt;<br>参考答案：<br>A<br>在Python中，对于函数定义代码的理解，正确的是（    ）。</p><p>A. 必须存在形参<br>B. 必须存在return语句<br>C. 形参和return语句都是可有可无的<br>D. 形参和return语句要么都存在，要么都不存在<br>参考答案：<br>C<br>在一个函数中如局部变量和全局变量同名，则（    ）。</p><p>A. 局部变量屏蔽全局变量<br>B. 全局变量屏蔽局部变量<br>C. 全局变量和局部变量都不可用<br>D. 程序错误<br>参考答案：<br>A<br>函数可以改变（    ）数据类型的实参。<br>A. int<br>B. string<br>C. list<br>D. float<br>参考答案：<br>C<br>显示海龟，使用（         ）。<br>A. turtle.show()<br>B. turtle.showLocation()<br>C. turtle.showDirection()<br>D. turtle.showturtle()<br>E. turtle.showTurtle()<br>参考答案：<br>D<br>隐藏海龟，使用（         ）。<br>A. turtle.home()<br>B. turtle.hideturtle()<br>C. turtle.hideTurtle()<br>D. turtle.clear()<br>E. turtle.reset()<br>参考答案：<br>B<br>设置海龟移动速度为5，使用（        ）。<br>A. turtle.speed(5)<br>B. turtle.setSpeed(5)<br>C. turtle.setspeed(5)<br>D. turtle.velocity(5)<br>参考答案：<br>A<br>将海龟移动到坐标点(4、5)，不改变海龟的方向，使用（        ）。<br>A. turtle.move(4, 5)<br>B. turtle.moveTo(4, 5)<br>C. turtle.moveto(4, 5)<br>D. turtle.go(4, 5)<br>E. turtle.goto(4, 5)<br>参考答案：<br>E<br>放下画笔，移动海龟时绘制图形，使用（         ）。<br>A. turtle.penDown()<br>B. turtle.pendown()<br>C. turtle.putDown()<br>D. turtle.Down()<br>参考答案：<br>B<br>可重复撤消最后一次海龟操作，使用（         ）。<br>A. turtle.rollback()<br>B. turtle.redo()<br>C. turtle.undo()<br>D. turtle.remove()<br>参考答案：<br>C<br>下列（         ）不能改变海龟画笔的移动方向。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬<br>A. bk()<br>B. seth()<br>C. left()<br>D. right()<br>参考答案：<br>A<br>下面程序的执行结果是（         ）。</p><p>import turtle<br>t = turtle.Turtle()<br>t.circle(100, steps=6)<br>turtle.mainloop()<br>A. 圆<br>B. 椭圆<br>C. 弧形<br>D. 正六边形<br>参考答案：<br>D<br>下面程序的执行结果是（         ）。</p><p>import turtle<br>t = turtle.Turtle()<br>t.circle(40)<br>t.circle(60)<br>t.circle(80)<br>t.circle(100)<br>turtle.mainloop()<br>A. 同心圆<br>B. 太极图<br>C. 同切圆<br>D. 笛卡尔心形<br>参考答案：<br>C<br>下面程序的执行结果是（         ）。</p><p>import turtle<br>t = turtle.Turtle()<br>for i in range(3):<br>    t.seth(i * 120)<br>    t.fd(200)<br>turtle.mainloop()<br>A. 直角三角形<br>B. 等边三角形<br>C. 等腰三角形<br>D. 锐角三角形<br>参考答案：<br>B<br>len(“Good”)的计算结果是（         ）。<br>A. 1<br>B. 2<br>C. 3<br>D. 4<br>E. -1<br>参考答案：<br>D<br>字符串”abc”的长度是3，字符串”老师好”的长度是（         ）。<br>A. 1<br>B. 3<br>C. 6<br>D. 9<br>参考答案：<br>B<br>max(“Programming is fun”)的计算结果是（         ）。<br>A. P<br>B. r<br>C. 空格字符<br>D. u<br>E. n<br>参考答案：<br>D<br>min(“Programmingis fun”)的计算结果是（        ）。<br>A. P<br>B. r<br>C. 空格字符<br>D. u<br>E. n<br>参考答案：<br>C<br>字符串s长度为奇数，则显示中间字符的表达式为（         ）。<br>A. s[len(s) // 2 + 1]<br>B. s[(len(s) - 1) // 2]<br>C. s[len(s) // 2 - 1]<br>D. s[(len(s) + 1) // 2]<br>参考答案：<br>B<br>“Programming is fun”[4:6]的计算结果是（         ）。<br>A. ram<br>B. ra<br>C. r<br>D. pr<br>E. pro<br>参考答案：<br>B<br>“Programming is fun”[-1]的计算结果是（        ）。<br>A. Pr<br>B. p<br>C. fun<br>D. n<br>E. un<br>参考答案：<br>D<br>“Programming is fun”[1:1]的计算结果是（        ）。<br>A. Pr<br>B. r<br>C. Pr<br>D. ‘’<br>E. 非法的表达式<br>参考答案：<br>D<br>“Programming is fun”[-3:-1]的计算结果是（        ）。<br>A. Pr<br>B. p<br>C. fun<br>D. un<br>E. fu<br>参考答案：<br>E<br>“Programming is fun”[:-1]的计算结果是（        ）。<br>A. Programming<br>B. Programming is fun<br>C. Programming is f<br>D. Programming is fu<br>E. Programming is<br>参考答案：<br>D<br>“Programming is fun”[:2]的计算结果是（        ）。<br>A. Pr<br>B. p<br>C. Pro<br>D. Programming<br>E. Programming is<br>参考答案：<br>A<br>假设s = “\t\tWelcome\n”，s.strip()结果是（   ）。<br>A. welcome<br>B. \t\tWelocme\n<br>C. \t\tWELCOME\n<br>D. Welcome<br>参考答案：<br>D<br>对于如下字符串：<br>s =”Welcome”</p><p>下列（         ）是错误的。<br>A. print(s[0])<br>B. print(s.lower())<br>C. s[1] = ‘r’<br>D. print(s.strip())<br>参考答案：<br>C<br>对于如下字符串：<br>s =”Welcome”</p><p>s.count(‘e’)的计算结果是（        ）。<br>A. 1<br>B. 2<br>C. 3<br>D. 4<br>参考答案：<br>B<br>对于如下字符串：<br>s= “Programming is fun”</p><p>s.find(‘ram’)的计算结果是（        ）。<br>A. 1<br>B. 2<br>C. 3<br>D. 4<br>E. -1<br>参考答案：<br>D<br>对于如下字符串：<br>s= “Programming is fun”</p><p>s.find(‘rom’)的计算结果是（        ）。<br>A. 1<br>B. 2<br>C. 3<br>D. 4<br>E. -1<br>参考答案：<br>E<br>对于如下字符串：<br>s= “Programming is fun”</p><p>s.rfind(‘m’)的计算结果是（        ）。<br>A. 8<br>B. 7<br>C. 6<br>D. 5<br>E. -1<br>参考答案：<br>B<br>对于如下字符串：<br>s= “Programming is fun”</p><p>s.find(‘m’)的计算结果是（        ）。<br>A. 8<br>B. 7<br>C. 6<br>D. 5<br>E. -1<br>参考答案：<br>C<br>“Good”.replace(‘o’, ‘e’)的计算结果是（         ）。<br>A. God<br>B. Good<br>C. Geed<br>D. Ged<br>参考答案：<br>C<br>字符串的strip方法的作用是（         ）。<br>A. 按照指定字符分割字符串为列表<br>B. 连接两个字符串序列<br>C. 去掉字符串两侧空格或指定字符<br>D. 替换字符串中特定字符<br>参考答案：<br>C<br>下列（        ）是列表（list)。<br>A. [1, 2, 3]<br>B. (1, 2, 3)<br>C. {1, 2, 3}<br>D. {}<br>参考答案：<br>A<br>下列（        ）语句创建一个列表。<br>A. list1 = list()<br>B. list1 = []<br>C. list1 = list([12, 4, 4])<br>D. list1 = [12, 4, 4]<br>E. list1 = [1,”3”, “red”]<br>F. 以上都是<br>参考答案：<br>F<br>list(“abcd”)的计算结果是（         ）。<br>A. [‘a’, ‘b’, ‘c’, ‘d’]<br>B. [‘ab’]<br>C. [‘cd’]<br>D. [‘abcd’]<br>参考答案：<br>A<br>假设list1 = [3, 4, 5, 20, 5, 25, 1, 3]，len(list1)的计算结果是（        ）。<br>A. 6<br>B. 7<br>C. 8<br>D. 5<br>E. 4<br>参考答案：<br>C<br>假设list1 = [3, 4, 5, 20, 5, 25, 1, 3]，max(list1)的计算结果是（ ）。<br>A. 5<br>B. 4<br>C. 8<br>D. 25<br>E. 1<br>参考答案：<br>D<br>假设list1 = [3, 4, 5, 20, 5, 25, 1, 3]，min(list1)的计算结果是（        ）。<br>A. 5<br>B. 4<br>C. 8<br>D. 25<br>E. 1<br>参考答案：<br>E<br>假设list1 = [1, 3, 2]，sum(list1)的计算结果是（         ）。<br>A. 5<br>B. 4<br>C. 6<br>D. 2<br>E. 1<br>参考答案：<br>C<br>将list1的所有元素随机排列，使用（         ）。<br>A. list1.shuffle()<br>B. shuffleList(list1)<br>C. random.shuffle(list1)<br>D. random.shuffleList(list1)<br>参考答案：<br>C<br>假设list1 = [1, 3, 2, 4, 5, 2, 1, 0]，list1[-1]的计算结果是（        ）。<br>A. 3<br>B. 5<br>C. 1<br>D. 0<br>参考答案：<br>D<br>假设list1 = [1, 3, 2, 4, 5, 2, 1, 0]，list1[:-1]的计算结果是（        ）。<br>A. 0<br>B. [1, 3, 2, 4, 5, 2, 1]<br>C. [1, 3, 2, 4, 5, 2]<br>D. [1, 3, 2, 4, 5, 2, 1, 0]<br>参考答案：<br>B<br>假设list1 = [1, 3, 2]，list1 * 2的计算结果是（         ）。<br>A. [2, 6, 4]<br>B. [1, 3, 2, 1, 3]<br>C. [1, 3, 2, 1, 3, 2]<br>D. [1, 3, 2, 3, 2,1]<br>参考答案：<br>C<br>假设list1 = [0.5 * x for x in range(0, 4)]，list1的计算结果是（        ）。<br>A. [0, 1, 2, 3]<br>B. [0, 1, 2, 3, 4]<br>C. [0.0, 0.5, 1.0,1.5]<br>D. [0.0, 0.5, 1.0,1.5, 2.0]<br>参考答案：<br>C<br>假设list1 = [11, 2, 23]、list2 = [11, 2, 2]，list1 &lt; list2的计算结果是（        ）。<br>A. True<br>B. False<br>C. 非法的表达式<br>参考答案：<br>B<br>假设list1 = [11, 2, 23]、list2 = [2, 11, 23]，list1 == list2的计算结果是（         ）。<br>A. True<br>B. False<br>C. 非法的表达式<br>参考答案：<br>B<br>将5添加到list1列表的尾部，使用（         ）。<br>A. list1.add(5)<br>B. list1.append(5)<br>C. list1.addLast(5)<br>D. list1.addEnd(5)<br>参考答案：<br>B<br>将5插入到list1列表的第三个位置，使用（        ）。<br>A. list1.insert(3, 5)<br>B. list1.insert(2, 5)<br>C. list1.add(3, 5)<br>D. list1.append(3, 5)<br>参考答案：<br>B<br>从list1列表中删除字符串“red”，使用（        ）。<br>A. list1.remove(“red”)<br>B. list1.remove(red)<br>C. list1.removeAll(“red”)<br>D. list1.removeOne(“red”)<br>参考答案：<br>A<br>假设list1 = [3, 4, 5, 20, 5, 25, 1, 3]，list1.index(5)的计算结果是（        ）。<br>A. 0<br>B. 4<br>C. 1<br>D. 2<br>参考答案：<br>D<br>假设list1 = [3, 4, 5, 20, 5, 25, 1, 3]，list1.count(5)的计算结果是（        ）。<br>A. 0<br>B. 4<br>C. 1<br>D. 2<br>参考答案：<br>D<br>假设list1 = [3, 4, 5, 20, 5, 25, 1, 3]，list1.sort()后，list1为（         ）。<br>A. [3, 4, 5, 20, 5, 25, 1, 3]<br>B. [1, 3, 3, 4, 5, 5, 20, 25]<br>C. [25, 20, 5, 5, 4, 3, 3, 1]<br>D. [1, 3, 4, 5, 20, 5, 25, 3]<br>参考答案：<br>B<br>假设list1 = [3, 4, 5, 20, 5, 25, 1, 3]，list1.reverse()后，list1为（         ）。<br>A. [3, 4, 5, 20, 5, 25, 1, 3]<br>B. [1, 3, 3, 4, 5, 5, 20, 25]<br>C. [25, 20, 5, 5, 4, 3, 3, 1]<br>D. [1, 3, 4, 5, 20, 5, 25, 3]<br>E. [3, 1, 25, 5, 20, 5, 4, 3]<br>参考答案：<br>E<br>假设list1 = [3, 4, 5, 20, 5, 25, 1, 3]，list1.extend([34, 5])后，list1为（         ）。<br>A. [3, 4, 5, 20, 5, 25, 1, 3, 34, 5]<br>B. [1, 3, 3, 4, 5, 5, 20, 25, 34, 5]<br>C. [25, 20, 5, 5, 4,3, 3, 1, 34, 5]<br>D. [1, 3, 4, 5, 20, 5, 25, 3, 34, 5]<br>E. [3, 1, 25, 5, 20, 5, 4, 3, 34, 5]<br>参考答案：<br>A<br>假设list1 = [3, 4, 5, 20, 5, 25, 1, 3]，list1.pop(1)后，list1为（         ）。<br>A. [3, 4, 5, 20, 5, 25, 1, 3]<br>B. [1, 3, 3, 4, 5, 5, 20, 25]<br>C. [3, 5, 20, 5, 25, 1, 3]<br>D. [1, 3, 4, 5, 20, 5, 25]<br>E. [3, 1, 25, 5, 20, 5, 4]<br>参考答案：<br>C<br>假设list1 = [3, 4, 5, 20, 5, 25, 1, 3]，list1.pop()后，list1为（         ）。<br>A. [3, 4, 5, 20, 5, 25, 1]<br>B. [1, 3, 3, 4, 5, 5, 20, 25]<br>C. [3, 5, 20, 5, 25, 1, 3]<br>D. [1, 3, 4, 5, 20, 5, 25]<br>E. [3, 1, 25, 5, 20, 5, 4]<br>参考答案：<br>A<br>“Welcome to Python”.split()的计算结果是（         ）。<br>A. [“Welcome”, “to”, “Python”]<br>B. (“Welcome”,”to”, “Python”)<br>C. {“Welcome”,”to”, “Python”}<br>D. “Welcome”,”to”, “Python”<br>参考答案：<br>A<br>list(“a#b#c#d”.split(‘#’))的计算结果是（         ）。<br>A. [‘a’, ‘b’, ‘c’, ‘d’]<br>B. [‘a b c d’]<br>C. [‘a#b#c#d’]<br>D. [‘abcd’]<br>参考答案：<br>A<br>下列程序的输出结果为（         ）。</p><p>myList = [1, 5, 5, 5, 5, 1]<br>max = myList[0]<br>indexOfMax = 0<br>for i in range(1,len(myList)):<br>    if myList[i] &gt; max:<br>        max = myList[i]<br>        indexOfMax = i</p><p>print(indexOfMax)<br>A. 0<br>B. 1<br>C. 2<br>D. 3<br>E. 4<br>参考答案：<br>B<br>下列程序的输出结果为（         ）。</p><p>myList = [1, 2, 3, 4, 5, 6]<br>for i in range(1, 6):<br>    myList[i - 1] = myList[i]</p><p>for i in range(0, 6):<br>    print(myList[i], end = “ “)<br>A. 2 3 4 5 6 1<br>B. 6 1 2 3 4 5<br>C. 2 3 4 5 6 6<br>D. 1 1 2 3 4 5<br>E. 2 3 4 5 6 1<br>参考答案：<br>C<br>下列程序的输出结果为（         ）。</p><p>list1 = [1, 3]<br>list2 = list1<br>list1[0] = 4<br>print(list2)<br>A. [1, 3]<br>B. [4, 3]<br>C. [1, 4]<br>D. [1, 3, 4]<br>参考答案：<br>B<br>下列程序的输出结果为（         ）。</p><p>def f(values):<br>   values[0] = 44<br>v = [1, 2, 3]<br>f(v)<br>print(v)<br>A. [1, 44]<br>B. [1, 2, 3, 44]<br>C. [44, 2, 3]<br>D. [1, 2, 3]<br>参考答案：<br>C<br>下列程序的输出结果为（         ）。</p><p>def f(value,values):<br>    value = 1<br>    values[0] = 44<br>t = 3<br>v = [1, 2, 3]<br>f(t, v)<br>print(t, v[0])<br>A. 1 1<br>B. 1 44<br>C. 3 1<br>D. 3 44<br>参考答案：<br>D<br>假设x = [[1, 2], [3, 4, 5], [5, 6, 5, 9]]，len(x[0])、len(x[1])和len(x[2])的值为（         ）。<br>A. 2、3和3<br>B. 2、3和4<br>C. 3、3和3<br>D. 3、3和4<br>参考答案：<br>B<br>下列（        ）是元组（tuple）。<br>A. [1, 2, 3]<br>B. (1, 2, 3)<br>C. {1, 2, 3}<br>D. {}<br>参考答案：<br>B<br>下列（        ）不是创建元组的正确方式。<br>A. (1,)<br>B. (1, 2)<br>C. (1, 2, (3, 4))<br>D. (1)<br>参考答案：<br>D<br>假设t = (1, 2, 4, 3)，t[1:-1]的计算结果是（        ）。<br>A. (1, 2)<br>B.  (1, 2, 4)<br>C. (2, 4)<br>D. (2, 4, 3)<br>E. (1, 2, 4, 3)<br>参考答案：<br>C<br>假设t = (1, 2, 4, 3)，t[1:3]的计算结果是（        ）。<br>A. (1, 2)<br>B. (1, 2, 4)<br>C. (2, 4)<br>D. (2, 4, 3)<br>E. (1, 2, 4, 3)<br>参考答案：<br>C<br>假设t = (1, 2)，2 * t的计算结果是（        ）。<br>A. (1, 2, 1, 2)<br>B. [1, 2, 1, 2]<br>C. (1, 1, 2, 2)<br>D. [1, 1, 2, 2]<br>E. 非法的表达式<br>参考答案：<br>A<br>假设t1 = (1, 2, 4, 3)、t2 = (1, 2, 3, 4)，t1 &lt; t2 的计算结果是（         ）。<br>A. True<br>B. False<br>C. 非法的表达式<br>参考答案：<br>B<br>假设t = (1, 2, 4, 3, 8, 9)，[t[i] for i in range(0, len(t), 2)]的计算结果是（        ）。<br>A. [2, 3, 9]<br>B. [1, 2, 4, 3, 8, 9]<br>C. [1, 4, 8]<br>D. (1, 4, 8)<br>E. (2, 3, 9)<br>参考答案：<br>C<br>max((3, 5, 1, 7, 4))的结果是（        ）。<br>A. 1<br>B. 3<br>C. 5<br>D. 7<br>参考答案：<br>D<br>下列（        ）是字典（dictionary)。<br>A. [1, 2, 3]<br>B. (1, 2, 3)<br>C. {1, 2, 3}<br>D. {}<br>参考答案：<br>D<br>关于花括号{}，下列描述正确的是（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬<br>A. 直接使用{}将生成一个字符串类型<br>B. 直接使用{}将生成一个列表类型<br>C. 直接使用{}将生成一个字典类型<br>D. 直接使用{}将生成一个元组类型<br>参考答案：<br>C<br>下面（        ）字典不能被正确创建。<br>A. d = {3:[1, 2], 7:[3, 4]}<br>B. d = {[1, 2]:3, [3, 4]:7}<br>C. d = {(1, 2):3, (3, 4):7}<br>D. d = {“apple”:1, “banana”:3, “pear”:3}<br>E. d = {False:0, True:1}<br>参考答案：<br>B<br>对于字典d={‘abc’:1, ‘qwe’:2, ‘zxc’:3}，len(d)的结果为（       ）。<br>A. 9<br>B. 3<br>C. 6<br>D. 12<br>参考答案：<br>B<br>假设d = {“john”:40, “peter”:45}，键（keys）是（        ）。<br>A. “john”、40、45和”peter”<br>B. “john”和”peter”<br>C. 40和45<br>D. d = (40:”john”, 45:”peter”)<br>参考答案：<br>B<br>假设d = {“john”:40, “peter”:45}，”john” in d的计算结果是（         ）。<br>A. True<br>B. False<br>C. 非法的表达式<br>参考答案：<br>A<br>假设d1 = {“john”:40, “peter”:45}、d2 = {“john”:466, “peter”:45}，d1 == d2 的计算结果是（        ）。<br>A. True<br>B. False<br>C. 非法的表达式<br>参考答案：<br>B<br>假设d1 = {“john”:40, “peter”:45}、d2 = {“john”:466, “peter”:45}，d1 &gt; d2 的计算结果是（        ）。<br>A. True<br>B. False<br>C. 非法的表达式<br>参考答案：<br>C<br>假设d = {“john”:40, “peter”:45}，d[“john”]的计算结果是（         ）。<br>A. 40<br>B. 45<br>C. “john”<br>D. “peter”<br>参考答案：<br>A<br>假设d = {“john”:40, “peter”:45}，删除”john”:40，使用（         ）。<br>A. d.delete(“john”:40)<br>B. d.delete(“john”)<br>C. del d[“john”]<br>D. del d(“john”:40)<br>参考答案：<br>C<br>下列程序的输出结果为（         ）。<br>d ={“john”:40, “peter”:45}<br>print(list(d.keys()))<br>A. [‘john’, ‘peter’]<br>B. [john’: 40, ‘peter’: 45]<br>C. (‘john’, ‘peter’)<br>D. (john’: 40, ‘peter’: 45)<br>参考答案：<br>A<br>假设d = {“john”:40, “peter”:45}，使用的d[“susan”]获取一个值时将发生（         ）。<br>A. 因为”susan”不是字典中的一个值，抛出KeyError异常<br>B. 正常执行，没有异常发生，返回None<br>C. 因为”susan”不是字典中的一个键，抛出KeyError异常<br>D. 因为”susan”不是字典中的一个键，抛出语法错误<br>参考答案：<br>C<br>假设d = {“john”:40, “peter”:45}，使用的d.get(“susan”)获取一个值时将发生（         ）。<br>A. 因为”susan”不是字典中的一个值，抛出KeyError异常<br>B. 正常执行，没有异常发生，返回None<br>C. 因为”susan”不是字典中的一个键，抛出KeyError异常<br>D. 因为”susan”不是字典中的一个键，抛出语法错误<br>参考答案：<br>B<br>假设d = {“john”:40, “peter”:45}，获取字典中的条目（键/值对）数量，使用（        ）。<br>A. d.size()<br>B. len(d)<br>C. size(d)<br>D. d.len()<br>参考答案：<br>B<br>下列会返回错误的语句是（        ）。<br>A. d = dict([0, 1], [2, 3])<br>B. d = {}<br>C. d = dict(([0, 1], [2, 3]))<br>D. d = {0:1}<br>参考答案：<br>A<br>若字典dict_color = {“seashell”:”海贝色”, “gold”:”金色”, “pink”:”粉红色”, “brown”:”棕色”, “purple”:”紫色”, “tomato”:”西红柿色”}，则能够输出”海贝色”的是（        ）。<br>A. print(dict_color.keys())<br>B. print(dict_color[“海贝色”])<br>C. print(dict_color.values())<br>D. print(dict_color[“seashell”])<br>参考答案：<br>D<br>给定字典d，下列（        ）对x in d的描述是正确的。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬<br>A. 判断x是否是字典d中的键<br>B. x是一个二元元组，判断x是否是字典d中的键值对<br>C. 判断x是否是在字典d中以键或值方式存在<br>D. 判断x是否是字典d中的值<br>参考答案：<br>A<br>下面程序的结果是（        ）。</p><p>d= {‘a’: 1, ‘b’: 2, ‘b’: ‘3’}<br>print(d[‘b’])<br>A. {‘b’:2}<br>B. 3<br>C. 2<br>D. 1<br>参考答案：<br>B<br>给定字典d，下列对d.keys()的描述正确的是（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬<br>A. 返回一种dict_keys类型，包括字典d中所有键<br>B. 返回一个元组类型，包括字典d中所有键<br>C. 返回一个列表类型，包括字典d中所有键<br>D. 返回一个字符串类型，包括字典d中所有键<br>参考答案：<br>A<br>给定字典d，下列对d.values()的描述正确的是（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬<br>A. 返回一个字符串类型，包括字典d中所有值<br>B. 返回一个元组类型，包括字典d中所有值<br>C. 返回一种dict_values类型，包括字典d中所有值<br>D. 返回一个列表类型，包括字典d中所有值<br>参考答案：<br>C<br>下列（        ）是集合（set)。<br>A. [1, 2, 3]<br>B. (1, 2, 3)<br>C. {1, 2, 3}<br>D. {}<br>参考答案：<br>C<br>在（        ）中，不能有重复的元素。<br>A. 列表（list）<br>B. 元组（tuple）<br>C. 集合（set）<br>参考答案：<br>C<br>在（        ）中，元素不是按任何特定顺序存放的。<br>A. 列表（list）<br>B. 元组（tuple）<br>C. 集合（set）<br>参考答案：<br>C<br>下列（        ）语句生成集合{‘a’, ‘b’, ‘c’}。<br>A. list(“abac”)<br>B. tuple(“abac”)<br>C. set(“abac”)<br>D. 以上都不是<br>参考答案：<br>C<br>使用下列（        ）创建一个空集合。<br>A. {}<br>B. ()<br>C. []<br>D. set()<br>参考答案：<br>D<br>下列（        ）集合等于{1, 2, 3}。<br>A. {1, 2, 3}<br>B. {2, 1, 3}<br>C. {3, 2, 1}<br>D. {2, 3, 1}<br>E. {1, 2, 3, 2, 1, 3}<br>F. 以上都是<br>参考答案：<br>F<br>假设有集合s1和s2，s1 &lt; s2的计算结果是（        ）。<br>A. 若len(s1)小于len(s2)，结果为True<br>B. 若s1中的元素比较小于s2中的元素，结果为True<br>C. 若s1是s2的真子集，结果为True<br>D. 若s1是s2的真超集，结果为True<br>E. 非法的表达式<br>参考答案：<br>C<br>假设s = {1, 2, 5, 3}，下列（        ）的计算结果是4。<br>A. sum(s)<br>B. len(s)<br>C. min(s)<br>D. max(s)<br>E. None<br>参考答案：<br>B<br>假设s = {1, 2, 4, 3}，下列（        ）是错误的。<br>A. print(s[3])<br>B. 3 in s<br>C. print(max(s))<br>D. print(len(s))<br>E. print(sum(s))<br>参考答案：<br>A<br>假设s = {1, 2, 4, 3}，调用s.add(4)，将发生（         ）。<br>A. 集合对象没有add方法<br>B. 正常执行，4被添加到集合中<br>C. 因为集合中4已经存在，抛出KeyError异常<br>D. 不能对一个集合添加新元素<br>E. 正常执行，但4没有被添加到集合中，因为集合中4已经存在<br>参考答案：<br>E<br>假设s = {1, 2, 4, 3}，调用s.remove(12)，将发生（         ）。<br>A. 集合对象没有remove方法<br>B. 正常执行，没有异常发生<br>C. 因为集合中12不存在，抛出KeyError异常<br>D. 不能对一个集合删除元素<br>参考答案：<br>C<br>假设s1 = {1, 2, 4, 3}、s2 = {1, 3, 4, 2}，下列（         ）的计算结果是True。<br>A. s1 == s2<br>B. s1 != s2<br>C. s1 &gt; s2<br>D. s1 &lt; s2<br>参考答案：<br>A<br>假设s1 = {1, 2, 4, 3}、s2 = {0, 1, 5, 3, 4, 2, 13}，下列（         ）的计算结果是True。<br>A. s2.issubset(s1)<br>B. s1.issuperset(s2)<br>C. s2.issubset(s1)<br>D. s1.issubset(s2)<br>参考答案：<br>D<br>假设s1 = {1, 2, 4, 3}、s2 = {1, 5, 4, 13}，s1 | s2的计算结果是（         ）。<br>A. {1, 2, 4, 3, 1, 5, 4, 13}<br>B. {1, 2, 3, 4, 5,13}<br>C. {1, 2, 4, 3}<br>D. {1, 5, 4, 13}<br>参考答案：<br>B<br>假设s1 = {1, 2, 4, 3}、s2 = {1, 5, 4,13}，s1 - s2的计算结果是（         ）。<br>A. {2, 3, 5, 13}<br>B. {1, 2, 4, 3, 5,13}<br>C. {1, 2, 4, 3}<br>D. {1, 5, 4, 13}<br>E. {2, 3}<br>参考答案：<br>E<br>假设s1 = {1, 2, 4, 3}、s2 = {1, 5, 4, 13}，s1 &amp; s2的计算结果是（        ）。<br>A. {2, 3, 5, 13}<br>B. {1, 2, 4, 3, 5,13}<br>C. {1, 4}<br>D. {1, 5, 4, 13}<br>E. {2, 3}<br>参考答案：<br>C<br>假设s1 = {1, 2, 4, 3}、s2 = {1, 5, 4, 13}，s1 ^ s2的计算结果是（         ）。<br>A. {2, 3, 5, 13}<br>B. {4, 3, 5, 13}<br>C. {1, 4}<br>D. {1, 5, 4, 13}<br>E. {2, 3}<br>参考答案：<br>A<br>假设s1 = {1, 2, 4, 3}、s2 = {1, 5, 4, 13}，s1 + s2的计算结果是（         ）。<br>A. {1, 2, 4, 3, 1, 5, 4, 13}<br>B. {1, 2, 4, 3, 5, 13}<br>C. {1, 2, 4, 3}<br>D. {1, 5, 4, 13}<br>E. 非法的表达式<br>参考答案：<br>E<br>假设s = {1, 2}，2 * s的计算结果是（        ）。<br>A. (1, 2, 1, 2)<br>B. [1, 2, 1, 2]<br>C. (1, 1, 2, 2)<br>D. [1, 1, 2, 2]<br>E. 非法的表达式<br>参考答案：<br>E<br>下列（        ）说法是错误的。<br>A. 列表（list）是可变对象<br>B. 元组（tuple）是不可变对象<br>C. 集合（set）是不可变对象<br>D. 字典（dictionary）是可变对象<br>参考答案：<br>C<br>下面关于Python的描述，错误的是（    ）。<br>A. Python除了标准库之外可以使用大量的第三方库<br>B. Python的运行效率明显高于其他计算机语言<br>C. Python支持面向对象<br>D. Python的解释器是免费而且开源的<br>参考答案：<br>B<br>下面不属于合法的整数的是（    ）。<br>A. 7.5<br>B. 13<br>C. 0x0a<br>D. 0o25<br>参考答案：<br>A<br>下面（    ）数据类型是Python不提供的。<br>A. long<br>B. list<br>C. tuple<br>D. int<br>参考答案：<br>A<br>下面程序的运行结果是（    ）。</p><p>A. 12<br>B. 0<br>C. 5<br>D. 7<br>参考答案：<br>C<br>下面程序的运行结果是（    ）。</p><p>A. 2.0j<br>B. (1+2j)<br>C. 2.0<br>D. 1.0<br>参考答案：<br>C<br>下面程序的运行结果是（    ）。</p><p>A. &lt;class ‘float’&gt;<br>B. &lt;class ‘char’&gt;<br>C. &lt;class ‘int’&gt;<br>D. &lt;class ‘str’&gt;<br>参考答案：<br>D<br>下面表示False的是（    ）。<br>A. False + 1<br>B. bool(1)<br>C. bool(‘False’)<br>D. bool(‘’)<br>参考答案：<br>D<br>已知x = 2，语句x *= x + 1执行后，x的值是（    ）。</p><p>A. 2<br>B. 6<br>C. 3<br>D. 5<br>参考答案：<br>B<br>语句x = input()执行时，如果从键盘输入1并按回车键，则x的值是（    ）。<br>A. ‘1’<br>B. ‘1\0’<br>C. 1<br>D. 1.0<br>参考答案：<br>A<br>查看变量内存地址的内置函数是（    ）。<br>A. address()<br>B. id()<br>C. type()<br>D. mem()<br>参考答案：<br>B<br>在Python中，实现多分支选择结构时，最好使用（    ）方式。<br>A. if<br>B. switch<br>C. if-else<br>D. if-elif-else<br>参考答案：<br>D<br>以下关于Python语句的描述中，正确的是（    ）。<br>A. Python语句可以从一行的任意一列开始<br>B. 在执行Python语句时，可发现注释中的拼写错误<br>C. 在if-else结构中，程序会根据else的位置自动检测if代码块的边界，因此if代码块不用考虑缩进对齐<br>D. 同一层次的Python语句必须对齐<br>参考答案：<br>D<br>下列Python程序的运行结果是（    ）。</p><p>A. True<br>B. False<br>C. true<br>D. false<br>参考答案：<br>B<br>以下程序的输出结果是（    ）。</p><p>A. 6 3 0<br>B. 6 3<br>C. 3 0<br>D. 3 0 -3<br>参考答案：<br>C<br>以下程序的输出结果是（    ）。</p><p>A. 1<br>B. 2<br>C. 3<br>D. 6<br>参考答案：<br>C<br>以下（    ）程序正确计算了”1/2 + 2/3 + 3/4 + … + 99/100” 的值。<br>A.<br>total = 0<br>for i in range(1, 99):<br>    total += i / (i + 1)<br>print(“Total is”, total)</p><p>B.<br>total = 0<br>for i in range(1, 100):<br>    total += i / (i + 1)<br>print(“Total is”, total)</p><p>C.<br>total = 0<br>for i in range(0, 99):<br>    total += i / (i + 1)<br>print(“Total is”, total)</p><p>D.<br>total = 0<br>for i in range(1, 101):<br>    total += i / (i + 1)<br>print(“Total is”, total)<br>参考答案：<br>B<br>关于函数，以下选项中描述错误的是（    ）。<br>A. 函数是一段具有特定功能的、可重用的语句组<br>B. 使用函数的主要目的是降低编程难度和代码重用<br>C. Python使用del保留字定义一个函数<br>D. 函数能完成特定的功能，对函数的使用不需要了解函数内部实现原理，只要了解函数的输入输出方式即可<br>参考答案：<br>C<br>以下程序的输出结果是（    ）。</p><p>A. 22.0 None<br>B. 22 None<br>C. 10 None<br>D. 10.0 22.0<br>参考答案：<br>C<br>以下程序的输出结果是（    ）。</p><p>A. 1, 2, 3, 4, 5, 6<br>B.<br>1<br>2<br>3, 4, 5, 6<br>C.<br>1<br>2<br>[3, 4, 5, 6]<br>D.<br>1<br>2<br>(3, 4, 5, 6)<br>参考答案：<br>D<br>关于下面代码的描述，错误的是（    ）。</p><p>A. 输出字符串”HelloHello”<br>B. c是一个局部变量<br>C. n是一个全局变量&lt;<br>D. 运行出错，出错类型是NameError: name ‘c’ is not defined<br>参考答案：<br>A<br>以下关于Python函数对变量的作用，错误的是（    ）。<br>A. 简单数据类型变量在函数内部用global保留字声明后，函数退出后该变量保留<br>B. 全局变量在程序执行全过程有效<br>C. 对于组合数据类型的全局变量，如果在函数内部没有被真实创建的同名变量，则函数内部不可以直接使用并修改全局变量的值<br>D. 函数内部建立的局部变量，在函数外不可以使用<br>参考答案：<br>C<br>正则表达式元字符（    ）用来表示该符号前面的字符或子模式1次或多次出现。<br>A. *<br>B. +<br>C. ^<br>D. $<br>参考答案：<br>B<br>上一题<br>下一题<br>若 a = ‘abcd’，若想将a变为’ebcd’，则下列语句正确的是（    ）。<br>A. a[0] = ‘e’<br>B. a.replace(‘a’, ‘e’)<br>C. a[1] = ‘e’<br>D. a = ‘e’ + a[1:]<br>参考答案：<br>D<br>现有列表 k = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]，那么执行k[1:3] = ‘abc’后，执行k[2]的结果是（    ）。<br>A. 4<br>B. b<br>C. abc<br>D. c<br>参考答案：<br>B<br>若有代码t = (‘a’)，则type(t)的结果为（    ）。<br>A. &lt;class ‘str’&gt;<br>B. &lt;class ‘tuple’&gt;<br>C. &lt;class ‘list’&gt;<br>D. &lt;class ‘int’&gt;<br>参考答案：<br>A<br>下面代码的输出结果是（    ）。</p><p>A. False<br>B. True<br>C. -1<br>D. 0<br>参考答案：<br>A<br>以下选项中，不是Python语言关键字（保留字）的是（    ）。<br>A. except<br>B. pass<br>C. do<br>D. while<br>参考答案：<br>C<br>下面代码的输出结果是（    ）。</p><p>A. 10.99+j<br>B. 10.99<br>C. 0.99<br>D. (10.99+0j)<br>参考答案：<br>D<br>关于 Python 字符编码，以下选项中描述错误的是（    ）。<br>A. Python字符编码使用ASCII编码<br>B. print(chr(65))输出A<br>C. print(ord(‘a’))输出97<br>D. chr(x)和ord(x)函数用于在单字符和Unicode 编码值之间进行转换<br>参考答案：<br>A<br>给出如下代码：</p><p>以下选项中，描述错误的是（    ）。<br>A. 这段代码的功能是程序自动猜数字<br>B. import random代码是可以省略的<br>C. while True: 创建了一个永远执行的循环<br>D. random.randint(1,10) 生成[1,10]之间的整数<br>参考答案：<br>B<br>对于列表lst的操作，以下选项中，描述错误的是（    ）。<br>A. lst.clear()：删除ls的最后一个元素<br>B. lst.copy()：生成一个新列表，复制lst的所有元素<br>C. lst.reverse()：列表lst的所有元素反转<br>D. lst.append(x)：在lst最后增加一个元素<br>参考答案：<br>A<br>下面代码的输出结果是（    ）。</p><p>A. False<br>B. 0<br>C. -1<br>D. True<br>参考答案：<br>D<br>给出如下代码：</p><p>以下选项中能输出随机列表元素最大值的是（    ）。<br>A. print(lst.max())<br>B. print(lst.pop(i))<br>C. print(max(lst))<br>D. print(lst.reverse(i))<br>参考答案：<br>C<br>下面代码的输出结果是（    ）。</p><p>A. 0 1 2 3 4<br>B. 0,1,2,3,4,<br>C. 0;1;2;3;4;<br>D. [0, 1, 2, 3, 4]<br>参考答案：<br>D<br>以下选项中，修改turtle画笔颜色的函数是（    ）。<br>A. seth()<br>B. colormode()<br>C. bk()<br>D. pencolor()<br>参考答案：<br>D<br>执行如下代码：</p><p>绘制的是（    ）。<br>A. 正方形<br>B. 三角形<br>C. 五角星<br>D. 五边形<br>参考答案：<br>A<br>给出如下代码：</p><p>以下选项中，可以输出”World”子串的是（    ）。<br>A. print(s[–5: –1])<br>B. print(s[–5:0])<br>C. print(s[–5:])<br>D. print(s[–4: –1])</p><p>参考答案：<br>C<br>如果name = “Python程序设计基础”，以下选项中，输出错误的是（    ）。<br>A.</p><blockquote><blockquote><blockquote><p>print(name[:])<br>Python程序设计基础<br>B.<br>print(name[0], name[8], name[-1])<br>P 设<br>C.<br>print(name[:6])<br>Python<br>D.<br>print(name[6:])<br>程序设计基础<br>参考答案：<br>B<br>下列代码的运行结果是（    ）。</p></blockquote></blockquote></blockquote><p>A. ‘PYTH’<br>B. ‘ PYTHON’<br>C. ‘PYTHON’<br>D. ‘PYT’<br>参考答案：<br>C<br>给出如下代码：</p><p>以下选项中，能输出字符”八”出现次数的是<br>A. print(s.index(“八”))<br>B. print(s.index(“八”), 6)<br>C. print(s.index(“八”), 6, len(s))<br>D. print(s.count(“八”))</p><p>参考答案：<br>D<br>下面代码的输出结果是（    ）。</p><p>A. &lt;class ‘int’&gt;<br>B. &lt;class ‘float’&gt;<br>C. &lt;class ‘bool’&gt;<br>D. &lt;class ‘complex’&gt;<br>参考答案：<br>B<br>下面代码的输出结果是（    ）。</p><p>A. 3 1000<br>B. 1 30<br>C. 3 30<br>D. 1 1000<br>参考答案：<br>D<br>以下选项中值为False的是（    ）。<br>A. ‘abc’ &lt; ‘abcd’<br>B. ‘ ‘ &lt; ‘a’<br>C. ‘Hello’ &gt; ‘hello’<br>D. ‘abcd’ &lt; ‘ad’<br>参考答案：<br>C<br>关于语句：<br>p = -p<br>以下选项中，描述正确的是（    ）。<br>A. p和p的负数相等<br>B. p和p的绝对值相等<br>C. 给p赋值为它的负数<br>D. p的值为0<br>参考答案：<br>C<br>关于函数作用的描述，以下选项中，错误的是（    ）。<br>A. 复用代码<br>B. 增强代码的可读性<br>C. 降低编程复杂度<br>D. 提高代码执行速度<br>参考答案：<br>D<br>下面代码的输出结果是（    ）。</p><p>A. 10 5<br>B. 4 15<br>C. 10 15<br>D. 4 5<br>参考答案：<br>D<br>假设函数中不包括global关键字，对于改变参数值的描述，以下选项中，错误的是（    ）。<br>A. 参数是数值类型时，不改变原参数的值<br>B. 参数是列表类型时，改变原参数的值<br>C. 参数的值是否改变与函数中对变量的操作有关，与参数类型无关<br>D. 参数是可变对象时，改变原参数的值</p><p>参考答案：<br>C<br>关于函数的可变长参数，可变参数*args传入函数时存储的类型是（    ）。<br>A. 列表<br>B. 字符串<br>C. 字典<br>D. 元组<br>参考答案：<br>D<br>对建立良好的程序设计风格，下面描述正确的是（    ）。<br>A. 标识符的命名只要符合语法<br>B. 充分考虑程序的执行效率<br>C. 程序的注释可有可无<br>D. 程序应简单、清晰、可读性好<br>参考答案：<br>D<br>算法的时间复杂度是指（    ）。</p><p>A. 执行算法程序所需要的时间<br>B. 算法程序的长度<br>C. 算法程序中的指令条数<br>D. 算法执行过程中所需要的基本运算次数<br>参考答案：<br>D<br>程序就是做一件事情或者解决一个问题所采取的一系列（        ）步骤。<br>A. 无序<br>B. 重复<br>C. 固定<br>D. 随机<br>参考答案：<br>C<br>Python语言程序中的语句的行与行之间必须（）对齐。（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬<br>A. 右<br>B. 左<br>C. 居中<br>D. 无需对齐<br>参考答案：<br>B<br>有些语句（如if，else，while）的末尾是冒号” : “，这样，下面的若干行就要缩进（        ）空格。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬<br>A. 必须2个<br>B. 至少4个<br>C. 最多4个<br>D. 至少1个<br>参考答案：<br>D<br>Python中的整数类型为（        ）类型。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬<br>A. int<br>B. float<br>C. str<br>D. list<br>参考答案：<br>A<br>Python不支持（        ）数据类型。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬<br>A. complex<br>B. char<br>C. tuple<br>D. dict<br>参考答案：<br>B<br>Python语言可以在（        ）操作系统上运行。<br>A. Windows<br>B. Linux<br>C. Mac OS<br>D. 以上都可以<br>参考答案：<br>D<br>Python自带的一个集成开发环境是（        ）。<br>A. Thonny<br>B. Anaconda<br>C. PyCharm<br>D. Shell-IDLE<br>参考答案：<br>D<br>关于Python中的字符串，下列说法错误的是（        ）。<br>A. 字符串以\0标志字符串的结束<br>B. 字符应该视为长度为1的字符串<br>C. 既可以用单引号，也可以用双引号创建字符串<br>D. 在三引号字符串中可以包含换行回车等特殊字符<br>参考答案：<br>A<br>关于python中的复数，下列说法错误的是（        ）。<br>A. 虚部必须后缀j且j不区分大小写<br>B. 实部和虚部都是整数<br>C. 复数之间只能比较是否相等<br>D. 表示复数的语法是a+bj，其中a为实部、b为虚部<br>参考答案：<br>B<br>下列表达式中返回为True的是（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬<br>A. 3&gt;2&gt;2<br>B. 0x56&gt;56<br>C. “abc”&gt;”xyz”<br>D. (3, 2)&gt;(‘a’, ‘b’)<br>参考答案：<br>B<br>下列代码的输出结果是（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬</p><p>A. big<br>B. bigbig<br>C. big2<br>D. 会报错<br>参考答案：<br>D<br>下列代码的运行结果是（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬</p><p>A. 0<br>B. True<br>C. False<br>D. 1<br>参考答案：<br>C<br>下列代码的运行结果是（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬</p><p>A. False<br>B. 0<br>C. True<br>D. 1<br>参考答案：<br>A<br>下列描述正确的是（        ）。<br>A. 只能在循环体内使用break语句<br>B. 在循环体内使用break语句或continue语句的作用相同<br>C. 从多层循环嵌套中退出时，可以使用goto语句<br>D. continue语句的作用是结束整个循环的执行<br>参考答案：<br>A<br>下列代码的运行结果是（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬</p><p>A.<br>1<br>3<br>5<br>7<br>END</p><p>B.<br>1<br>3<br>5<br>END</p><p>C.<br>1<br>3<br>5</p><p>D.<br>1<br>3<br>5<br>7<br>参考答案：<br>C<br>下列关于Python中函数的说法，不正确的是（        ）。<br>A. Python中定义函数的关键字是def<br>B. 函数内容以冒号起始，并且缩进<br>C. 结束函数时如果return语句不带表达式相当于无返回值<br>D. 在函数内部可以使用global来定义全局变量<br>参考答案：<br>C<br>下列定义函数的方法，在Python中正确的是（      ）。<br>A. class <name>(<type> arg1, <type> arg2, …<type> argN)<br>B. def <name>(arg1, arg2, …argN)<br>C. def <name>(<type> arg1, <type> arg2, …<type> argN)<br>D. function <name>(arg1, arg2, …argN)</p><p>参考答案：<br>B<br>下列代码的运行结果是（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬</p><p>A. [1, 2, 3]<br>B. [1, 0, 2]<br>C. [0, 2, 3]<br>D. [1, 2, 5]<br>参考答案：<br>D<br>下列代码的运行结果是（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬</p><p>A. 1 0<br>B. 4 0<br>C. 1 10<br>D. 4 10<br>参考答案：<br>B<br>下列代码的运行结果是（        ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬</p><p>A. 23<br>B. 21<br>C. 22<br>D. 24<br>参考答案：<br>C<br>阅读以下代码，说法正确的是（         ）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬</p><p>A. print(obj.v1)值为100<br>B. print(obj.v1==obj.v2)结果为False<br>C. print(obj.v1)值为0<br>D. print(obj.v1==obj.v2)会报错<br>参考答案：<br>A<br>下列代码的运行结果是（        ）。</p><p>A.<br>0<br>[1, 2, 3]</p><p>B.<br>0<br>1<br>2<br>3</p><p>C.<br>[1, 2, 3]</p><p>D.<br>[0, 1, 2, 3]<br>参考答案：<br>A<br>下列代码的运行结果是（         ）。</p><p>A.<br>division by zero</p><p>B.<br>division by zero<br>done</p><p>C.<br>division by zero<br>always execute<br>done</p><p>D.<br>division by zero<br>always execute<br>参考答案：<br>B<br>下列关于文件的描述，错误的是（         ）。<br>A. 打开二进制文件应该采用模式’rt’<br>B. 通常采用with语句以保证系统自动关闭打开的流<br>C. 文件操作可以使用close方法关闭流<br>D. 可以使用pickle模块进行对象序列化<br>参考答案：<br>A<br>下面代码的执行结果是（        ）。</p><p>文件 foo.txt 与程序在同一文件夹内，其内容是一段文本：Python is fun。<br>A. Python is fun<br>B. foo.txt<br>C. fo<br>D. 以上答案都不对<br>参考答案：<br>D<br>Python源程序执行的方式是（       ）。<br>A. 直接执行<br>B. 包含了提前编译的解释执行<br>C. 边编译边执行<br>D. 编译执行<br>参考答案：<br>B<br>下列（       ）不是Python合法的标识符。<br>A. <strong>name</strong><br>B. self<br>C. int32<br>D. 40XL<br>参考答案：<br>D<br>下列（       ）不是python中的关键字（保留字）。<br>A. if<br>B. import<br>C. else<br>D. print<br>参考答案：<br>D<br>下列关于 Python 语言注释的说法，错误的是<br>A. Python 语言有两种注释方式：单行注释和多行注释<br>B. Python 语言的多行注释可以用 ‘’’（三个单引号）开头和结尾<br>C. Python 语言的单行注释以单引号 ‘开头<br>D. Python 语言的单行注释以#开头<br>参考答案：<br>C<br>分值：   2<br>下列关于 Python 语言字符编码的说法，错误的是<br>A. print(chr(65)) 输出 A<br>B. print(ord(‘a’)) 输出 97<br>C. Python 字符编码使用 ASCII 编码<br>D. chr(x) 和 ord(x) 函数用于在单字符和 Unicode 编码值之间进行转换<br>参考答案：<br>C<br>执行下列程序，输出的结果是（    ）。<br>x = 1<br>x = 2 * x + 1<br>print(x)<br>A. 1<br>B. 2<br>C. 3<br>D. 4<br>参考答案：<br>C<br>假设s = “Welcome”，s.lower()结果是（   ）。<br>A. welcome<br>B. WELCOME<br>C. Welcome<br>D. wELCOME<br>参考答案：<br>A<br>可以在一行的结尾处放置一个行继续符号（   ），告诉解释器这条语句将继续到下一行。<br>A. /<br>B. <br>C. #<br>D. *<br>E. &amp;<br>参考答案：<br>B<br>print(type(1J))的输出结果是（   ）。<br>A. &lt;class ‘complex’&gt;<br>B. &lt;class ‘int’&gt;<br>C. &lt;class ‘float’&gt;<br>D. &lt;class ‘number’&gt;<br>参考答案：<br>A<br>下列关于Python中的复数的说法，错误的是（   ）。<br>A. 表示复数的语法是real + imag j<br>B. 实部和虚部都是浮点数<br>C. 虚部必须后缀j, 且必须是小写<br>D. 方法conjugate返回复数的共轭复数<br>参考答案：<br>C<br>下列关于Python中的复数的说法，错误的是（   ）。<br>A. 表示复数的语法是real + imag j<br>B. 实部和虚部都是浮点数<br>C. 虚部必须后缀j, 且必须是小写<br>D. 方法conjugate返回复数的共轭复数<br>参考答案：<br>C<br>下列关于 random 库的描述，正确的是<br>A. 设定相同种子，每次调用随机函数生成的随机数不相同<br>B. 通过 from random import * 引入 random 随机库的部分函数<br>C. randint(a,b) 是生成一个 [a,b] 之间的整数<br>D. uniform(0,1) 与 uniform(0.0,1.0) 的输出结果不同，前者输出随机整数，后者输出随机小数<br>参考答案：<br>C<br>Python通过（        ）来判断操作是否在分支语句中。<br>A. 缩进<br>B. 圆括号<br>C. 花括号<br>D. 冒号<br>参考答案：<br>A<br>执行下面程序后，x的值是（    ）。</p><p>A. 4<br>B. 1<br>C. 3<br>D. 2<br>参考答案：<br>D<br>area是tri模块中的一个函数，执行from tri import area 后，调用area函数应该使用（    ）。<br>A. tri(area)<br>B. tri.area()<br>C. area()<br>D. tri()<br>参考答案：<br>C<br>函数定义如下：</p><p>运行程序的输出结果是（    ）。<br>A. 6<br>B. 3<br>C. 1<br>D. 语法错<br>参考答案：<br>D<br>递归函数具有（         ）的特点。<br>A. 函数内部包含对本函数的再次调用<br>B. 函数名作为返回值<br>C. 函数比较复杂<br>D. 包含一个循环结构<br>参考答案：<br>A<br>假设word = “cat”，下列（         ）输出“tac”。<br>A. print(word[::-1])<br>B. print(word[::1])<br>C. print(word[0:1:2])<br>D. print(word[2:1:0])<br>参考答案：<br>A<br>下列程序的输出结果是（         ）。</p><p>A. 2<br>B. 3<br>C. -4<br>D. -5<br>参考答案：<br>A<br>下列程序的输出结果为（         ）。</p><p>A. [1] [2] [3]<br>B. [1] [1, 2] [1, 2, 3]<br>C. [1, 2, 3]<br>D. 1 2 3<br>参考答案：<br>C<br>假设t = (1, 2, 4, 3)，下列（         ）是错误的。<br>A. print(t[3])<br>B. t[3] = 45<br>C. print(max(t))<br>D. print(len(t))<br>E. print(sum(t))<br>参考答案：<br>B<br>给定字典d，下列对d.get(x, y)的描述正确的是（        ）。<br>A. 返回字典d中键值对为x:y的值<br>B. 返回字典d中键为x的值，如果不存在，则返回y<br>C. 返回字典d中键为x的值，如果不存在，则返回Null<br>D. 返回字典d中值为y的值，如果不存在，则返回x<br>参考答案：<br>B<br>给定字典d，下列对d.get(x, y)的描述正确的是（        ）。<br>A. 返回字典d中键值对为x:y的值<br>B. 返回字典d中键为x的值，如果不存在，则返回y<br>C. 返回字典d中键为x的值，如果不存在，则返回Null<br>D. 返回字典d中值为y的值，如果不存在，则返回x<br>参考答案：<br>B<br>对于集合s，以下（        ）操作是不存在的。<br>A. len(s)<br>B. s.append(1)<br>C. max(s)<br>D. s - {1}<br>参考答案：<br>B<br>对于正确的表达式a[2]，a不可能是以下（        ）类型。<br>A. 集合<br>B. 列表<br>C. 元组<br>D. 字典<br>参考答案：<br>A<br>下列（       ）函数不是Python中对文件的读操作。<br>A. readlines<br>B. readall<br>C. read<br>D. readline<br>参考答案：<br>B<br>下列关于结构化程序设计所要求的基本结构的描述，错误的是（        ）。<br>A. 重复（循环）结构<br>B. 选择（分支）结构<br>C. goto跳转<br>D. 顺序结构<br>参考答案：<br>C<br>下列关于面向对象的继承的描述，正确的是（        ）。<br>A. 继承是指一组对象所具有的相似性质<br>B. 继承是指类之间共享属性和操作的机制<br>C. 继承是指各对象之间的共同性质<br>D. 继承是指一个对象具有另一个对象的性质<br>参考答案：<br>B<br>下列关于软件测试的描述，正确的是（        ）。<br>A. 软件测试的主要目的是确定程序中错误的位置<br>B. 为了提高软件测试的效率，最好由程序编制者自己来完成软件的测试工作<br>C. 软件测试是证明软件没有错误<br>D. 软件测试的主要目的是发现程序中的错误<br>参考答案：<br>D<br>下列关于 Python 程序格式框架的描述，错误的是（        ）。<br>A. Python 语言的缩进可以采用 Tab 键实现<br>B. Python 单层缩进代码属于之前最邻近的一行非缩进代码，多层缩进代码根据缩进关系决定所属范围<br>C. 判断、循环、函数等语法形式能够通过缩进包含一批 Python 代码，进而表达对应的语义<br>D. Python 语言不采用严格的“缩进”来表明程序的格式框架<br>参考答案：<br>D<br>下列选项中，不符合 Python 语言变量命名规则的是（        ）。<br>A. I<br>B. 3_1<br>C. _AI<br>D. TempStr<br>参考答案：<br>B<br>下列关于 Python 字符串的描述，错误的是（        ）。<br>A. 字符串是字符的序列，可以按照单个字符或者字符片段进行索引<br>B. 字符串包括两种序号体系：正向递增和反向递减<br>C. Python 字符串提供区间访问方式，采用 [N:M] 格式，表示字符串中从N 到 M 的索引子字符串（包含 N 和 M）<br>D. 字符串是用一对双引号” “或者单引号’ ‘括起来的零个或者多个字符<br>参考答案：<br>C<br>下列关于 Python 语言的注释的描述，错误的是（        ）。<br>A. Python 语言的单行注释以#开头<br>B. Python 语言的单行注释以单引号’开头<br>C. Python 语言的多行注释以’’’（三个单引号）开头和结尾<br>D. Python 语言有两种注释方式：单行注释和多行注释<br>参考答案：<br>B<br>下列关于 import 引用的描述，错误的是（         ）。<br>A. 使用 import turtle 引入turtle 库<br>B. 可以使用 from turtle import setup 引入 turtle 库<br>C. 使用 import turtle as t 引入 turtle 库，取别名为t<br>D. import 保留字用于导入模块或者模块中的对象<br>参考答案：<br>B<br>下面程序的输出结果是（         ）。</p><p>x = 12.34<br>print(type(x))<br>A. &lt;class ‘int’&gt;<br>B. &lt;class ‘float’&gt;<br>C. &lt;class ‘bool’&gt;<br>D. &lt;class ‘complex’&gt;<br>参考答案：<br>B<br>下列关于 Python 的复数类型的描述，错误的是（         ）。<br>A. 复数的虚数部分通过后缀”J”或者”j”来表示<br>B. 对于复数z，可以用 z.real 获得它的实数部分<br>C. 对于复数z，可以用 z.imag 获得它的实数部分<br>D. 复数类型表示数学中的复数<br>参考答案：<br>C<br>下列关于 Python 字符串的描述，错误的是（         ）。<br>A. 可以使用 datatype() 测试字符串的类型<br>B. 输出带有引号的字符串，可以使用转义字符<br>C. 字符串是一个字符序列，字符串中的编号叫”索引”<br>D. 字符串可以保存在变量中，也可以单独存在<br>参考答案：<br>A<br>下列关于 Python 的分支结构的描述，错误的是（         ）。<br>A. 分支结构使用 if 保留字<br>B. Python 中 if-else 语句用来形成二分支结构<br>C. Python 中 if-elif-else 语句描述多分支结构<br>D. 分支结构可以向已经执行过的语句部分跳转<br>参考答案：<br>D<br>下列关于 Python 的分支结构的描述，错误的是（         ）。<br>A. 分支结构使用 if 保留字<br>B. Python 中 if-else 语句用来形成二分支结构<br>C. Python 中 if-elif-else 语句描述多分支结构<br>D. 分支结构可以向已经执行过的语句部分跳转<br>参考答案：<br>D<br>下列关于程序的异常处理的描述，错误的是（         ）。<br>A. 程序异常发生经过妥善处理可以继续执行<br>B. 异常语句可以与 else 和 finally 保留字配合使用<br>C. 编程语言中的异常和错误是完全相同的概念<br>D. Python 通过 try、except 等保留字提供异常处理功能<br>参考答案：<br>C<br>下列关于函数的描述，错误的是（         ）。<br>A. 函数能完成特定的功能，对函数的使用不需要了解函数内部实现原理，只要了解函数的输入输出方式即可<br>B. 使用函数的主要目的是减低编程难度和代码重用<br>C. Python 使用 del 保留字定义一个函数<br>D. 函数是一段具有特定功能的、可重用的语句组<br>参考答案：<br>C<br>下列关于 Python 组合数据类型的描述，错误的是（         ）。<br>A. 组合数据类型可以分为3类：序列类型、集合类型和映射类型<br>B. 序列类型是二维元素向量，元素之间存在先后关系，通过序号访问<br>C. Python的str、tuple和list类型都属于序列类型<br>D. Python组合数据类型能够将多个同类型或不同类型的数据组织起来，通过单一的表示使数据操作更有序、更容易<br>参考答案：<br>B<br>下列关于 Python 序列类型的通用操作符和函数的描述，错误的是（         ）。<br>A. 如果 x 不是s 的元素，x not in s 返回 True<br>B. 如果 s 是一个序列，s = [1, “kate”, True]，s[3] 返回 True<br>C. 如果 s 是一个序列，s = [1, “kate”, True]，s[–1] 返回 True<br>D. 如果 x 是 s的元素，x in s 返回 True<br>参考答案：<br>B<br>下列关于 Python 对文件的处理的描述，错误的是（         ）。<br>A. Python 通过解释器内置的 open() 函数打开一个文件<br>B. 当文件以文本方式打开时，读写按照字节流方式<br>C. 文件使用结束后要用 close() 方法关闭，释放文件的使用授权<br>D. Python 能够以文本和二进制两种方式处理文件<br>参考答案：<br>B<br>下列选项中，不是 Python 对文件的写操作方法的是（         ）。<br>A. writelines<br>B. write和seek<br>C. writetext<br>D. write<br>参考答案：<br>C<br>下列选项中，不是 Python 语言保留字的是（         ）。<br>A. except<br>B. do<br>C. pass<br>D. while<br>参考答案：<br>B<br>下面程序的输出结果是（         ）。</p><p>x = 0o1010<br>print(x)<br>A. 520<br>B. 1024<br>C. 32768<br>D. 10<br>参考答案：<br>A<br>下面程序的输出结果是（         ）。</p><p>x=10<br>y=3<br>print(divmod(x, y))<br>A. (1, 3)<br>B. 3, 1<br>C. 1, 3<br>D. (3, 1)<br>参考答案：<br>D<br>下面程序的输出结果是（         ）。</p><p>for s in “HelloWorld”:<br>    if s == “W”:<br>        continue<br>    print(s, end=””)<br>A. Hello<br>B. World<br>C. HelloWorld<br>D. Helloorld<br>参考答案：<br>D<br>给出如下程序：<br>DictColor = {“seashell”:”海贝色”, “gold”:”金色”, “pink”:”粉红色”, “brown”:”棕色”, “purple”:”紫色”, “tomato”:”西红柿色”}<br>下列选项中，能输出”海贝色”的是（         ）。<br>A. print(DictColor.keys())<br>B. print(DictColor[“海贝色”])<br>C. print(DictColor.values())<br>D. print(DictColor[“seashell”])<br>参考答案：<br>D<br>下面程序的输出结果是（         ）。</p><p>s = [“seashell”, “gold”, “pink”, “brown”, “purple”, “tomato”]<br>print(s[1:4:2])<br>A. [‘gold’, ‘pink’, ‘brown’]<br>B. [‘gold’, ‘pink’]<br>C. [‘gold’, ‘pink’, ‘brown’, ‘purple’, ‘tomato’]<br>D. [‘gold’, ‘brown’]<br>参考答案：<br>D<br>下面程序的输出结果是（         ）。</p><p>d = {“大海”:”蓝色”, “天空”:”灰色”, “大地”:”黑色”}<br>print(d[“大地”], d.get(“大地”, “黄色”))<br>A. 黑的 灰色<br>B. 黑色 黑色<br>C. 黑色 蓝色<br>D. 黑色 黄色<br>参考答案：<br>B<br>当输入abc时，下面程序的输出结果是（         ）。<br>try:<br>   n = 0<br>   n = input(“请输入一个整数: “)<br>   def pow10(n):<br>      return n ** 10<br>except:<br>   print(“程序执行错误”)<br>A. abc<br>B. 没有任何输出<br>C. 0<br>D. 程序执行错误<br>参考答案：<br>B<br>下面程序的输出结果是（         ）。</p><p>a = [[1,2,3], [4,5,6], [7,8,9]]<br>s = 0<br>for c in a:<br>   for j in range(3):<br>      s += c[j]<br>print(s)<br>A. 0<br>B. 45<br>C. 24<br>D. 以上答案都不对<br>参考答案：<br>B<br>文件 book.txt 在当前程序所在目录内，其内容是一段文本：book，下面程序的输出结果是（         ）。</p><p>txt = open(“book.txt”, “r”)<br>print(txt)<br>txt.close()<br>A. book.txt<br>B. txt<br>C. book<br>D. 以上答案都不对<br>参考答案：<br>D<br>如果当前时间是2018年5月1日10点10分9秒，下面程序的输出结果是（         ）。</p><p>from datetime import datetime<br>dt = datetime(2018, 5, 1, 10, 10, 9)<br>print(dt.strftime(“%Y=%m-%d@%H&gt;%M&gt;%S”))<br>A. 2018=05-01@10&gt;10&gt;09<br>B. 2018=5-110&gt;10&gt;9<br>C. True@True<br>D. 2018=5-1@10&gt;10&gt;9<br>参考答案：<br>A<br>下列关于算法的描述，错误的是（        ）。<br>A. 算法具有可行性、确定性、有穷性的基本特征<br>B. 算法的复杂度主要包括时间复杂度和数据复杂度<br>C. 算法的基本要素包括数据对象的运算和操作及算法的控制结构<br>D. 算法是指解题方案的准确而完整的描述<br>参考答案：<br>B<br>Python用于异常处理结构中捕获特定类型的异常的保留字是（        ）。<br>A. except<br>B. do<br>C. pass<br>D. while<br>参考答案：<br>A<br>下列选项中，符合Python语言变量命名规则的是（        ）。<br>A. *i<br>B. 3_1<br>C. AI!<br>D. Templist<br>参考答案：<br>D<br>下列关于赋值语句的描述，错误的是（        ）。<br>A. 在 Python 语言中，有一种赋值语句，可以同时给多个变量赋值<br>B. 设x = “alice”，y = “kate”，执行</p><p>x, y = y, x<br>可以实现变量 x 和 y 值的互换<br>C. 设a = 10，b = 20，执行</p><p>a, b = a, a + b<br>print(a, b)<br>和</p><p>a = b<br>b = a + b<br>print(a, b)<br>之后，得到同样的输出结果：10 30<br>D. 在 Python 语言中，”=”表示赋值，即将”=”右侧的计算结果赋值给左侧变量，包含”=”的语句称为赋值语句<br>参考答案：<br>C<br>下列关于 eval 函数的描述，错误的是（        ）。<br>A. eval 函数的作用是将输入的字符串转为 Python 语句，并执行该语句<br>B. 如果用户希望输入一个数字，并用程序对这个数字进行计算，可以采用 eval(input(&lt;输入提示字符串&gt;)) 组合<br>C. 执行 eval(“Hello”) 和执行eval(“ ‘Hello’ “) 得到相同的结果<br>D. eval 函数的定义为：eval(source, globals=None, locals=None, /)<br>参考答案：<br>A<br>下列关于Python 语言的特点的描述，错误的是（        ）。<br>A. Python 语言是非开源语言<br>B. Python 语言是跨平台语言<br>C. Python 语言是多模型语言<br>D. Python 语言是脚本语言<br>参考答案：<br>A<br>下列关于Python 的数字类型的描述，错误的是（        ）。<br>A. Python 整数类型提供了 4 种进制表示：十进制、二进制、八进制和十六进制<br>B. Python 语言要求所有浮点数必须带有小数部分<br>C. Python 语言中，复数类型中实数部分和虚数部分的数值都是浮点类型，复数的虚数部分通过后缀”C”或者”c”来表示<br>D. Python 语言提供 int、float、complex 等数字类型<br>参考答案：<br>C<br>下列关于Python循环结构的描述，错误的是（        ）。<br>A. 遍历循环中的遍历结构可以是字符串、文件、组合数据类型和range()函数等<br>B. break用来跳出最内层for或者while循环，脱离该循环后程序从循环代码后继续执行<br>C. 每个continue语句只有能力跳出当前层次的循环<br>D. Python通过for、while等保留字提供遍历循环和无限循环结构<br>参考答案：<br>C<br>下列关于Python的全局变量和局部变量的描述，错误的是（        ）。<br>A. 局部变量指在函数内部使用的变量，当函数退出时，变量依然存在，下次函数调用可以继续使用<br>B. 使用global保留字声明简单数据类型变量后，该变量作为全局变量使用<br>C. 简单数据类型变量无论是否与全局变量重名，仅在函数内部创建和使用，函数退出后变量被释放<br>D. 全局变量指在函数之外定义的变量，一般没有缩进，在程序执行全过程有效<br>参考答案：<br>A<br>下列关于Python的lambda函数的描述，错误的是（        ）。<br>A. 可以使用lambda函数定义列表的排序原则<br>B. f = lambda x, y: x + y 执行后，f的类型为数字类型<br>C. lambda函数将函数名作为函数结果返回<br>D. lambda用于定义简单的、能够在一行内表示的函数<br>参考答案：<br>B<br>下面程序实现的功能描述是（        ）。</p><p>def fact(n):<br>    if n == 0:<br>        return 1<br>    else:<br>        return n * fact(n - 1)<br>num = eval(input(“请输入一个整数：”))<br>print(fact(abs(int(num))))<br>A. 接受用户输入的整数 n，判断 n 是否是素数并输出结论<br>B. 接受用户输入的整数 n，判断 n 是否是完数并输出结论<br>C. 接受用户输入的整数 n，判断 n 是否是水仙花数<br>D. 接受用户输入的整数 n，输出 n 的阶乘值<br>参考答案：<br>D<br>执行如下程序：</p><p>import time<br>print(time.time())<br>下列选项中的描述，错误的是（        ）。<br>A. time 库是 Python 的标准库<br>B. 可使用time.ctime()，显示为更可读的形式<br>C. time.sleep(5) 推迟调用线程的运行，单位为毫秒<br>D. 输出自1970年1月1日00:00:00 AM 以来的秒数<br>参考答案：<br>C<br>执行后可以查看Python的版本的是（        ）。<br>A.<br>import sys<br>print(sys.Version)</p><p>B.<br>import system<br>print(system.version)</p><p>C.<br>import system<br>print(system.Version)</p><p>D.<br>import sys<br>print(sys.version)</p><p>参考答案：<br>D<br>下列关于Python的组合数据类型的描述，错误的是（        ）。<br>A. 组合数据类型可以分为3类：序列类型、集合类型和映射类型<br>B. 序列类型是二维元素向量，元素之间存在先后关系，通过序号访问<br>C. Python的str、tuple和list类型都属于序列类型<br>D. Python组合数据类型能够将多个同类型或不同类型的数据组织起来，通过单一的表示使数据操作更有序、更容易<br>参考答案：<br>B<br>下列选项中，不是Python对文件的读操作方法的是（        ）。<br>A. readline<br>B. readlines<br>C. readtext<br>D. read<br>参考答案：<br>C<br>下列关于Python文件处理的描述，错误的是（        ）。<br>A. Python能处理JPG图像文件<br>B. Python不可以处理PDF文件<br>C. Python能处理CSV文件<br>D. Python能处理Excel文件<br>参考答案：<br>B<br>下列选项中，不是Python对文件的打开模式的是（        ）。<br>A. ‘w’<br>B. ‘+’<br>C. ‘c’<br>D. ‘r’<br>参考答案：<br>C<br>下面程序的输出结果是（        ）。</p><p>x=0b1010<br>print(x)<br>A. 16<br>B. 256<br>C. 1024<br>D. 10<br>参考答案：<br>D<br>下面程序的输出结果是（        ）。</p><p>x = 10<br>y = -1 + 2j<br>print(x + y)<br>A. 9<br>B. 2j<br>C. 11<br>D. (9+2j)<br>参考答案：<br>D<br>下面程序的输出结果是（        ）。</p><p>x = 3.1415926<br>print(round(x, 2) , round(x))<br>A. 3 3.14<br>B. 2 2<br>C. 6.28 3<br>D. 3.14 3<br>参考答案：<br>D<br>下面程序的输出结果是（        ）。</p><p>x = 3.1415926<br>print(round(x, 2) , round(x))<br>A. 3 3.14<br>B. 2 2<br>C. 6.28 3<br>D. 3.14 3<br>参考答案：<br>D<br>下面程序的输出结果是（        ）。</p><p>for s in “HelloWorld”:<br>    if s == “W”:<br>        break<br>    print(s, end=””)<br>A. Hello<br>B. World<br>C. HelloWorld<br>D. Helloorld<br>参考答案：<br>A<br>下列选项中，输出结果是False的是（        ）。<br>A. &gt;&gt;&gt; 5 is not 4<br>B. &gt;&gt;&gt; 5 != 4<br>C. &gt;&gt;&gt; False != 0<br>D. &gt;&gt;&gt; 5 is 5<br>参考答案：<br>C<br>下面程序的输出结果是（        ）。</p><p>a = 1000000<br>b = “-“<br>print(“{0:{2}^{1},}\n{0:{2}&gt;{1},}\n{0:{2}&lt;{1},}”.format(a,30,b))<br>A.<br>1,000,000———————<br>———————1,000,000<br>———-1,000,000———–</p><p>B.<br>———————1,000,000<br>1,000,000———————<br>———-1,000,000———–</p><p>C.<br>———————1,000,000<br>———-1,000,000———–<br>1,000,000———————</p><p>D.<br>———-1,000,000———–<br>———————1,000,000<br>1,000,000———————</p><p>参考答案：<br>D<br>下面程序的输出结果是（        ）。</p><p>s = [“seashell”, “gold”, “pink”, “brown”, “purple”, “tomato”]<br>print(s[4:])<br>A. [‘purple’]<br>B. [‘seashell’, ‘gold’, ‘pink’, ‘brown’]<br>C. [‘gold’, ‘pink’, ‘brown’, ‘purple’, ‘tomato’]<br>D. [‘purple’, ‘tomato’]<br>参考答案：<br>D<br>执行如下代码：</p><p>import turtle as t<br>def DrawCctCircle(n):<br>    t.penup()<br>    t.goto(0,-n)<br>    t.pendown()<br>    t.circle(n)<br>for i in range(20, 80, 20):<br>    DrawCctCircle(i)<br>t.done()<br>在 Python Turtle Graphics 中，绘制的图形是（        ）。<br>A. 同切圆<br>B. 同心圆<br>C. 笛卡尔心形<br>D. 太极<br>参考答案：<br>B<br>给出如下代码：</p><p>fname = input(“请输入要打开的文件: “)<br>fo = open(fname, “r”)<br>for line in fo.readlines():<br>    print(line)<br>fo.close()<br>下列关于上述代码的描述，错误的是（        ）。<br>A. 通过fo.readlines()方法将文件的全部内容读入一个字典fo<br>B. 通过fo.readlines()方法将文件的全部内容读入一个列表fo<br>C. 上述代码可以优化为：</p><p>fname = input(“请输入要打开的文件: “)<br>with open(fname, “r”) as fo:<br>    for line in fo.readlines():<br>        print(line)</p><p>D. 用户输入文件路径，以文本文件方式读入文件内容并逐行打印<br>参考答案：<br>A<br>能实现将一维数据写入CSV文件中的是（        ）。<br>A.<br>fo = open(“price2016bj.csv”, “w”)<br>lst = [‘AAA’, ‘BBB’, ‘CCC’, ‘DDD’]<br>fo.write(“,”.join(lst) + “\n”)<br>fo.close()</p><p>B.<br>fr = open(“price2016.csv”, “w”)<br>lst = []<br>for line in fo:<br>    line = line.replace(“\n”, “”)<br>    lst.append(line.split(“,”))<br>print(lst)<br>fo.close()</p><p>C.<br>fo = open(“price2016bj.csv”, “r”)<br>lst = [‘AAA’, ‘BBB’, ‘CCC’, ‘DDD’]<br>fo.write(“,”.join(ls) + “\n”)<br>fo.close()</p><p>D.<br>fname = input(“请输入要写入的文件: “)<br>fo = open(fname, “w+”)<br>lst = [“AAA”, “BBB”, “CCC”]<br>fo.writelines(lst)<br>for line in fo:<br>    print(line)<br>fo.close()</p><p>参考答案：<br>A<br>Python数据分析方向的第三方库是（        ）。<br>A. pdfminer<br>B. beautifulsoup4<br>C. time<br>D. numpy<br>参考答案：<br>D<br>Python Web开发方向的第三方库是（        ）。<br>A. Django<br>B. scipy<br>C. pandas<br>D. requests<br>参考答案：<br>A<br>下列选项中，不是Python文件读操作方法的是（        ）。<br>A. readline<br>B. readlines<br>C. readtext<br>D. read<br>参考答案：<br>C<br>下列选项中，说法错误的是（        ）。<br>A. C语言是静态语言，Python语言是脚本语言<br>B. 编译是将源代码转换成目标代码的过程<br>C. 解释是将源代码逐条转换成目标代码同时逐条运行目标代码的过程<br>D. 静态语言采用解释方式执行，脚本语言采用编译方式执行<br>参考答案：<br>D<br>下列选项中，不是Python语言特点的是（        ）。<br>A. 变量声明：Python语言具有使用变量需要先定义后使用的特点<br>B. 平台无关：Python程序可以在任何安装了解释器的操作系统环境中执行<br>C. 黏性扩展：Python语言能够集成C、C++等语言编写的代码<br>D. 强制可读：Python语言通过强制缩进来体现语句间的逻辑关系<br>参考答案：<br>A<br>拟在屏幕上打印输出”Hello World”，下列选项中，正确的是（        ）。<br>A. print(‘Hello World’)<br>B. printf(“Hello World”)<br>C. printf(‘Hello World’)<br>D. print(Hello World)<br>参考答案：<br>A<br>IDLE环境的退出命令是（        ）。<br>A. esc()<br>B. close()<br>C. 回车键<br>D. exit()<br>参考答案：<br>D<br>下列选项中，不符合Python语言变量命名规则的是（        ）。<br>A. keyword33_<br>B. 33_keyword<br>C. _33keyword<br>D. keyword_33<br>参考答案：<br>B<br>下列选项中，不是Python语言保留字的是（        ）。<br>A. while<br>B. continue<br>C. goto<br>D. for<br>参考答案：<br>C<br>下列选项中，Python语言中代码注释使用的符号是（        ）。<br>A. /<em>… …</em>/<br>B. !<br>C. #<br>D. //<br>参考答案：<br>C<br>下列关于Python语言的变量的说法，正确的是（        ）。<br>A. 随时声明、随时使用、随时释放<br>B. 随时命名、随时赋值、随时使用<br>C. 随时声明、随时赋值、随时变换类型<br>D. 随时命名、随时赋值、随时变换类型<br>参考答案：<br>B<br>Python语言提供的3个基本数字类型是（        ）。<br>A. 整数类型、浮点数类型、复数类型<br>B. 整数类型、二进制类型、浮点数类型<br>C. 整数类型、八进制类型、复数类型<br>D. 整数类型、十六进制类型、浮点数类型<br>参考答案：<br>A<br>下列选项中，不属于IPO模式一部分的是（        ）。<br>A. Program (程序)<br>B. Process (处理)<br>C. Output (输出)<br>D. Input (输入)<br>参考答案：<br>A<br>下列选项中，属于Python语言中合法的二进制整数是（        ）。<br>A. 0B1010<br>B. 0B1019<br>C. 0bC3F<br>D. 0b1708<br>参考答案：<br>A<br>下列关于Python语言的浮点数类型的描述，错误的是（        ）。<br>A. 浮点数类型表示带有小数的类型<br>B. Python语言要求所有浮点数必须带有小数部分<br>C. 小数部分不可以为0<br>D. 浮点数类型与数学中实数的概念一致<br>参考答案：<br>C<br>下列关于Python语言数值操作符的描述，错误的是（        ）。<br>A. x//y表示x与y之整数商，即不大于x与y之商的最大整数<br>B. x**y表示x的y次幂，其中，y必须是整数<br>C. x%y表示x与y之商的余数，也称为模运算<br>D. x/y表示x与y之商<br>参考答案：<br>B<br>下列选项中，不是Python语言基本控制结构的是（        ）。<br>A. 程序异常<br>B. 循环结构<br>C. 跳转结构<br>D. 顺序结构<br>参考答案：<br>C<br>下列关于分支结构的描述，错误的是（        ）。<br>A. if 语句中条件部分可以使用任何能够产生True和False的语句和函数<br>B. 二分支结构有一种紧凑形式，使用保留字if和elif实现<br>C. 多分支结构用于设置多个判断条件以及对应的多条执行路径<br>D. if 语句中语句块执行与否依赖于条件判断<br>参考答案：<br>B<br>下列关于Python函数的描述，错误的是（        ）。<br>A. 函数是一段可重用的语句组<br>B. 函数通过函数名进行调用<br>C. 每次使用函数需要提供相同的参数作为输入<br>D. 函数是一段具有特定功能的语句组<br>参考答案：<br>C<br>下面代码的执行结果是（        ）。</p><blockquote><blockquote><blockquote><p>1.23e-4+5.67e+8j.real<br>A. 1.23<br>B. 5.67e+8<br>C. 1.23e4<br>D. 0.000123<br>参考答案：<br>D<br>下面代码的执行结果是（        ）。</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>s = “11+5in”<br>eval(s[1:-2])<br>A. 6<br>B. 11+5<br>C. 执行错误<br>D. 16<br>参考答案：<br>A<br>下面代码的执行结果是（        ）。</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>abs(-3+4j)<br>A. 4.0<br>B. 5.0<br>C. 执行错误<br>D. 3.0<br>参考答案：<br>B<br>下面代码的执行结果是（        ）。</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>x = 2<br>x *= 3 + 5**2<br>A. 15<br>B. 56<br>C. 8192<br>D. 13<br>参考答案：<br>B<br>下面代码的执行结果是（        ）。</p></blockquote></blockquote></blockquote><p>lst = [[1,2,3], [[4,5], 6], [7,8]]<br>print(len(lst))<br>A. 3<br>B. 4<br>C. 8<br>D. 1<br>参考答案：<br>A<br>下面代码的执行结果是（        ）。</p><p>a = “Python等级考试”<br>b = “=”<br>c = “&gt;”<br>print(“{0:{1}{3}{2}}”.format(a, b, 25, c))<br>A. Python等级考试===============<br>B. &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;Python等级考试<br>C. Python等级考试===============<br>D. ===============Python等级考试<br>参考答案：<br>D<br>下面代码的执行结果是（        ）。</p><p>lst = [“2020”, “20.20”, “Python”]<br>lst.append(2020)<br>lst.append([2020, “2020”])<br>print(lst)<br>A. [‘2020’, ‘20.20’, ‘Python’, 2020]<br>B. [‘2020’, ‘20.20’, ‘Python’, 2020, [2020, ‘2020’]]<br>C. [‘2020’, ‘20.20’, ‘Python’, 2020, [‘2020’]]<br>D. [‘2020’, ‘20.20’, ‘Python’, 2020, 2020, ‘2020’]<br>参考答案：<br>B<br>设city.csv文件内容如下：</p><p>巴哈马,巴林,孟加拉国,巴巴多斯<br>白俄罗斯,比利时,伯利兹<br>下面代码的执行结果是（        ）。</p><p>f = open(“city.csv”, “r”)<br>lst = f.read().split(“,”)<br>f.close()<br>print(lst)<br>A. [‘巴哈马’, ‘巴林’, ‘孟加拉国’, ‘巴巴多斯\n白俄罗斯’, ‘比利时’, ‘伯利兹’]<br>B. [‘巴哈马, 巴林, 孟加拉国, 巴巴多斯, 白俄罗斯, 比利时, 伯利兹’]<br>C. [‘巴哈马’, ‘巴林’, ‘孟加拉国’, ‘巴巴多斯’, ‘\n’, ‘白俄罗斯’, ‘比利时’, ‘伯利兹’]<br>D. [‘巴哈马’, ‘巴林’, ‘孟加拉国’, ‘巴巴多斯’, ‘白俄罗斯’, ‘比利时’, ‘伯利兹’]<br>参考答案：<br>A<br>下面代码的执行结果是（        ）。</p><p>d = {}<br>for i in range(26):<br>    d[chr(i + ord(“a”))] = chr((i + 13) % 26 + ord(“a”))<br>for c in “Python”:<br>    print(d.get(c, c), end=””)<br>A. Cabugl<br>B. Python<br>C. Pabugl<br>D. Plguba<br>参考答案：<br>D<br>给出如下代码：</p><p>while True:<br>    guess = eval(input())<br>    if guess == 0x452//2:<br>        break<br>作为输入能够结束程序运行的是（        ）。<br>A. 553<br>B. 0x452<br>C. “0x452//2”<br>D. break<br>参考答案：<br>A<br>下列选项中，不是Python中用于开发用户界面的第三方库是（        ）。<br>A. PyQt<br>B. wxPython<br>C. PyGTK<br>D. turtle<br>参考答案：<br>D<br>下列选项中，不是Python中用于进行数据分析及可视化处理的第三方库是（        ）。<br>A. pandas<br>B. Mayavi2<br>C. MXNet<br>D. numpy<br>参考答案：<br>C<br>列选项中，不是Python中用于进行Web开发的第三方库是<br>A. Django<br>B. scrapy<br>C. Pyramid<br>D. Flask<br>参考答案：<br>B<br>Python文件的后缀名是（        ）。<br>A. pdf<br>B. do<br>C. pass<br>D. py<br>参考答案：<br>D<br>下面代码的输出结果是（        ）。</p><p>print( 0.1 + 0.2 == 0.3)<br>A. False<br>B. 1<br>C. 0<br>D. True<br>参考答案：<br>A<br>下列不是Python语言保留字的是（        ）。<br>A. except<br>B. do<br>C. pass<br>D. while<br>参考答案：<br>B<br>下面代码的执行结果（        ）。</p><p>a = 10.99<br>print(complex(a))<br>A. 10.99+j<br>B. 10.99<br>C. 0.99<br>D. (10.99+0j)<br>参考答案：<br>D<br>下列关于Python 字符编码的描述，错误的是（        ）。<br>A. chr(x) 和 ord(x) 函数用于在单字符和 Unicode 编码值之间进行转换<br>B. print chr(65) 输出 A<br>C. print(ord(‘a’)) 输出 97<br>D. Python 字符编码使用 ASCII 编码<br>参考答案：<br>D<br>下列关于Python循环结构的描述，错误的是（        ）。<br>A. 遍历循环中的遍历结构可以是字符串、文件、组合数据类型和range()函数等<br>B. break用来结束当前当次语句，但不跳出当前的循环体<br>C. continue只结束本次循环<br>D. Python通过for、while等保留字构建循环结构<br>参考答案：<br>B<br>出如下代码：</p><p>import random<br>num = random.randint(1,10)<br>while True:<br>    if num &gt;= 9:<br>        break<br>    else:<br>        num = random.randint(1,10)<br>以下选项中，描述错误的是（        ）。</p><p>A. 这段代码的功能是程序自动猜数字<br>B. import random代码是可以省略的<br>C. while True: 创建了一个永远执行的循环<br>D. random.randint(1,10) 生成[1,10]之间的整数<br>参考答案：<br>B<br>下列对于列表lst的操作的描述，错误的是（        ）。<br>A. lst.clear()：删除ls的最后一个元素<br>B. lst.copy()：生成一个新列表，复制lst的所有元素<br>C. lst.reverse()：列表lst的所有元素反转<br>D. lst.append(x)：在lst最后增加一个元素<br>参考答案：<br>A<br>下面代码的输出结果是（        ）。</p><p>lst = list(range(5))<br>print(2 in lst)<br>A. False<br>B. 0<br>C. -1<br>D. True<br>参考答案：<br>D<br>给出如下代码：</p><p>import random as r<br>lst = []<br>r.seed(100)<br>for i in range(10):<br>    i = r.randint(100, 999)<br>    lst.append(i)<br>以下选项中能输出随机列表元素最大值的是（        ）。<br>A. print(lst.max())<br>B. print(lst.pop(i))<br>C. print(max(lst))<br>D. print(lst.reverse(i))<br>参考答案：<br>C<br>给出如下代码：</p><p>MonthandFlower = {“1月”:”梅花”,”2月”:”杏花”,”3月”:”桃花”,”4月”:”牡丹花”,<br>“5月”:”石榴花”,”6月”:”莲花”,”7月”:”玉簪花”,”8月”:”桂花”,<br>“9月”:”菊花”,”10月”:”芙蓉花”,”11月”:”山茶花”,”12月”:”水仙花”}<br>n = input(“请输入1—12的月份:”)<br>print(n + “月份之代表花：” + MonthandFlower.get(str(n)+”月”))<br>以下选项中描述正确的是（        ）。<br>A. 代码实现了获取一个整数（1—12）来表示月份，输出该月份对应的代表花名<br>B. MonthandFlower是列表类型变量<br>C. MonthandFlower是一个元组<br>D. MonthandFlower是集合类型变量<br>参考答案：<br>A<br>下列关于Python文件打开模式的描述，错误的是（        ）。<br>A. 覆盖写模式w<br>B. 追加写模式a<br>C. 创建写模式n<br>D. 只读模式r<br>参考答案：<br>C<br>执行如下代码：</p><p>fname = input(“请输入要写入的文件: “)<br>fo = open(fname, “w+”)<br>lst = [“清明时节雨纷纷，”,”路上行人欲断魂，”,”借问酒家何处有？”,”牧童遥指杏花村。”]<br>fo.writelines(lst)<br>fo.seek(0)<br>for line in fo:<br>    print(line)<br>fo.close()<br>以下选项中，描述错误的是（        ）。<br>A. fo.writelines(ls)将元素全为字符串的lst列表写入文件<br>B. fo.seek(0)这行代码如果省略，也能打印输出文件内容<br>C. 代码主要功能为向文件写入一个列表类型，并打印输出结果<br>D. 执行代码时，从键盘输入”清明.txt”，则”清明.txt”文件被创建<br>参考答案：<br>B<br>下列关于CSV文件的描述，错误的是（        ）。<br>A. CSV文件的每一行是一维数据，可以使用Python中的列表类型表示<br>B. CSV文件通过多种编码表示字符<br>C. 整个CSV文件是一个二维数据<br>D. CSV文件格式是一种通用的文件格式，应用于程序之间转移表格数据<br>参考答案：<br>B<br>以下选项中，修改turtle画笔颜色的函数是（        ）。<br>A. seth()<br>B. colormode()<br>C. bk()<br>D. pencolor()<br>参考答案：<br>D<br>给出如下代码：</p><p>temp_str = “Hello World”<br>以下选项中可以输出”World”子串的是（        ）。<br>A. print(temp_str[–5:–1])<br>B. print(temp_str[–5:0])<br>C. print(temp_str[–4: –1])<br>D. print(temp_str[–5:])<br>参考答案：<br>D<br>下面代码的输出结果是（        ）。</p><p>x = 12.34<br>print(type(x))<br>A. &lt;class ‘int’&gt;<br>B. &lt;class ‘float’&gt;<br>C. &lt;class ‘bool’&gt;<br>D. &lt;class ‘complex’&gt;<br>参考答案：<br>B<br>下面代码的输出结果是（        ）。</p><p>x=10<br>y=3<br>print(x % y, x ** y)<br>A. 3 1000<br>B. 1 30<br>C. 3 30<br>D. 1 1000<br>参考答案：<br>D<br>执行如下代码：</p><p>import turtle as t<br>for i in range(1, 5):<br>    t.fd(50)<br>    t.left(90)<br>在Python Turtle Graphics中，绘制的是（        ）。<br>A. 五边形<br>B. 三角形<br>C. 五角星<br>D. 正方形<br>参考答案：<br>D<br>设一年356天，第1天的能力值为基数记为1.0。当好好学习时能力值相比前一天会提高千分之五。以下选项中，不能获得持续努力1年后的能力值的是（        ）。<br>A. 1.005 ** 365<br>B. pow((1.0 + 0.005), 365)<br>C. 1.005 // 365<br>D. pow(1.0 + 0.005, 365)<br>参考答案：<br>C<br>给出如下代码：</p><p>s = list(“巴老爷有八十八棵芭蕉树，来了八十八个把式要在巴老爷八十八棵芭蕉树下住。<br>老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住。八十八个把式<br>烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。”)<br>以下选项中能输出字符”八”出现次数的是（        ）。<br>A. print(s.index(“八”))<br>B. print(s.index(“八”), 6)<br>C. print(s.index(“八”), 6, len(s))<br>D. print(s.count(“八”))<br>参考答案：<br>D<br>下面代码的输出结果是（        ）。</p><p>vlist = list(range(5))<br>print(vlist)<br>A. 0 1 2 3 4<br>B. 0,1,2,3,4,<br>C. 0;1;2;3;4;<br>D. [0, 1, 2, 3, 4]<br>参考答案：<br>D<br>下面代码的输出结果是（        ）。</p><p>vlist = list(range(5))<br>print(vlist)<br>A. 0 1 2 3 4<br>B. 0,1,2,3,4,<br>C. 0;1;2;3;4;<br>D. [0, 1, 2, 3, 4]<br>参考答案：<br>D<br>如果name = “全国计算机等级考试二级Python”，以下选项中输出错误的是（        ）。<br>A.</p><blockquote><blockquote><blockquote><p>print(name[:])<br>全国计算机等级考试二级<br>B.<br>print(name[11:])<br>Python<br>C.<br>print(name[:11])<br>全国计算机等级考试二级<br>D.<br>print(name[0], name[8], name[-1])<br>全 试<br>参考答案：<br>D<br>下列程序的运行结果是（        ）。</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>s = ‘PYTHON’<br>“{0:3}”.format(s)<br>A. ‘PYTH’<br>B. ‘PYTHON’<br>C. ‘ PYTHON’<br>D. ‘PYT’<br>参考答案：<br>B<br>关于time库的描述，以下选项中错误的是（        ）。<br>A. time库提供获取系统时间并格式化输出功能<br>B. time.sleep(s)的作用是休眠s秒<br>C. time.perf_counter()返回一个固定的时间计数值<br>D. time库是Python中处理时间的标准库<br>参考答案：<br>C<br>关于jieba库的描述，以下选项中错误的是（        ）。<br>A. jieba.cut(s)是精确模式，返回一个可迭代的数据类型<br>B. jieba.lcut(s)是精确模式，返回列表类型<br>C. jieba.add_word(s)是向分词词典里增加新词s<br>D. jieba是Python中一个重要的标准函数库<br>参考答案：<br>D<br>以下选项中，Python网络爬虫方向的第三方库是（        ）。<br>A. numpy<br>B. openpyxl<br>C. PyQt<br>D. scrapy<br>参考答案：<br>D<br>以下选项中，Python数据分析方向的第三方库是（        ）。<br>A. PIL<br>B. Django<br>C. pandas<br>D. Flask<br>参考答案：<br>C<br>以下选项中，Python机器学习方向的第三方库是（        ）。<br>A. TensorFlow<br>B. scipy<br>C. PyQt<br>D. requests</p></blockquote></blockquote></blockquote><p>参考答案：<br>A<br>下列对于import保留字的描述，错误的是（        ）。<br>A. import可以用于导入函数库或者库中的函数<br>B. 可以使用from jieba import lcut 引入 jieba库<br>C. 使用import jieba as jb，引入函数库jieba，取别名jb<br>D. 使用import jieba 引入jieba库<br>参考答案：<br>B<br>下列不可用作Python标识符的是（        ）。<br>A. 3.14<br>B. 姓名<br>C. <strong>Name</strong><br>D. Pi<br>参考答案：<br>A<br>Python可以将一条长语句分成多行显示的续行符号是（        ）。<br>A. <br>B. #<br>C. ;<br>D. ‘<br>参考答案：<br>A<br>关于Python语言的特点，下列描述正确的是（        ）。<br>A. Python语言不支持面向对象<br>B. Python语言是解释型语言<br>C. Python语言是编译型语言<br>D. Python语言是非跨平台语言<br>参考答案：<br>B<br>关于Python整数类型，下列描述正确的是（        ）。<br>A. 3.14不是整数类型的数值<br>B. 表达式type(100)的结果可能是&lt;class ‘int’&gt;，也可能是&lt;class ‘float’&gt;<br>C. 表达式oct(100)的结果是十六进制数<br>D. 表达式hex(100)的结果是八进制数<br>参考答案：<br>A<br>运行以下程序，输出结果是（        ）。</p><blockquote><blockquote><blockquote><p>5/2<br>A. 3<br>B. 2<br>C. 2.5<br>D. 2.50<br>参考答案：<br>C<br>运行以下程序，输出的Python数据类型是（        ）。</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>type(abs(-3+4j))<br>A. 字符串类型<br>B. 浮点数类型<br>C. 整数类型<br>D. 复数类型<br>参考答案：<br>B<br>下面程序的输出结果是（        ）。</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>TempStr = “Pi=3.141593”<br>eval(TempStr[3:-1])<br>A. 3.14159<br>B. 3.141593<br>C. Pi=3.14<br>D. 3.1416<br>参考答案：<br>A<br>下列关于异常处理的描述，错误的是（        ）。<br>A. Python通过try、except等保留字提供异常处理功能<br>B. ZeroDivisionError是一个变量未命名错误<br>C. NameError是一种异常类型<br>D. 异常语句可以与else和finally语句配合使用<br>参考答案：<br>B<br>for或者while与else搭配使用时，关于执行else语句块的描述，正确的是（        ）。<br>A. 仅循环非正常结束后执行（以break结束）<br>B. 仅循环正常结束后执行<br>C. 总会执行<br>D. 永不执行<br>参考答案：<br>B<br>下列程序执行的输出结果是（        ）。</p></blockquote></blockquote></blockquote><p>for i in range(1,4):<br>    print(chr(21646)<em>(2</em>i-1))<br>A.<br>  咎<br> 咎咎咎<br>咎咎咎咎咎<br>B.<br>咎<br>咎咎咎<br>咎咎咎咎咎<br>C.<br>    咎<br>  咎咎咎<br>咎咎咎咎咎<br>D. 出错<br>参考答案：<br>B<br> random库的seed(a)函数的作用是（        ）。<br>A. 生成一个[0.0, 1.0)之间的随机小数<br>B. 生成一个k比特长度的随机整数<br>C. 设置初始化随机数种子a<br>D. 生成一个随机整数<br>参考答案：<br>C<br>下列程序执行的输出结果是（        ）。</p><p>for n in range(400,500):<br>    i = n // 100<br>    j = n // 10 % 10<br>    k = n % 10<br>    if n == i ** 3 + j ** 3 + k ** 3:<br>        print(n)<br>A. 407<br>B. 408<br>C. 153<br>D. 159<br>参考答案：<br>A<br>给出下面代码：<br>a = input().split(“,”)<br>x = 0<br>while x &lt; len(a):<br>    print(a[x], end=’’)<br>    x += 1<br>代码执行时，从键盘输入：Python语言,是,脚本,语言。</p><p>则代码的输出结果是（        ）。</p><p>A. 执行代码出错<br>B. Python语言,是,脚本,语言<br>C. Python语言是脚本语言<br>D. 无输出<br>参考答案：<br>C<br>下列关于函数的描述，错误的是（        ）。<br>A. Python使用del保留字定义一个函数<br>B. 函数能完成特定的功能，对函数的使用不需要了解函数内部实现原理，只要了解函数的输入输出方式即可<br>C. 函数是一段具有特定功能的、可重用的语句组<br>D. 使用函数的主要目的是减低编程难度和代码重用<br>参考答案：<br>A<br>执行下列程序，运行错误的是（        ）。<br>def fun(x, y = “Name”, z = “No”):<br>    pass<br>A. fun(1, 2, 3)<br>B. fun(1,,3)<br>C. fun(1)<br>D. fun(1, 2)<br>参考答案：<br>B<br>下列程序执行的输出结果是（        ）。</p><p>def split(s):<br>    return s.split(‘a’)<br>s = “Happy birthday to you!”<br>print(split(s))<br>A. [‘H’, ‘ppy birthd’, ‘y to you!’]<br>B. “Happy birthday to you!”<br>C. 运行出错<br>D. [‘Happy’, ‘birthday’, ‘to’, ‘you!’]<br>参考答案：<br>A<br>下列程序执行的输出结果是（        ）。</p><p>n = 2<br>def multiply(x, y = 10):<br>    global n<br>    return x * y * n<br>s = multiply(10, 2)<br>print(s)<br>A. 40<br>B. 1024<br>C. 200<br>D. 400<br>参考答案：<br>A<br>字典d = {‘Name’: ‘Kate’, ‘No’: ‘1001’, ‘Age’: ‘20’}，表达式len(d)的值为（        ）。<br>A. 12<br>B. 9<br>C. 6<br>D. 3<br>参考答案：<br>D<br>元组变量t = (“cat”, “dog”, “tiger”, “human”)，t[::-1]的结果是（        ）。<br>A. {‘human’, ‘tiger’, ‘dog’, ‘cat’}<br>B. [‘human’, ‘tiger’, ‘dog’, ‘cat’]<br>C. 运行出错<br>D. (‘human’, ‘tiger’, ‘dog’, ‘cat’)<br>参考答案：<br>D<br>下列关于Python列表的描述，错误的是（        ）。<br>A. Python列表是包含0个或者多个对象引用的有序序列<br>B. Python列表用中括号[]表示<br>C. Python列表是一个可以修改数据项的序列类型<br>D. Python列表的长度不可变的<br>参考答案：<br>D<br>下列程序执行的输出结果是（        ）。</p><p>lst = []<br>def func(a, b):<br>    lst.append(b)<br>    return a * b<br>s = func(“Hello!”, 2)<br>print(s, lst)<br>A. 出错<br>B. Hello!Hello!<br>C. Hello!Hello! [2]<br>D. Hello!Hello! []<br>参考答案：<br>C<br>下列程序执行的输出结果是（        ）。</p><p>def fun1():<br>    print(“in fun1()”)<br>    fun2()<br>fun1()<br>def fun2():<br>    print(“in fun2()”)<br>    fun1()<br>fun2()<br>A. in fun1()<br>in fun2()<br>B. in fun1()<br>C. 死循环<br>D. 出错<br>参考答案：<br>D<br>下列关于Python文件’+’打开模式的描述，正确的是（        ）。<br>A. 追加写模式<br>B. 与r/w/a/x一同使用，在原功能基础上增加同时读写功能<br>C. 只读模式<br>D. 覆盖写模式<br>参考答案：<br>B<br>下列关于CSV文件的描述，错误的是（        ）。<br>A. CSV文件可用于不同工具间进行数据交换<br>B. CSV文件格式是一种通用的，相对简单的文件格式，应用于程序之间转移表格数据<br>C. CSV文件通过多种编码表示字符<br>D. CSV文件的每一行是一维数据，可以使用Python中的列表类型表示<br>参考答案：<br>C<br>下列关于Python文件对象f的描述，错误的是（        ）。<br>A. f.closed文件关闭属性，当文件关闭时，值为False<br>B. f.writable()用于判断文件是否可写<br>C. f.readable()用于判断文件是否可读<br>D. f.seekable()判断文件是否支持随机访问<br>参考答案：<br>A<br>关于下列程序的描述，错误的是（        ）。</p><p>with open(‘abc.txt’, ‘r+’) as f:<br>    lines = f.readlines()<br>for item in lines:<br>    print(item)<br>A. 执行代码后，abc.txt文件未关闭，必须通过close()函数关闭<br>B. 打印输出abc.txt文件内容<br>C. item是字符串类型<br>D. lines是列表类型<br>参考答案：<br>A<br>下列关于TensorFlow第三方库的应用领域的描述，正确的是（        ）。<br>A. 机器学习<br>B. 数据可视化<br>C. Web开发<br>D. 文本分析<br>参考答案：<br>A<br>下列不属于Python深度学习第三方库的是（        ）。<br>A. Arcade<br>B. TensorFlow<br>C. Caffe2<br>D. MXNet<br>参考答案：<br>A<br>下列属于Python文件处理第三方库的是（        ）。<br>A. matplotlib<br>B. openpyxl<br>C. wxPython<br>D. vispy<br>参考答案：<br>B<br>下列关于程序设计语言的描述，错误的是（        ）。<br>A. Python语言是一种脚本编程语言<br>B. 汇编语言是直接操作计算机硬件的编程语言<br>C. 程序设计语言经历了机器语言、汇编语言、脚本语言三个阶段<br>D. 编译和解释的区别是一次性翻译程序还是每次执行时都要翻译程序<br>参考答案：<br>C<br>表达式1001 == 0x3e7的计算结果是（         ）。<br>A. false<br>B. False<br>C. true<br>D. True<br>参考答案：<br>B<br>下列选项，不是Python保留字的是（         ）。<br>A. del<br>B. pass<br>C. not<br>D. string<br>参考答案：<br>D<br>表达式eval(‘500/10’) 的计算结果是（         ）。<br>A. ‘500/10’<br>B. 500/10<br>C. 50<br>D. 50.0<br>参考答案：<br>D<br>表达式type(eval(‘45’)) 的计算结果是（         ）。<br>A. &lt;class ‘int’&gt;<br>B. &lt;class ‘str’&gt;<br>C. None<br>D. &lt;class ‘float’&gt;<br>参考答案：<br>A<br>表达式divmod(20, 3)的计算结果是（         ）。<br>A. 6, 2<br>B. (6, 2)<br>C. 6<br>D. 2<br>参考答案：<br>B<br>下列关于字符串操作的描述，错误的是（         ）。<br>A. s.replace(x, y)方法把字符串s中所有的x子串都替换成y子串<br>B. 想把一个字符串s中所有的字符都大写，用s.upper()<br>C. 想获取字符串s的长度，用字符串处理函数 s.len()<br>D. 设x = ‘aa’，则执行x * 3的结果是’aaaaaa’<br>参考答案：<br>C<br>设s = ‘python’，想把字符串的第一个字母大写，其他字母还是小写，正确的是（         ）。<br>A. print(s[0].upper() + s[1:])<br>B. print(s[1].upper() + s[-1:1])<br>C. print(s[0].upper() + str[1:-1])<br>D. print(s[1].upper() + s[2:])<br>参考答案：<br>A<br>下列关于循环结构的描述，错误的是（         ）。<br>A. 遍历循环使用for &lt;循环变量&gt; in &lt;循环结构&gt;语句，其中循环结构不能是文件<br>B. 使用range()函数可以指定for循环的次数<br>C. for i in range(5)表示循环5次，i的值是从0到4<br>D. 用字符串做循环结构的时候，循环的次数是字符串的长度<br>参考答案：<br>A<br>执行下列程序，输入”94python07”，输出结果是（         ）。<br>s = input()<br>for x in s:<br>    if ‘0’ &lt;= x &lt;= ‘9’:<br>        continue<br>    else:<br>        s.replace(x,’’)<br>print(s)<br>A. python9407<br>B. python<br>C. 94python07<br>D. 9407<br>参考答案：<br>C<br>执行下列程序，输入”abc”，输出结果是（         ）。</p><p>abc = ‘python’<br>try:<br>    s = eval(input(“请输入整数: “))<br>    print(s * 2)<br>except:<br>    print(“请输入整数”)<br>A. abc<br>B. 请输入整数<br>C. pythonpython<br>D. python<br>参考答案：<br>C<br>执行下列程序，输入”qr”，输出结果是（         ）。</p><p>k = 0<br>while True:<br>    s = input()<br>    if s == ‘q’:<br>        k += 1<br>        continue<br>    else:<br>        k += 2<br>        break<br>print(k)<br>A. 2<br>B. 3<br>C. 没有输出<br>D. 1<br>参考答案：<br>A<br>下列程序的输出结果是（         ）。</p><p>s = 0<br>def fun(num):<br>    try:<br>        s += num<br>        return s<br>    except:<br>        return 0<br>    return 5<br>print(fun(2))<br>A. 0<br>B. 2<br>C. 没有输出<br>D. 5<br>参考答案：<br>A<br>下列关于函数的描述，错误的是（         ）。<br>A. 函数是一种功能抽象<br>B. 使用函数的目的只是为了增加代码复用<br>C. 函数名可以是任何有效的Python标识符<br>D. 使用函数后，代码的维护难度降低了<br>参考答案：<br>B<br>下列程序的输出结果是（         ）。</p><p>def foo(y = 2, x = 4):<br>    global z<br>    z += x * y<br>    return z<br>z = 10<br>print(z, foo())<br>A. 18 None<br>B. 10 18<br>C. 10 10<br>D. 18 18<br>参考答案：<br>B<br>下列程序的输出结果是（         ）。</p><p>def foo(z, x = 2.0, y = 4.0):<br>    z += x * y<br>z = 10<br>print(z, foo(z, 3))<br>A. 22.0 None<br>B. 10 None<br>C. 22 None<br>D. 10.0 22.0<br>参考答案：<br>B<br>下列表达式，正确定义了一个集合对象的是（         ）。<br>A. x = { 200, ‘flag’, 20.3}<br>B. x = (200, ‘flag’, 20.3)<br>C. x = [200, ‘flag’, 20.3]<br>D. x = {‘flag’: 20.3}<br>参考答案：<br>A<br>下列程序的输出结果是（         ）。</p><p>ss = list(set(“jzzszyj”))<br>ss.sort()<br>print(ss)<br>A. [‘z’, ‘j’,’s’, ‘y’]<br>B. [‘j’, ‘s’, ‘y’, ‘z’]<br>C. [‘j’, ‘z’,’z’, ‘s’, ‘z’, ‘y’, ‘j’]<br>D. [‘j’, ‘j’,’s’, ‘y’, ‘z’, ‘z’, ‘z’]<br>参考答案：<br>B<br>下列关于文件的描述，错误的是（         ）。<br>A. 二进制文件和文本文件的操作步骤都是”打开-操作-关闭”<br>B. open()函数打开文件之后，文件的内容并没有在内存中<br>C. open()函数只能打开一个已经存在的文件。<br>D. 文件读写之后，要调用close()函数才能确保文件被保存在磁盘中了<br>参考答案：<br>C<br>下列程序的输出结果是（         ）</p><p>img1 = [12, 34, 56, 78]<br>img2 = [1, 2, 3, 4, 5]<br>def disp():<br>    print(img1)<br>def modi():<br>    img1 = img2<br>modi()<br>disp()<br>A. ([1, 2, 3, 4, 5])<br>B. [12, 34, 56, 78]<br>C. ([12, 34, 56, 78])<br>D. [1, 2, 3, 4, 5]<br>参考答案：<br>B<br>已知id(lst1) = 4404896968，下列程序的输出结果是（         ）。</p><p>lst1 = [1,2,3,4,5]<br>lst2 = lst1<br>lst3 = lst1.copy()<br>print(id(lst2), id(lst3))<br>A. 4404896968 4404896904<br>B. 4404896904 4404896968<br>C. 4404896968 4404896968<br>D. 4404896904 4404896904<br>参考答案：<br>A<br>下列程序的输出结果是（         ）。</p><p>lst = list({‘山东’: 200, ‘河北’: 300, ‘北京’: 400})<br>print(lst)<br>A. [‘300’,’200’,’400’]<br>B. [‘山东’, ‘河北’, ‘北京’]<br>C. [300,200,400]<br>D. ‘山东’, ‘河北’, ‘北京’<br>参考答案：<br>B<br>下列程序输出到文件”text.txt”里的结果是（         ）。</p><p>with open(“text.txt”, ‘w’) as fo:<br>    x = [90, 87, 93]<br>    z = []<br>    for y in x:<br>        z.append(str(y))<br>    fo.write(“,”.join(z))<br>A. [90,87,93]<br>B. 90,87,93<br>C. ‘[90,87,93]’<br>D. ‘90,87,93’<br>参考答案：<br>B<br>下列关于turtle库的描述，正确的是。<br>A. 在import turtle之后，就可以用circle()函数来画一个圆圈<br>B. 要用from turtle import turtle来导入所有的库函数<br>C. home()函数设置当前画笔位置到原点，箭头方向朝向东<br>D. seth(x)是setheading(x)函数的别名，让画笔向前移动x<br>参考答案：<br>C<br>下列不是程序可能输出结果的是（         ）。<br>import random as r<br>lst = [12, 34, 56, 78]<br>r.shuffle(lst)<br>print(lst)<br>A. [12, 78, 56, 34]<br>B. [56, 12, 78, 34]<br>C. [12, 34, 56, 78]<br>D. [12, 78, 34, 56]<br>参考答案：<br>C<br>下列不属于Python的pip工具命令的选项是（        ）。<br>A. show<br>B. install<br>C. download<br>D. get<br>参考答案：<br>D<br>用Pyinstall工具把Python源文件打包成一个独立的可执行文件，使用的参数是（        ）。<br>A. -D<br>B. -L<br>C. -i<br>D. -F<br>参考答案：<br>D<br>下列选项中，是 Python 中文分词第三方库的是（        ）。<br>A. jieba<br>B. itchat<br>C. time<br>D. turtle<br>参考答案：<br>A<br>下列选项中，不是 Python 数据分析第三方库的是（        ）。<br>A. numpy<br>B. scipy<br>C. pandas<br>D. requests<br>参考答案：<br>D<br>Python机器学习方向的第三方库是（        ）。<br>A. PIL<br>B. PyQt<br>C. TensorFlow<br>D. random<br>参考答案：<br>C</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;执行下列程序，输出的结果是（    ）。&lt;br&gt;x, y = 1, 2&lt;br&gt;x, y = y, x&lt;br&gt;print(x, y)&lt;br&gt;A. 1 1&lt;br&gt;B. 2 2&lt;br&gt;C. 1 2&lt;br&gt;D. 2 1&lt;br&gt;参考答案：&lt;br&gt;D&lt;br&gt;关于Python程序的执行过</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://levmegf.github.io/2022/04/16/hello-world/"/>
    <id>http://levmegf.github.io/2022/04/16/hello-world/</id>
    <published>2022-04-16T15:10:01.616Z</published>
    <updated>2022-04-16T15:09:04.659Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
